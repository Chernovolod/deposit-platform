{"version":3,"sources":["views/pages/login/LoginView.js","views/pages/login/LoginContainer.js","views/pages/login/index.js"],"names":["LoginView","logInHandler","onChange","isLoading","toaster","toast","history","t","useTranslation","className","size","id","type","name","placeholder","href","xs","xl","block","color","disabled","onClick","classes","variant","push","ref","placement","connect","isLoggedIn","rest","dispatch","useDispatch","useState","setLoading","formData","setFormData","addToast","useRef","a","logInBusinessCompany","token","message","login","showErrorToast","title","autohide","close","width","height","xmlns","preserveAspectRatio","focusable","role","fill","propsData","target","value","Helmet","to","LoginContainer"],"mappings":"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","file":"static/js/36.a98bc092.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CContainer,\n  CLink,\n  CFormControl,\n  CForm,\n  CCol,\n  CToaster\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\nimport RegularLoader from '../../components/loaders/regular'\n\nconst LoginView = ({ logInHandler, onChange, isLoading, toaster, toast, history }) => {\n  const { t } = useTranslation()\n\n  return (\n    <CContainer className=\"min-vh-100 py-6 d-flex flex-column justify-content-between\">\n      <div>\n        <h1>{ t('logInToAccount') }</h1>\n        <p className=\"mb-5\">{ t('login.subtitle') }</p>\n        <CCol className=\"d-flex flex-column justify-content-between\">\n          <CForm className=\"row\">\n            <div className=\"col-12 col-md-3\">\n              <CFormControl\n                size=\"lg\"\n                id=\"email\"\n                type=\"text\"\n                name=\"email\"\n                onChange={ onChange }\n                placeholder={ t('email') }\n              />\n            </div>\n            <div className=\"mt-3 mt-md-0 col-12 col-md-3\">\n              <CFormControl\n                size=\"lg\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                onChange={ onChange }\n                placeholder={ t('password') }\n              />\n            </div>\n            <CLink className=\"mt-3 mb-3 mb-md-0\" href=\"/forgot\">{ t('goToForgot') }</CLink>\n          </CForm>\n        </CCol>\n      </div>\n      <div className=\"d-flex flex-wrap mb-4 mb-md-0 align-items-end col-12 col-md-6 mt-auto\">\n        <CCol xs={ 12 } xl={ 3 }>\n          <CButton\n            block=\"true\"\n            color=\"primary\"\n            disabled={ isLoading }\n            onClick={ logInHandler }\n            className=\"btn-lg w-100 text-white\"\n          >\n            { isLoading ? <RegularLoader classes=\"text-white\" /> : t('logIn') }\n          </CButton>\n        </CCol>\n        <CCol xs={ 12 } xl={ 6 }>\n          <CButton\n            block=\"true\"\n            color=\"primary\"\n            variant=\"outline\"\n            onClick={ () => history.push('/register') }\n            className=\"btn-lg w-100 ms-md-3 mt-3 mt-md-0\"\n          >\n            { t('goToRegister') }\n          </CButton>\n        </CCol>\n      </div>\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n    </CContainer>\n  )\n}\n\nexport default LoginView\n","import React, { useState, useRef } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport {\n  CToast,\n  CToastHeader,\n  CToastBody\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\nimport LoginView from './LoginView'\nimport { logInBusinessCompany } from 'src/services'\nimport { connect, useDispatch } from 'react-redux'\nimport { login } from 'src/store'\nimport { Helmet } from 'react-helmet'\n\nconst LoginContainer = ({ isLoggedIn, ...rest }) => {\n  const { t } = useTranslation()\n  const dispatch = useDispatch()\n  const [isLoading, setLoading] = useState(false)\n  const [formData, setFormData] = useState({})\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n\n  const logInHandler = async () => {\n    try {\n      setLoading(true)\n      const { token, message } = await logInBusinessCompany(formData)\n      if (token) {\n        setLoading(false)\n        dispatch(login(token))\n      }\n\n      if (message) {\n        setLoading(false)\n        addToast(() => showErrorToast(message))\n      }\n    } catch (error) {\n      setLoading(false)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoading(false)\n    }\n  }\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const showErrorToast = (message = '') => (\n    <CToast title={t('defaultErrorTitle')} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#EB5757\"></rect>\n        </svg>\n        <strong className=\"me-auto\">{t('defaultErrorTitle')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const propsData = {\n    ...rest,\n    onChange,\n    logInHandler,\n    isLoading,\n    toaster,\n    toast\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Войти в аккаунт | Deposit Platform</title>\n      </Helmet>\n      <LoginView {...propsData} />\n      {isLoggedIn && <Redirect to=\"/dashboard\" />}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ isLoggedIn }) => ({\n  isLoggedIn\n})\n\nexport default connect(mapStateToProps)(LoginContainer)\n","import LoginContainer from './LoginContainer'\n\nexport default LoginContainer\n"],"sourceRoot":""}