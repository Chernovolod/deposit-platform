{"version":3,"sources":["components/actionRequestsTab/ActionRequestsTab.js","components/closedRequestsTab/ClosedRequestsTab.js","components/defaultRequestsContent/DefaultRequestsContentView.js","components/defaultRequestsContent/DefaultRequestsContentContainer.js","components/defaultRequestsContent/index.js"],"names":["ActionRequestsTab","isLoading","suggestRequestHandler","isNewRequestTab","isBankUserType","setSpecificModeData","specificModeData","activeRequests","t","setPageMode","useTranslation","useState","formData","setFormData","useEffect","days","type","percentage","visible","setVisible","onClickHandler","id","target","dataset","onChange","name","value","toaster","useRef","toast","addToast","onSubmit","amount","currency","activeUntil","orderId","message","isError","title","autohide","close","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","showErrorToast","map","index","offers","referralId","revenue","alreadyOffered","classnames","xs","xl","data-id","onClick","ref","push","placement","alignment","onDismiss","component","style","backgroundColor","border","aria-describedby","autoComplete","aria-label","disabled","size","color","classes","renderSuggestRequestModal","ClosedRequestsTab","closedRequests","length","NAV_INFO","DefaultRequestsContentView","tab","userType","createdRequests","rest","USER_TYPE","BANK","activeKey","setActiveKey","variant","active","minHeight","DefaultRequestsContentContainer","setLoading","form","a","suggestOffer","propsData"],"mappings":"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","file":"static/js/30.ae8e8cd3.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport {\n  CToaster,\n  CCard,\n  CToast,\n  CToastHeader,\n  CToastBody,\n  CCol,\n  CRow,\n  CCardBody,\n  CListGroup,\n  CListGroupItem,\n  CButton,\n  CModal,\n  CModalContent,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CLink,\n  CFormFloating,\n  CFormControl,\n  CFormLabel,\n  CModalFooter, CForm, CFormText, CFormSelect\n} from '@coreui/react'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport classnames from 'classnames'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { isEmpty } from 'src/utils/objectUtils'\nimport { useTranslation } from 'react-i18next';\n\nconst ActionRequestsTab = ({\n                             isLoading,\n                             suggestRequestHandler,\n                             isNewRequestTab,\n                             isBankUserType,\n                             setSpecificModeData,\n                             specificModeData,\n                             activeRequests,\n                             setPageMode\n                           }) => {\n  const { t } = useTranslation()\n  const [formData, setFormData] = useState({})\n  useEffect(() => {\n    if (isBankUserType && isNewRequestTab) {\n      setFormData(\n        {...formData,\n        days: specificModeData.days,\n        type: specificModeData.type,\n        percentage: specificModeData.percentage\n      })\n    }\n  }, [ specificModeData ])\n\n  const [visible, setVisible] = useState(false)\n  const onClickHandler = ({ target: { dataset: { id } } }) => {\n    if (isBankUserType && isNewRequestTab) {\n      setSpecificModeData(id, true)\n      setVisible(true)\n    } else {\n      setSpecificModeData(id)\n    }\n  }\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const toaster = useRef()\n  const [toast, addToast] = useState(0)\n\n  const showErrorToast = (message = '', isError = true ) => (\n    <CToast title={isError ? t('defaultErrorTitle') : t('congratulations')} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill={ isError ? '#EB5757' : '#6FCF97' }></rect>\n        </svg>\n        <strong className=\"me-auto\">{isError ? t('defaultErrorTitle') : t('congratulations')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const onSubmit = () => {\n    suggestRequestHandler({...formData,\n      amount: specificModeData.amount,\n      currency: specificModeData.currency,\n      activeUntil: specificModeData.activeUntil,\n      orderId: specificModeData.id,\n    })\n    addToast(() => showErrorToast(t('landing.bank.requests.success'), false))\n    setVisible(false)\n  }\n\n  const setButtonContent = (status) => {\n    if (isBankUserType && isNewRequestTab) {\n      return t('requests.modal.primaryButton')\n    }\n\n    if (!isBankUserType) {\n\n    }\n\n    return t('deposits.actionDeposit.button')\n  }\n  const renderSuggestRequestModal = ({ amount, currency, percentage, type, days }) => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4\">\n        <CModalHeader className=\"ps-4\" onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('requests.bank.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"p-0\">\n          <div className=\"p-4\" style={ { backgroundColor: '#FBFBFB', border: '1px solid #F2F2F2' } }>\n            <CRow className=\"mb-3\">\n              <CCol xl={ 4 }>\n                <small className=\"text-muted\">{ t('requests.create.form.amount') }</small>\n                <h6 className=\"d-block\">{ `${ amount } ${ currency }` }</h6>\n              </CCol>\n              <CCol xl={ 4 }>\n                <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n                <span className=\"d-block\">{ percentage } %</span>\n              </CCol>\n              <CCol xl={ 4 }>\n                <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n                <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol xl={ 6 }>\n                <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n                <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n              </CCol>\n            </CRow>\n          </div>\n          <CForm className=\"row mx-0 mt-4 px-4\">\n            <CCol xl={ 2 } className=\"amount-container px-0 me-3\">\n              <CFormText component=\"span\" id=\"percentage\">{ t('requests.create.form.percentage') }</CFormText>\n              <CFormControl\n                aria-describedby=\"percentage\"\n                autoComplete=\"off\"\n                type=\"number\"\n                name=\"percentage\"\n                value={formData.percentage}\n                id=\"percentage\"\n                // placeholder=\"%\"\n                onChange={ onChange }\n              />\n            </CCol>\n            <CCol xl={ 4 }>\n              <CFormText component=\"span\" id=\"days\">{ t('requests.create.form.days') }</CFormText>\n              <CFormSelect name=\"days\"\n                           onChange={ onChange }\n                           value={formData.days}\n                           aria-describedby=\"days\" aria-label={ t('requests.create.form.days') }>\n                <option value=\"90\">{t('requests.days.90')}</option>\n                <option value=\"180\">{t('requests.days.180')}</option>\n                <option value=\"365\">{t('requests.days.365')}</option>\n                <option value=\"1095\">{t('requests.days.1095')}</option>\n              </CFormSelect>\n            </CCol>\n            <CCol xl={ 5 }>\n              <CFormText component=\"span\" id=\"type\">{ t('requests.create.form.type') }</CFormText>\n              <CFormSelect name=\"type\" value={formData.type} onChange={ onChange } aria-describedby=\"type\"\n                           aria-label={ t('requests.create.form.type') }>\n                <option value=\"REVOCABLE\">{t('Revocable')}</option>\n                <option value=\"IRREVOCABLE\">{t('Irrevocable')}</option>\n              </CFormSelect>\n            </CCol>\n          </CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start px-4 mt-5\">\n          <CButton onClick={ onSubmit } disabled={ isLoading || !formData.percentage } className=\"text-white\" size=\"sm\" color=\"primary\">\n            { isLoading ? <RegularLoader classes=\"text-white\"/> : t('requests.modal.primaryButton') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n\n  const renderActiveRequestsList = () => activeRequests.map(({\n                                                               id,\n                                                               percentage,\n                                                               amount,\n                                                               days,\n                                                               currency,\n                                                               type,\n                                                               offers,\n                                                               referralId,\n                                                               alreadyOffered,\n                                                               revenue\n                                                             }, index) => {\n    return (\n      <CListGroupItem className={classnames(\"employees py-4 px-2 px-md-3\", {\"bg-primary text-white\": isBankUserType && referralId !== null})} key={ id }>\n        <CRow className=\"m-0 align-items-stretch\">\n          <CCol className=\" mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className={isBankUserType && referralId !== null ? \"text-white\" : \"text-muted\"}>{ t('requests.create.form.amount') }</small>\n            <h6 className=\"m-0\">{ `${ amount } ${ currency }` }</h6>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className={isBankUserType && referralId !== null ? \"text-white\" : \"text-muted\"}>{ t('requests.create.form.percentage') }</small>\n            <span className=\"d-block\">{ `${ percentage } %` }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className={isBankUserType && referralId !== null ? \"text-white\" : \"text-muted\"}>{ t('requests.create.form.days') }</small>\n            <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className={isBankUserType && referralId !== null ? \"text-white\" : \"text-muted\"}>{ t('requests.create.form.type') }</small>\n            <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n          </CCol>\n          { isNewRequestTab ? \n            <CCol xs={ 6 } xl={ 2 }>\n              <small className={isBankUserType && referralId !== null ? \"text-white\" : \"text-muted\"}>{ isBankUserType ? t('requests.appliedRequests') : t('requests.offers') }</small>\n              <span className=\"d-block\">{ offers }</span>\n            </CCol>\n            :\n            <CCol xs={ 6 } xl={ 2 }>\n              <small className={isBankUserType && referralId !== null ? \"text-white\" : \"text-muted\"}>{ isBankUserType ? t('requests.revenue') : t('requests.offers') }</small>\n              <span className=\"d-block\">{ isBankUserType ? `${revenue} ${currency}` : offers }</span>\n            </CCol>\n          }\n          <CCol xs={ 6 } xl={ 2 } className=\"d-flex align-self-end align-self-md-center justify-content-end justify-content-md-start text-end text-md-start\">\n            <CLink\n              role='button'\n              data-id={ id }\n              onClick={ onClickHandler }\n              className={classnames({\"text-white\": isBankUserType && referralId !== null})}\n            >\n              { setButtonContent() } \n            </CLink>\n          </CCol>\n        </CRow>\n      </CListGroupItem>\n    )\n  })\n\n  return (\n    <>\n      <CListGroup className=\"employees mt-4\">{ renderActiveRequestsList() }</CListGroup>\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n      { isBankUserType && renderSuggestRequestModal(specificModeData) }\n    </>\n  )\n}\n\nexport default ActionRequestsTab\n","import React from 'react'\nimport {\n  CCol,\n  CRow,\n  CListGroup,\n  CListGroupItem,\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next';\n\nconst ClosedRequestsTab = ({ closedRequests, isBankUserType }) => {\n  const { t } = useTranslation()\n  const renderClosedRequestsList = () => closedRequests.map(({\n                                                               id,\n                                                               percentage,\n                                                               amount,\n                                                               days,\n                                                               currency,\n                                                               type,\n                                                               revenue\n                                                             }) => {\n    return (\n      <CListGroupItem className=\"employees py-4 px-2 px-md-3\" key={ id }>\n        <CRow className=\"m-0 align-items-stretch justify-content-between\">\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.amount') }</small>\n            <h6 className=\"m-0\">{ `${ amount } ${ currency }` }</h6>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n            <span className=\"d-block\">{ `${ percentage } %` }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n            <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n            <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">Прибыль</small>\n            <span className=\"d-block\">{revenue} {currency}</span>\n          </CCol>\n        </CRow>\n      </CListGroupItem>\n    )\n  })\n\n  return (\n    <>\n      { closedRequests.length\n        ? (\n          <CListGroup className=\"employees mt-4\">\n            { renderClosedRequestsList() }\n          </CListGroup>\n        )\n        : <h4 className=\"text-center mt-5\">{ isBankUserType ? t('requests.history.empty') : t('requests.business.history.empty') }</h4>\n      }\n    </>\n  )\n}\n\nexport default ClosedRequestsTab\n","import React, { useState, useEffect } from 'react'\nimport {\n  CNav,\n  CNavLink,\n  CNavItem,\n  CTabPane,\n  CTabContent,\n  CButton,\n  CCol\n} from '@coreui/react'\nimport { ActionRequestsTab } from 'src/components/actionRequestsTab'\nimport { ClosedRequestsTab } from 'src/components/closedRequestsTab'\nimport classnames from 'classnames'\nimport { USER_TYPE } from 'src/constants'\n\nconst NAV_INFO = [1, 2, 3]\n\nconst DefaultRequestsContentView = ({ tab, userType, specificModeData, setSpecificModeData, createdRequests, activeRequests, closedRequests, setPageMode, toaster, t, toast, ...rest }) => {\n  const setDefaultTab = () => {\n    if (tab) return tab\n    if (!createdRequests.length) return 2\n    return 1\n  }\n  const isBankUserType = userType === USER_TYPE.BANK\n  const [activeKey, setActiveKey] = useState(setDefaultTab())\n  useEffect(() => {\n    if (tab) setActiveKey(tab)\n  }, [tab])\n  return (\n    <>\n      <CNav variant=\"tabs\">\n        { NAV_INFO.map(tab => {\n          if (tab === 1 && !createdRequests.length) return\n          return (\n            <CNavItem key={ tab }>\n              <CNavLink\n                className=\"pe-auto\"\n                active={ activeKey === tab }\n                onClick={ () => setActiveKey(tab) }\n              >\n                { t(`requests.${userType}.default.${ tab }`) }\n              </CNavLink>\n            </CNavItem>\n          )\n        }) }\n      </CNav>\n      <CTabContent>\n        { activeKey === 1 && <CTabPane visible={ activeKey === 1 }>\n          { <ActionRequestsTab {...rest} specificModeData={specificModeData} isNewRequestTab isBankUserType={isBankUserType} setSpecificModeData={setSpecificModeData} setPageMode={setPageMode} activeRequests={createdRequests} /> }\n        </CTabPane> }\n        { activeKey === 2 && <CTabPane\n          className={ classnames({ 'd-flex justify-content-center align-items-center text-center': !activeRequests.length }) }\n          visible={ activeKey === 2 }>\n          { activeRequests.length\n            ? (<ActionRequestsTab specificModeData={specificModeData} isBankUserType={isBankUserType} setSpecificModeData={setSpecificModeData} setPageMode={setPageMode} activeRequests={activeRequests} />)\n            : (<CCol style={ { minHeight: '50vh' } } xl={ 8 }\n                     className='h-50 d-flex flex-column justify-content-center align-items-center'>\n              <h4>\n                { t(`requests${isBankUserType ? '.bank' : ''}.default.1.emptyInfo`) }\n              </h4>\n              { !isBankUserType && <CButton onClick={ () => setPageMode('create') } size=\"sm\" color=\"primary\" className=\"text-white mt-3 py-2\">\n                { t('requests.primaryButtonLabel') }\n              </CButton> }\n            </CCol>) }\n        </CTabPane> }\n        { activeKey === 3 && <CTabPane visible={ activeKey === 3 }>\n          <ClosedRequestsTab isBankUserType closedRequests={closedRequests}/>\n        </CTabPane> }\n      </CTabContent>\n    </>\n  )\n}\n\nexport default DefaultRequestsContentView\n","import React, { useState } from 'react'\nimport DefaultRequestsContentView from './DefaultRequestsContentView'\nimport { useTranslation } from 'react-i18next'\nimport { suggestOffer } from 'src/services'\n\nconst DefaultRequestsContentContainer = ({ ...rest }) => {\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n\n  const suggestRequestHandler = async (form) => {\n    try {\n      setLoading(true)\n      const data = await suggestOffer(form)\n    } catch (e) {\n\n    } finally {\n      setLoading(false)\n    }\n  }\n  const propsData = {\n    suggestRequestHandler,\n    isLoading,\n    t,\n    ...rest\n  }\n  return (\n    <>\n      <DefaultRequestsContentView {...propsData} />\n    </>\n  )\n}\n\nexport default DefaultRequestsContentContainer\n","import DefaultRequestsContentContainer from './DefaultRequestsContentContainer'\n\nexport default DefaultRequestsContentContainer\n"],"sourceRoot":""}