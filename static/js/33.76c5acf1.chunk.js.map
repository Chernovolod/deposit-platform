{"version":3,"sources":["components/singleRequest/SingleRequestView.js","components/singleRequest/SingleRequestContainer.js","components/singleRequest/index.js"],"names":["SingleRequestView","userType","isLoading","visible","toaster","toast","setVisible","onClickHandler","suggestions","handleCloseRequest","specificModeData","handleApplyOffer","order","bankName","bankSuggestions","t","useTranslation","id","amount","percentage","currency","days","type","status","revenue","className","xs","xl","role","data-id","onClick","length","map","orderId","md","disabled","classnames","alignment","onDismiss","component","size","color","classes","variant","ref","push","placement","SingleRequestContainer","setPageMode","rest","useState","setLoading","setSuggestions","setBankSuggestions","useEffect","a","getSuggestionsFromBusiness","data","getOffersByOrderId","console","log","addToast","showErrorToast","useRef","message","isError","title","autohide","close","width","height","xmlns","preserveAspectRatio","focusable","fill","applySuggestedOffer","offerId","wasCreated","setTimeout","closeRequest","propsData"],"mappings":"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","file":"static/js/33.76c5acf1.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  CButton,\n  CCol, CListGroupItem,\n  CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CLink,\n  CRow, CToaster, CListGroup\n} from '@coreui/react'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport classnames from 'classnames'\nimport Loader from '../../views/components/loaders/intermittent'\n\nconst SingleRequestView = ({\n                             userType,\n                             isLoading,\n                             visible,\n                             toaster,\n                             toast,\n                             setVisible,\n                             onClickHandler,\n                             suggestions,\n                             handleCloseRequest,\n                             specificModeData,\n                             handleApplyOffer,\n                             bankName,\n                             bankSuggestions: { order }\n                           }) => {\n  const { t } = useTranslation()\n  const { id, amount, percentage, currency, days, type, status, revenue } = specificModeData\n\n\n  const renderBankSuggestion = () => (\n    <CListGroupItem className=\"employees py-4 px-2 px-md-2\">\n      <CRow className=\"m-0 align-items-stretch justify-content-between\">\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.amount') }</small>\n          <h6 className=\"m-0\">{ `${ order.amount } ${ order.currency }` }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n          <span className=\"d-block\">{ `${ order.percentage } %` }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n          <span className=\"d-block\">{ t(`requests.days.${ order.days }`) }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n          <span className=\"d-block\">{ t(`requests.${ order.type }`) }</span>\n        </CCol>\n      </CRow>\n    </CListGroupItem>\n  )\n\n  const renderBusinessSuggestions = () => suggestions.map(({\n                                                             bankName,\n                                                             percentage,\n                                                             days,\n                                                             type,\n                                                             id,\n                                                             currency,\n                                                             revenue,\n                                                             orderId\n                                                           }) => (\n    <CListGroupItem className=\"employees py-4 px-2\" key={ id }>\n      <CRow className=\"m-0 d-flex justify-content-between align-items-stretch\">\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('bankName') }</small>\n          <h6 className=\"m-0\">{ bankName }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n          <span className=\"d-block\">{ `${ percentage } %` }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n          <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n          <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-md-start\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.revenue') }</small>\n          <span className=\"d-block\"> { revenue } { currency }</span>\n        </CCol>\n        { status === 'CREATED' && <CCol className=\"d-flex align-self-center\" xs={ 6 } md={ 2 }>\n          { isLoading\n            ? <RegularLoader/>\n            : <CLink disabled={ isLoading } onClick={ () => handleApplyOffer({ orderId, id }) }\n                     className={ classnames('pe-5', {\n                       'no-events': isLoading\n                     }) } role='button'>\n              Принять предложение\n            </CLink> }\n        </CCol> }\n      </CRow>\n    </CListGroupItem>\n  ))\n  const renderCloseOrderModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('requests.specific.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-2\">\n          { t('requests.specific.modal.content') }\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton disabled={ isLoading } onClick={ handleCloseRequest } className=\"text-white py-2\" size=\"sm\"\n                   color=\"primary\">{ isLoading ? <RegularLoader classes=\"text-white\"/> : t('yes') }</CButton>\n          <CButton onClick={ () => setVisible(false) } className=\"py-2\" size=\"sm\" color=\"primary\"\n                   variant=\"outline\">{ t('no') }</CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n\n  return (\n    <>\n      <CRow\n        className=\"align-items-stretch bg-primary rounded-3 m-0 py-4 px-2 text-white justify-content-between\">\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.amount') }</small>\n          <h6 className=\"m-0\">{ `${ amount } ${ currency }` }</h6>\n        </CCol>\n        <CCol className=\" mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.percentage') }</small>\n          <h6 className=\"d-block\">{ `${ percentage } %` }</h6>\n        </CCol>\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.days') }</small>\n          <h6 className=\"d-block\">{ t(`requests.days.${ days }`) }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.type') }</small>\n          <h6 className=\"d-block\">{ t(`requests.${ type }`) }</h6>\n        </CCol>\n        { userType !== 'BANK_ADMIN' && status !== 'CREATED' &&\n        <CCol xl={ 2 } xs={ 6 } className=\"text-end text-md-start\">\n          <small className=\"text-white\">{ t('requests.create.form.revenue') }</small>\n          <h6 className=\"d-block\">{ revenue } { currency }</h6>\n        </CCol> }\n        { (userType !== 'BANK_ADMIN' && status === 'CREATED') &&\n        <CCol xs={ 6 } xl={ 2 } className=\"d-flex align-self-center justify-content-end\">\n          { userType !== 'BANK_ADMIN' && status === 'CREATED' && <CLink\n            role=\"button\"\n            data-id={ id }\n            onClick={ onClickHandler }\n            className=\"text-white d-flex align-self-center justify-content-end fw-bold p-0\"\n          >\n            { t('requests.singleRequests.button') }\n          </CLink> }\n        </CCol> }\n      </CRow>\n      <h4\n        className=\"mt-5\">{ userType === 'BANK_ADMIN' ? t('requests.BANK_ADMIN.title') : status === 'ACTIVE' ? t('requests.BUSINESS_ADMIN.title.activeRequests') : t('requests.BUSINESS_ADMIN.title') }</h4>\n      { userType !== 'BANK_ADMIN' && !suggestions.length && !isLoading && <h6 className=\"text-center mt-5 mb-3\">\n        { t('requests.BUSINESS_ADMIN.subtitle') }\n      </h6> }\n      { userType === 'BANK_ADMIN' && !order.id && !isLoading &&\n      <h6 className=\"text-center mt-5 mb-3\">\n        { t('requests.BANK_ADMIN.subtitle') }\n      </h6> }\n      <CListGroup className=\"employees mt-4\">\n        { isLoading && !order.id && <Loader /> }\n        { userType === 'BANK_ADMIN' && order.id && !isLoading && renderBankSuggestion() }\n        { userType !== 'BANK_ADMIN' && !isLoading && renderBusinessSuggestions() }\n      </CListGroup>\n      { renderCloseOrderModal() }\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n    </>\n  )\n}\n\nexport default SingleRequestView\n","import React, { useEffect, useRef, useState } from 'react'\nimport SingleRequestView from './SingleRequestView'\nimport { useTranslation } from 'react-i18next'\nimport { closeRequest, getOffersByOrderId, applySuggestedOffer, getSuggestionsFromBusiness } from 'src/services'\nimport { CToast, CToastBody, CToastHeader } from '@coreui/react'\nconst SingleRequestContainer = ({ setPageMode, specificModeData, userType, ...rest }) => {\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n  const [bankSuggestions, setBankSuggestions] = useState({order: {id: ''}})\n  const onClickHandler = () => {\n    setVisible(true)\n  }\n  useEffect( async () => {\n    try {\n      setLoading(true)\n      if (userType === 'BANK_ADMIN') {\n        const data = await getSuggestionsFromBusiness(specificModeData.id)\n        setBankSuggestions(data)\n      } else {\n        const data = await getOffersByOrderId(specificModeData.id)\n        setSuggestions(data)\n      }\n    } catch (e) {\n      console.log(e)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoading(false)\n    }\n  }, [specificModeData?.id])\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const showErrorToast = (message = '', isError = true ) => (\n    <CToast title={isError ? t('defaultErrorTitle') : 'Ваша заявка на размещение депозита Принята!'} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill={ isError ? '#EB5757' : '#6FCF97' }></rect>\n        </svg>\n        <strong className=\"me-auto\">{isError ? t('defaultErrorTitle') : t('congratulations')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const handleApplyOffer = async ({orderId, id}) => {\n    try {\n      setLoading(true)\n      const data = await applySuggestedOffer({orderId, offerId: id})\n\n      if (data.wasCreated) {\n        addToast(() => showErrorToast(\n          'Данные Вашей Компании переданы в банк для дальнейшей работы, вскоре с Вами свяжется специалист:)\\n' +\n          '\\n' +\n          '\\n' +\n          'Информацию о вкладе вы найдете в активных заявках',\n          false))\n        setTimeout(() => {\n          setPageMode('default', 2)\n          setLoading(false)\n        }, 2000)\n      }\n      if (data.message) {\n        addToast(() => showErrorToast(data.message))\n        setLoading(false)\n      }\n    } catch (e) {\n      setLoading(false)\n      addToast(() => showErrorToast())\n    }\n  }\n  const handleCloseRequest = async () => {\n    try {\n      setLoading(true)\n      const data = await closeRequest(specificModeData.id)\n      if (!data.message && data.status === 'CLOSED') {\n        setPageMode('default')\n      }\n      if (data.message) {\n        addToast(() => showErrorToast(data.message))\n      }\n    } catch (e) {\n      setLoading(false)\n      addToast(() => showErrorToast())\n    }\n    finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n  const propsData = {\n    onClickHandler,\n    userType,\n    suggestions,\n    bankSuggestions,\n    visible,\n    setVisible,\n    toaster,\n    toast,\n    isLoading,\n    specificModeData,\n    handleApplyOffer,\n    handleCloseRequest,\n    ...rest\n  }\n\n  return (\n    <>\n      <SingleRequestView {...propsData} />\n    </>\n  )\n}\n\nexport default SingleRequestContainer\n","import SingleRequestContainer from './SingleRequestContainer'\n\nexport default SingleRequestContainer\n"],"sourceRoot":""}