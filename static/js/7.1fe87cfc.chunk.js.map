{"version":3,"sources":["components/createOrder/CreateOrderView.js","components/createOrder/CreateOrderContainer.js","components/createOrder/index.js","components/profitabilityCalculator/ProfitabilityCalculatorView.js","components/profitabilityCalculator/ProfitabilityCalculatorContainer.js","components/profitabilityCalculator/index.js"],"names":["registerLocale","ru","CreateOrderView","withCalculator","formData","isLoading","toaster","toast","handleCreateRequest","onChange","isEmptyPercentage","isLessAmount","isCorrectPercentage","isCorrectAmount","currency","t","onDateInputChange","useTranslation","useState","Date","startDate","setStartDate","useEffect","returnBefore","className","xs","xl","component","id","aria-describedby","autoComplete","type","name","placeholder","invalid","valid","aria-label","value","locale","selected","dateFormat","placeholderText","date","target","customInput","onClick","size","disabled","color","ref","push","placement","connect","isApprovalModalShown","user","dispatch","setVisible","isShown","setApprovalModalVisibility","setPageMode","rest","setLoading","setCurrency","setIsEmptyPercentage","setIsCorrectPercentage","setIsCorrectAmount","setIsLessAmount","addToast","amount","percentage","days","activeUntil","setFormData","useRef","a","status","createRequest","data","message","showErrorToast","console","log","title","autohide","close","width","height","xmlns","preserveAspectRatio","focusable","role","fill","propsData","day","CreateOrderContainer","RenderRequestModal","isModalVisible","closeRequestModal","modalFormData","applyOfferHandler","currentSuggestion","minAmount","onModalChange","alignment","visible","onDismiss","min","classes","SingleBankResponse","onClickHandler","data-id","ProfitabilityCalculatorView","suggestions","sum","calculateProfit","openRequestModal","col","classnames","Number","length","map","el","setSuggestions","setIsModalVisible","maxAmount","setCurrentSuggestion","setValid","summary","setSummary","setModalFormData","Math","round","getSuggestions","getCalculatorSuggestions","applyOffer","depositId","isError","dataset","filter","request","currentRequest","ProfitabilityCalculatorContainer"],"mappings":"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","file":"static/js/7.1fe87cfc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  CFormSelect,\n  CCol,\n  CButton,\n  CCard,\n  CCardBody,\n  CForm,\n  CFormControl,\n  CFormFloating,\n  CFormLabel,\n  CToaster,\n  CFormText\n} from '@coreui/react'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport ProfitabilityCalculator from 'src/components/profitabilityCalculator'\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\n\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ru from 'date-fns/locale/ru';\n\nregisterLocale('ru', ru)\n\nconst CreateOrderView = ({\n                           withCalculator,\n                           formData,\n                           isLoading,\n                           toaster,\n                           toast,\n                           handleCreateRequest,\n                           onChange,\n                           isEmptyPercentage,\n                           isLessAmount,\n                           isCorrectPercentage,\n                           isCorrectAmount,\n  currency,\n                           onDateInputChange\n                         }) => {\n  const { t } = useTranslation()\n  const [startDate, setStartDate] = useState(new Date());\n  useEffect(() => {\n    setStartDate(formData.returnBefore)\n  }, [formData.returnBefore])\n  // const MyContainer = ({ className, children }) => {\n  //   return (\n  //     <div style={ { fontFamily: \"Gilroy Regular\" } }>\n  //       <div style={ { position: \"relative\" } }>{ children }</div>\n  //     </div>\n  //   );\n  // };\n  const renderContent = () => (\n    <>\n      <h6 className=\"mb-4\">{ t('requests.create.form.title', {currency}) } </h6>\n      <CForm className=\"create-request-form row\">\n        <CCol xs={ 8 } xl={ 2 }>\n          <CFormText component=\"span\" id=\"amount\">{ t('requests.create.form.amount') }</CFormText>\n          <CFormControl\n            aria-describedby=\"amount\"\n            autoComplete=\"off\"\n            type=\"number\"\n            name=\"amount\"\n            id=\"amount\"\n            placeholder=\"0\"\n            onChange={ onChange }\n            invalid={isLessAmount}\n            valid={isCorrectAmount}\n          />\n          {isLessAmount &&\n            <div className=\"text-danger\">\n              {t('requests.create.form.input.errorText.amount', {currency})}\n            </div>\n          }\n        </CCol>\n        <CCol xs={ 4 } xl={ 1 }>\n          <CFormText className=\"text-nowrap\" component=\"span\" id=\"currency\">{ t('requests.create.form.currency') }</CFormText>\n          <CFormSelect name=\"currency\" onChange={ onChange } aria-describedby=\"currency\"\n                       aria-label={ t('requests.create.form.currency') }>\n            <option value=\"BYN\">BYN</option>\n            <option value=\"USD\">USD</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"RUB\">RUB</option>\n          </CFormSelect>\n        </CCol>\n        <CCol xs={ 4 } xl={ 1 }>\n          <CFormText className=\"text-nowrap\" component=\"span\" id=\"percentage\">{ t('requests.create.form.percentage') }, %</CFormText>\n          <CFormControl\n            aria-describedby=\"percentage\"\n            autoComplete=\"off\"\n            type=\"number\"\n            name=\"percentage\"\n            id=\"percentage\"\n            onChange={ onChange }\n            invalid={isEmptyPercentage}\n            valid={isCorrectPercentage}\n          />\n          {isEmptyPercentage &&\n            <div className=\"text-danger\">\n              {t('requests.create.form.input.errorText.percentage')}\n            </div>\n          }\n        </CCol>\n        <CCol xs={ 8 } xl={ 2 }>\n          <CFormText component=\"span\" id=\"days\">{ t('requests.create.form.days') }</CFormText>\n          <CFormSelect name=\"days\" onChange={ onChange } aria-describedby=\"days\"\n                       aria-label={ t('requests.create.form.days') }>\n            <option value=\"90\">{t('requests.bank.orders.form.select.1.days.90')}</option>\n            <option value=\"180\">{t('requests.bank.orders.form.select.2.days.180')}</option>\n            <option value=\"365\">{t('requests.bank.orders.form.select.3.days.365')}</option>\n            <option value=\"1095\">{t('requests.bank.orders.form.select.4.days.1095')}</option>\n          </CFormSelect>\n        </CCol>\n        <CCol xl={ 2 }>\n          <CFormText aria-describedby=\"returnBefore\" component=\"span\"\n                     id=\"days\">{ t('requests.create.form.returnBefore') }</CFormText>\n          <DatePicker\n            // calendarContainer={ MyContainer }\n            locale=\"ru\"\n            selected={ startDate }\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText={ t('requests.create.form.returnBefore.placeholder') }\n            onChange={ (date) => {\n              onChange({ target: { name: 'returnBefore', value: date } })\n              // setStartDate(date)\n            } }\n            customInput={\n              <CFormControl\n                // className=\"safari_only\"\n                autoComplete=\"off\"\n                name=\"returnBefore\"\n                id=\"returnBefore\"\n              /> }\n          />\n        </CCol>\n        <CCol xl={ 2 }>\n          <CFormText component=\"span\" id=\"type\">{ t('requests.create.form.type') }</CFormText>\n          <CFormSelect name=\"type\" onChange={ onChange } aria-describedby=\"type\"\n                       aria-label={ t('requests.create.form.type') }>\n            <option value=\"IRREVOCABLE\">{t('Irrevocable')}</option>\n            <option value=\"REVOCABLE\">{t('Revocable')}</option>\n          </CFormSelect>\n        </CCol>\n        <CCol xl={ 2 }>\n          <CFormText component=\"span\" id=\"activeUntil\">{ t('requests.create.form.activeUntil') }</CFormText>\n          <CFormSelect name=\"activeUntil\" onChange={ onChange } aria-describedby=\"activeUntil\"\n                       aria-label={ t('requests.create.form.activeUntil') }>\n            <option value=\"3\">{t('requests.bank.orders.form.select.5.days.3')}</option>\n            <option value=\"6\">{t('requests.bank.orders.form.select.6.days.6')}</option>\n            <option value=\"9\">{t('requests.bank.orders.form.select.6.days.9')}</option>\n          </CFormSelect>\n        </CCol>\n      </CForm>\n      <CButton\n        onClick={ handleCreateRequest }\n        size=\"sm\"\n        disabled={isLoading}\n        color=\"primary\"\n        className=\"col-12 col-md-3 mt-5 py-2 text-white d-block ms-auto\"\n      >\n        { t('requests.create.submitButton') }\n      </CButton>\n    </>\n  )\n  return (\n    <>\n      <CCard>\n        <CCardBody className=\"py-4\">\n          { isLoading && <Loader/> }\n          { !isLoading && renderContent() }\n        </CCardBody>\n      </CCard>\n      { withCalculator && <h2 className=\"mt-5\">{ t('requests.calculator.title') }</h2> }\n      { withCalculator && <ProfitabilityCalculator/> }\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n    </>\n  )\n}\n\nexport default CreateOrderView\n","import React, { useRef, useState, useEffect } from 'react'\nimport CreateOrderView from './CreateOrderView'\nimport { useTranslation } from 'react-i18next'\nimport { createRequest } from 'src/services'\nimport { CToast, CToastBody, CToastHeader } from '@coreui/react'\nimport { setApprovalModalVisibility } from 'src/store'\nimport { connect } from 'react-redux'\nimport RequestAccountApprovalModal from '../requestAccountApprovalModal'\n\nconst CreateOrderContainer = ({ user, setVisible, isApprovalModalShown, setPageMode, ...rest }) => {\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n  const [currency, setCurrency] = useState('BYN')\n  const [isEmptyPercentage, setIsEmptyPercentage] = useState(false)\n  const [isCorrectPercentage, setIsCorrectPercentage] = useState(false)\n  const [isCorrectAmount, setIsCorrectAmount] = useState(false)\n  const [isLessAmount, setIsLessAmount] = useState(false)\n  const [toast, addToast] = useState(0)\n  const [formData, setFormData] = useState({\n    amount: null,\n    currency: 'BYN',\n    percentage: null,\n    days: 90,\n    type: 'IRREVOCABLE',\n    activeUntil: '2021-07-28T13:05:57.385Z'\n  })\n  const toaster = useRef()\n  const handleCreateRequest = async () => {\n    if (user.type !== 'BANK_ADMIN' && user.status !== 'VERIFIED') {\n      setVisible(true)\n      return\n    }\n    try {\n      setLoading(true)\n      if(formData.amount < 50 || formData.amount === null ) {\n        setIsLessAmount(true)\n        setIsCorrectAmount(false)\n        return\n      } else {\n        setIsLessAmount(false)\n        setIsCorrectAmount(true)\n      }\n      if(formData.percentage <= 0) {\n        setIsEmptyPercentage(true)\n        setIsCorrectPercentage(false)\n        return\n      } else {\n        setIsEmptyPercentage(false)\n        setIsCorrectPercentage(true)\n      }\n      const data = await createRequest(formData)\n      if (data.message) {\n        addToast(() => showErrorToast(data.message))\n      }\n      if (!data.message) {\n        setPageMode('default')\n      }\n    } catch (error) {\n      console.log(error)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoading(false)\n    }\n  }\n  const onChange = ({ target: { name, value } }) => {\n    if (name === 'currency') {\n      setCurrency(value)\n    }\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const onDateInputChange = (day) => {\n    setFormData({\n      ...formData,\n      day\n    })\n  }\n\n  const showErrorToast = (message = '') => (\n    <CToast title={t('defaultErrorTitle')} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#EB5757\"></rect>\n        </svg>\n        <strong className=\"me-auto\">{t('defaultErrorTitle')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const propsData = {\n    isApprovalModalShown,\n    setVisible,\n    handleCreateRequest,\n    onDateInputChange,\n    formData,\n    onChange,\n    isLoading,\n    toaster,\n    toast,\n    isLessAmount,\n    isEmptyPercentage,\n    isCorrectPercentage,\n    isCorrectAmount,\n    currency,\n    ...rest\n  }\n  return (\n    <>\n      <RequestAccountApprovalModal />\n      <CreateOrderView {...propsData} />\n    </>\n  )\n}\n\nconst mapStateToProps = ({isApprovalModalShown, user}) => ({\n  isApprovalModalShown,\n  user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisible: isShown => dispatch(setApprovalModalVisibility(isShown)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOrderContainer)\n","import CreateOrderContainer from './CreateOrderContainer'\n\nexport default CreateOrderContainer\n","import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CForm,\n  CFormControl,\n  CFormSelect,\n  CFormText,\n  CRow,\n  CLink,\n  CListGroupItem,\n  CModalHeader,\n  CModalContent,\n  CModal,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CToaster,\n} from '@coreui/react'\nimport Loader from '../../views/components/loaders/intermittent'\nimport classnames from 'classnames'\nimport RegularLoader from 'src/views/components/loaders/regular'\n\nconst RenderRequestModal = ({ isModalVisible, closeRequestModal, t, modalFormData, applyOfferHandler, currentSuggestion :{ minAmount, currency, id }, isLoading, onModalChange, onClick, valid }) => (\n  <CModal alignment=\"center\" visible={ isModalVisible } onDismiss={ closeRequestModal }>\n    <CModalContent className=\"pb-4 px-3\">\n      <CModalHeader onDismiss={ closeRequestModal }>\n        <CModalTitle component=\"h2\">{ t('requests.modal.title.apply') }</CModalTitle>\n      </CModalHeader>\n      <CModalBody className=\"mb-7\">\n        <CForm>\n          <CRow className=\"mt-4\">\n            <CCol xl={ 9 }>\n              <CFormText component=\"span\"\n                         id=\"amount\">{ `${ t('requests.modal.content.text') } ${ currency }` }</CFormText>\n              <CFormControl\n                valid={ valid }\n                invalid={ !valid }\n                aria-describedby=\"amount\"\n                autoComplete=\"off\"\n                type=\"number\"\n                min={ minAmount }\n                name=\"amount\"\n                id=\"amount\"\n                value={ modalFormData.amount }\n                placeholder={ minAmount }\n                onChange={ onModalChange }\n              />\n            </CCol>\n          </CRow>\n        </CForm>\n      </CModalBody>\n      <CModalFooter className=\"justify-content-start\">\n        <CButton onClick={ ()=> applyOfferHandler(modalFormData, id) }\n                 disabled={ isLoading || !valid }\n                 className=\"text-white py-2\" size=\"sm\"\n                 color=\"primary\">\n          { isLoading\n            ? <RegularLoader classes=\"text-white\"/>\n            : t('requests.modal.footer.button.send') }\n        </CButton>\n      </CModalFooter>\n    </CModalContent>\n  </CModal>\n)\n\nconst SingleBankResponse = ({ t, id, name, currency, percentage, days, type, minAmount, onClickHandler }) => (\n  <CListGroupItem className=\"employees py-4 px-3\" key={ id }>\n    <CRow className=\"m-0 align-items-stretch \">\n      <CCol className=\"p-0 mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n        <small className=\"text-muted\">{t('bank')}</small>\n        <h6 className=\"d-block\">{ `${ name }` }</h6>\n      </CCol>\n      <CCol className=\"p-0 mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n        <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n        <span className=\"d-block\">{ `${ percentage } %` }</span>\n      </CCol>\n      <CCol className=\"p-0 mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n        <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n        <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n      </CCol>\n      <CCol className=\"p-0 mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n        <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n        <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n      </CCol>\n      <CCol className=\"p-0 mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n        <small className=\"text-muted\">{ t('requests.create.form.minimalAmount') }</small>\n        <span className=\"m-0 d-block\">{ `${ minAmount } ${ currency }` }</span>\n      </CCol>\n      <CCol xs={ 6 } xl={ 2 } className=\" p-0 d-flex align-self-center justify-content-end\">\n        <CLink\n          role=\"button\"\n          data-id={ id }\n          onClick={ onClickHandler }\n          className=\"text-primary text-end text-md-start fw-bold\"\n        >\n          {t('requests.bank.profitAbillity.SingleBankResponse.link')}\n        </CLink>\n      </CCol>\n    </CRow>\n  </CListGroupItem>\n)\n\nconst ProfitabilityCalculatorView = ({\n                                       suggestions,\n                                       isLoading,\n                                       amount,\n                                       currency,\n                                       percentage,\n                                       days,\n                                       sum,\n                                       calculateProfit,\n                                       onChange,\n                                       isModalVisible, \n                                       openRequestModal,\n                                       valid,\n                                       modalFormData,\n                                       onModalChange,\n                                       currentSuggestion,\n                                       applyOfferHandler,\n                                       closeRequestModal,\n                                       toast,\n                                       t,\n                                       toaster,\n                                       ...rest\n                                     }) => {\n  return (\n    <>\n      <CRow xl={ { col: 2 } }>\n        <CCol xl={ 6 }>\n          <CCard>\n            <CCardBody className=\"py-4 pe-3\">\n              <CForm className=\"row\">\n                <CCol xs={8} xl={ 4 }>\n                  <CFormText component=\"span\" id=\"amount\">{ t('requests.create.form.amount') }</CFormText>\n                  <CFormControl\n                    aria-describedby=\"amount\"\n                    autoComplete=\"off\"\n                    type=\"number\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    placeholder=\"0\"\n                    onChange={ onChange }\n                  />\n                </CCol>\n                <CCol xs={4} xl={ 2 }>\n                  <CFormText component=\"span\" id=\"currency\">{ t('requests.create.form.currency') }</CFormText>\n                  <CFormSelect name=\"currency\"\n                               onChange={ onChange }\n                               aria-describedby=\"currency\" aria-label={ t('requests.create.form.currency') }>\n                    <option value=\"BYN\">{t('BYN')}</option>\n                    <option value=\"USD\">{t('USD')}</option>\n                    <option value=\"EUR\">{t('EUR')}</option>\n                    <option value=\"RUB\">{t('RUB')}</option>\n                  </CFormSelect>\n                </CCol>\n                <CCol xs={4} xl={ 2 } className=\"amount-container\">\n                  <CFormText component=\"span\" id=\"percentage\">{ t('requests.create.form.percentage') }</CFormText>\n                  <CFormControl\n                    aria-describedby=\"percentage\"\n                    autoComplete=\"off\"\n                    type=\"number\"\n                    name=\"percentage\"\n                    id=\"percentage\"\n                    // placeholder=\"%\"\n                    onChange={ onChange }\n                  />\n                </CCol>\n                <CCol xs={8} xl={ 4 }>\n                  <CFormText component=\"span\" id=\"days\">{ t('requests.create.form.days') }</CFormText>\n                  <CFormSelect name=\"days\"\n                               onChange={ onChange }\n                               aria-describedby=\"days\" aria-label={ t('requests.create.form.days') }>\n                    <option value=\"90\">{t('requests.bank.profitAbillity.form.select.1.days.90')}</option>\n                    <option value=\"180\">{t('requests.bank.profitAbillity.form.select.1.days.180')}</option>\n                    <option value=\"365\">{t('requests.bank.profitAbillity.form.select.1.days.365')}</option>\n                    <option value=\"1095\">{t('requests.bank.profitAbillity.form.select.1.days.1095')}</option>\n                  </CFormSelect>\n                </CCol>\n              </CForm>\n              <CButton\n                onClick={ calculateProfit }\n                size=\"sm\"\n                color=\"primary\"\n                className=\"px-5 col-12 col-md-6 py-2 mt-5 text-white d-block ms-auto\"\n              >\n                { t('requests.calculator.submit') }\n              </CButton>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xl={ 6 }>\n          <CCard className=\"h-100\">\n            <CCardBody className={ classnames('py-4 pe-5 d-flex flex-column', {\n              'justify-content-center': isLoading,\n              'justify-content-between': !isLoading\n            }) }>\n              { isLoading && <Loader/> }\n              { !isLoading &&\n              <>\n                <h6>{ t('requests.calculator.result.title') }</h6>\n                <CRow className=\"align-items-stretch m-0\">\n                  <CCol className=\"p-0\" xs={ 6 } xl={ 4 }>\n                    <small className=\"text-muted\">{ t('requests.create.form.amount') }</small>\n                    <span className=\"d-block\">{ `${ amount } ${ currency }` }</span>\n                  </CCol>\n                  <CCol className=\"p-0\" xs={ 6 } xl={ 2 }>\n                    <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n                    <span className=\"d-block\">{ percentage } %</span>\n                  </CCol>\n                  <CCol className=\"p-0\" xs={ 6 } xl={ 3 }>\n                    <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n                    <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n                  </CCol>\n                  <CCol className=\"p-0\" xs={ 6 } xl={ 3 }>\n                    <small className=\"text-muted\">{t('requests.create.form.accruals')}</small>\n                    <span className=\"d-block\">{ `${ sum } ${ currency }` }</span>\n                  </CCol>\n                </CRow>\n                <CRow className=\"m-0\">\n                  <CCol className=\"p-0\" xs={ 12 } xl={ 4 }>\n                    <small className=\"text-muted\">{t('requests.create.form.totalAmount')}</small>\n                    <h6 className=\"m-0\">{ `${ Number(amount) + Number(sum) } ${ currency }` }</h6>\n                  </CCol>\n                </CRow>\n              </>\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      { suggestions.length\n        ? (<>\n            { isLoading && <Loader classes=\"mt-5\"/> }\n            { !isLoading && (\n              <>\n              <h2 className=\"mt-5\">{ t('requests.calculator.offers.title') }</h2>\n                {suggestions.map(el => <SingleBankResponse onClickHandler={openRequestModal} t={ t } { ...el } />)}\n                { isModalVisible &&  <RenderRequestModal onModalChange={onModalChange}\n                                                         modalFormData={modalFormData}\n                                                         applyOfferHandler={applyOfferHandler}\n                                                         t={t}\n                                                         valid={valid}\n                                                         closeRequestModal={closeRequestModal}\n                                                         currentSuggestion={currentSuggestion}\n                                                         isModalVisible={isModalVisible}\n                /> }\n                </>\n            )}</>\n        )\n        : null }\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n    </>\n  )\n}\n\nexport default ProfitabilityCalculatorView\n","import React, { useState, useRef } from 'react'\nimport {\n  CToast,\n  CToastHeader,\n  CToastBody\n} from '@coreui/react'\nimport ProfitabilityCalculatorView from './ProfitabilityCalculatorView'\nimport { useTranslation } from 'react-i18next'\nimport { getCalculatorSuggestions } from 'src/services'\nimport { setApprovalModalVisibility } from 'src/store'\nimport { connect } from 'react-redux'\nimport RequestAccountApprovalModal from '../requestAccountApprovalModal'\nimport { applyOffer } from 'src/services'\n\nconst ProfitabilityCalculatorContainer = ({ user, setVisible, isApprovalModalShown, ...rest }) => {\n  const { t } = useTranslation()\n  const [suggestions, setSuggestions] = useState([])\n  const [isLoading, setLoading] = useState(false)\n  const toaster = useRef()\n  const [toast, addToast] = useState(0)\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [currentSuggestion, setCurrentSuggestion] = useState({\n    id: '', \n    name: '', \n    currency: '', \n    percentage: '', \n    minAmount: '', \n    maxAmount: '', \n    type: '', \n    days: '',\n  })\n  const [valid, setValid] = useState(true)\n  const [summary, setSummary] = useState({\n    amount: 0,\n    currency: 'BYN',\n    percentage: 0,\n    days: 90,\n    sum: 0\n  })\n  const [formData, setFormData] = useState({\n    amount: 0,\n    currency: 'BYN',\n    percentage: 0,\n    days: 90\n  })\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const [modalFormData, setModalFormData] = useState({\n    amount: null\n  })\n  const onModalChange = ({ target: { name, value } }) => {\n    const { minAmount, maxAmount } = currentSuggestion\n    if ((Number(value) < minAmount && Number(value) !== minAmount) || (Number(value) > maxAmount && Number(value) !== maxAmount)) {\n      setValid(false)\n    } else {\n      setValid(true)\n    }\n    setModalFormData({\n      ...modalFormData,\n      [name]: value\n    })\n  }\n  const calculateProfit = async () => {\n    if (user.type !== 'BANK_ADMIN' && user.status !== 'VERIFIED') {\n      setVisible(true)\n      return\n    }\n    try {\n      setLoading(true)\n      const { amount, percentage, days, currency } = formData\n      const sum = Math.round(Number(amount) * Number(percentage) * Number(days) / 365 / 100)\n      setSummary({\n        currency,\n        amount,\n        percentage,\n        days,\n        sum\n      })\n      await getSuggestions()\n    } catch (e) {\n\n    } finally {\n      setLoading(false)\n    }\n  }\n  const getSuggestions = async () => {\n    try {\n      const data = await getCalculatorSuggestions()\n      if (!data.message) {\n        setSuggestions(data)\n      }\n    } catch (e) {\n\n    } finally {\n\n    }\n  }\n  const closeRequestModal = () => {\n    setIsModalVisible(false)\n    setValid(true)\n  }\n  const openRequestModal = ({ target: { dataset: { id } } }) => {\n    const [currentRequest] = suggestions.filter(request => request.id === id)\n    setModalFormData({\n      amount: currentRequest.minAmount\n    })\n    setCurrentSuggestion(currentRequest)\n    setIsModalVisible(true)\n  }\n  const applyOfferHandler = async (data, id) => {\n    try {\n      const response = await applyOffer({ ...data, depositId: id })\n      if (!response.message) {\n        addToast(() => showErrorToast('Заявка успешно отправлена!', false))\n      } else {\n        addToast(() => showErrorToast())\n      }\n    } catch (err) {\n      addToast(() => showErrorToast())\n    } finally {\n      setIsModalVisible(false)\n    }\n  }\n  const showErrorToast = (message = '', isError = true) => (\n    <CToast title={isError ? t('defaultErrorTitle') : t('congratulations')} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill={ isError ? '#EB5757' : '#6FCF97' }></rect>\n        </svg>\n        <strong className=\"me-auto\">{isError ? t('defaultErrorTitle') : t('congratulations')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const { amount, percentage, days, currency, sum } = summary\n  const propsData = {\n    suggestions,\n    isLoading,\n    amount,\n    currency,\n    percentage,\n    days,\n    sum,\n    onChange,\n    calculateProfit,\n    getSuggestions,\n    isModalVisible, \n    setIsModalVisible,\n    openRequestModal,\n    modalFormData,\n    valid,\n    onModalChange,\n    currentSuggestion,\n    applyOfferHandler,\n    t,\n    toast,\n    closeRequestModal,\n    toaster,\n    ...rest\n  }\n  return (\n    <>\n      <RequestAccountApprovalModal />\n      <ProfitabilityCalculatorView { ...propsData } />\n    </>\n  )\n}\n\nconst mapStateToProps = ({isApprovalModalShown, user}) => ({\n  isApprovalModalShown,\n  user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisible: isShown => dispatch(setApprovalModalVisibility(isShown)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfitabilityCalculatorContainer)\n","import ProfitabilityCalculatorContainer from './ProfitabilityCalculatorContainer'\n\nexport default ProfitabilityCalculatorContainer\n"],"sourceRoot":""}