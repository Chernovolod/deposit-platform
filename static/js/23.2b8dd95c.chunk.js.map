{"version":3,"sources":["views/offers/SingleOffer.js","views/offers/OffersView.js","views/offers/OffersContainer.js","views/offers/index.js","views/components/loaders/intermittent/Loader.js","views/components/loaders/intermittent/index.js","views/components/titles/pageTitle/PageTitle.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/requestAccountApprovalModal/RequestAccountApprovalModal.js","components/requestAccountApprovalModal/index.js"],"names":["SingleOffer","applyOfferHandler","setApprovalModalVisible","user","offerInfo","id","name","currency","percentage","minAmount","maxAmount","type","days","t","useTranslation","useState","isLoading","setLoading","valid","setValid","amount","formData","setFormData","visible","setVisible","onChange","target","value","Number","onClick","e","className","xs","xl","role","status","alignment","onDismiss","component","invalid","aria-describedby","autoComplete","min","placeholder","disabled","size","color","classes","OffersView","loading","offersList","toaster","toast","title","length","map","ref","push","placement","connect","isApprovalModalShown","dispatch","isShown","setApprovalModalVisibility","rest","setOffersList","addToast","useRef","useEffect","a","getOffers","showErrorToast","data","applyOffer","depositId","message","isError","autohide","close","width","height","xmlns","preserveAspectRatio","focusable","fill","to","pathname","query","mode","tab","propsData","Helmet","OffersContainer","Loader","style","ProfileTitle","withPrimaryButton","withSecondaryButton","primaryButtonLabel","secondaryButtonLabel","onPrimaryButtonClick","onSecondaryButtonClick","md","classnames","variant","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","window","open","RequestAccountApprovalModal"],"mappings":"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","file":"static/js/23.2b8dd95c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CButton,\n  CCol,\n  CLink,\n  CRow,\n  CListGroupItem,\n  CModal,\n  CModalContent,\n  CModalHeader,\n  CModalTitle,\n  CModalBody, CForm, CFormText, CFormControl, CFormSelect, CModalFooter\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\nimport RegularLoader from '../components/loaders/regular'\n\nconst SingleOffer = ({\n                       applyOfferHandler,\n                       setApprovalModalVisible,\n                       user,\n                       offerInfo: {\n                         id, name, currency, percentage, minAmount, maxAmount, type, days,\n                       }\n                     }) => {\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n  const [valid, setValid] = useState(true)\n  const [formData, setFormData] = useState({\n    amount: minAmount\n  })\n  const [visible, setVisible] = useState(false)\n  const onChange = ({ target: { name, value } }) => {\n    if ((Number(value) < minAmount && Number(value) !== minAmount) || (Number(value) > maxAmount && Number(value) !== maxAmount)) {\n      setValid(false)\n    } else {\n      setValid(true)\n    }\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const onClick = () => {\n    try {\n      setLoading(true)\n      applyOfferHandler(formData, id)\n    } catch (e) {\n\n    } finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n  const handleClick = () => {\n    if (user.type !== 'BANK_ADMIN' && user.status !== 'VERIFIED') {\n      setApprovalModalVisible(true)\n      return\n    }\n    setVisible(true)\n  }\n  const renderCreateDepositModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('offers.apply') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          <CForm>\n            <CRow className=\"mt-4\">\n              <CCol xl={ 9 }>\n                <CFormText component=\"span\"\n                           id=\"amount\">{ `${ t('requests.create.form.applyAmount') } ${ currency }` }</CFormText>\n                <CFormControl\n                  valid={ valid }\n                  invalid={ !valid }\n                  aria-describedby=\"amount\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  min={ minAmount }\n                  name=\"amount\"\n                  id=\"amount\"\n                  value={ formData.amount }\n                  placeholder={ minAmount }\n                  onChange={ onChange }\n                />\n              </CCol>\n            </CRow>\n          </CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton onClick={ onClick }\n                   disabled={ isLoading || !valid }\n                   className=\"text-white py-2\" size=\"sm\"\n                   color=\"primary\">\n            { isLoading\n              ? <RegularLoader classes=\"text-white\"/>\n              : t('offers.send') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n  return (\n    <>\n      <CListGroupItem className=\"employees py-4 px-2 px-md-3\" key={ id }>\n        <CRow className=\"align-items-stretch m-0\">\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{t('bank')}</small>\n            <h6 className=\"m-0\">{ name }</h6>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n            <span className=\"d-block\">{ `${ percentage } %` }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n            <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n            <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 3 }>\n            <small className=\"text-muted\">{ t('requests.create.form.minMax') }</small>\n            <span className=\"d-block\">{ `${ minAmount } ${ currency } - ${ maxAmount } ${ currency }` }</span>\n          </CCol>\n          <CCol xs={ 6 } xl={ 1 }\n              className=\"d-flex align-self-center justify-content-end ms-auto ms-0 text-end text-md-start justify-content-md-start justify-content-xl-end\">\n            <CLink\n              role=\"button\"\n              className=\"text-start\"\n              onClick={ handleClick }\n            >\n              {t('requests.create.form.acceptRequest')}\n            </CLink>\n          </CCol>\n        </CRow>\n      </CListGroupItem>\n      { renderCreateDepositModal() }\n    </>\n  )\n}\n\nexport default SingleOffer\n","import React from 'react'\nimport {\n  CToaster,\n\tCCard,\n\tCCol,\n\tCRow,\n\tCCardBody,\n\tCListGroup,\n\tCListGroupItem,\n\tCButton\n} from '@coreui/react'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '../components/titles/pageTitle';\nimport SingleOffer from './SingleOffer'\n\nconst OffersView = ({ setApprovalModalVisible, user, loading, offersList, toaster, toast, applyOfferHandler }) => {\n  const { t } = useTranslation();\n  const renderOffersList = () => offersList.map((offerInfo) => (\n    <SingleOffer user={user} setApprovalModalVisible={setApprovalModalVisible} key={offerInfo.id} applyOfferHandler={applyOfferHandler} offerInfo={offerInfo} />\n  ))\n\tconst renderEmptyMessage = () => (<p className=\"text-center m-0\">{t('offers.empty')}</p>)\n\n  return (\n    <>\n      <PageTitle\n        title={t('offers.title')}\n      />\n      {(loading || (!loading && !offersList.length)) &&\n\t\t\t\t<CCard className=\"mt-5\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t{loading && <Loader />}\n\t\t\t\t\t\t{(!loading && !offersList.length) && renderEmptyMessage()}\n\t\t\t\t\t</CCardBody>\n\t\t\t\t</CCard>}\n\t\t\t{(!loading && !!offersList.length) && <CListGroup className=\"employees\">{renderOffersList()}</CListGroup>}\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n    </>\n  )\n}\n\nexport default OffersView\n","import React, { useState, useRef, useEffect } from 'react'\nimport {\n  CToast,\n  CToastHeader,\n  CToastBody\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\nimport OffersView from './OffersView'\n\nimport { getOffers, applyOffer } from 'src/services'\nimport RequestAccountApprovalModal from '../../components/requestAccountApprovalModal'\nimport { connect } from 'react-redux'\nimport { setApprovalModalVisibility } from '../../store'\nimport { Helmet } from 'react-helmet'\nimport { Link } from 'react-router-dom'\n\nconst OffersContainer = ({ isApprovalModalShown, user, setVisible, ...rest }) => {\n  const { t } = useTranslation()\n  const [loading, setLoading] = useState(false)\n  const [offersList, setOffersList] = useState([])\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n\n  useEffect(async () => {\n    try {\n      setLoading(true)\n      const offersList = await getOffers()\n\n      setOffersList([...offersList])\n    } catch (error) {\n      addToast(() => showErrorToast())\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const applyOfferHandler = async (data, id) => {\n    try {\n      const response = await applyOffer({ ...data, depositId: id })\n      if (!response.message) {\n\n        addToast(() => showErrorToast('Данные Вашей Компании переданы в банк для дальнейшей работы, вскоре с Вами свяжется специалист:)\\n' +\n          '\\n' +\n          'Информацию о вкладе вы найдете в ', false))\n      } else {\n        addToast(() => showErrorToast())\n      }\n    } catch (err) {\n      addToast(() => showErrorToast())\n    } finally {\n    }\n  }\n\n  const showErrorToast = (message = '', isError = true) => (\n    <CToast title={ isError ? t('defaultErrorTitle') : 'Ваша заявка на размещение депозита Принята!' }\n            autohide={ true }>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill={ isError ? '#EB5757' : '#6FCF97' }></rect>\n        </svg>\n        <strong className=\"me-auto\">{ isError ? t('defaultErrorTitle') : t('congratulations') }</strong>\n      </CToastHeader>\n      <CToastBody>\n        { (message &&\n          <>\n            { message }\n            <Link to={{pathname: '/requests', query: {mode: 'default', tab: 2}}}>активных заявках</Link>\n          </>)\n        || t('default400Error') }</CToastBody>\n    </CToast>\n  )\n\n  const propsData = {\n    setApprovalModalVisible: setVisible,\n    user,\n    applyOfferHandler,\n    loading,\n    offersList,\n    toaster,\n    toast,\n    ...rest\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Предложения от банков | Deposit Platform</title>\n      </Helmet>\n      <RequestAccountApprovalModal/>\n      <OffersView { ...propsData } />\n    </>\n  )\n}\nconst mapStateToProps = ({ isApprovalModalShown, user }) => ({\n  isApprovalModalShown,\n  user\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisible: isShown => dispatch(setApprovalModalVisibility(isShown)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OffersContainer)\n","import OffersContainer from './OffersContainer'\n\nexport default OffersContainer\n","import React from 'react'\n\nconst Loader = ({ classes }) => (\n\t<div className={`${classes || ''} d-flex justify-content-center intermittent spinner-border text-primary mx-auto`} style={{ width: '5em', height: '5em' }} role=\"status\"> {/* TODO сделать новый класс для спиннера, а  не переопределять этот в custom.scss*/}\n\t\t<span className=\"sr-only\" />\n\t</div>\n)\n\nexport default Loader\n","import Loader from './Loader'\n\nexport default Loader\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport classnames from 'classnames'\n\nconst ProfileTitle = ({\n\ttitle,\n\twithPrimaryButton,\n\twithSecondaryButton,\n\tprimaryButtonLabel,\n\tsecondaryButtonLabel,\n\tonPrimaryButtonClick,\n\tonSecondaryButtonClick\n}) => (\n\t<CCol xl={ 12 } className=\"mb-3 d-flex flex-column flex-md-row justify-content-between\">\n\t\t<h2>{title}</h2>\n\t\t<CCol className=\"d-flex flex-wrap flex-md-nowrap justify-content-md-end\" xs={ 12 } md={ 6 } >\n\t\t\t{\n\t\t\t\twithSecondaryButton &&\n\t\t\t\t<CButton onClick={onSecondaryButtonClick} size=\"sm\" className={ classnames('mb-3 mb-md-0 col-12 col-md-6 py-2', { 'me-0 me-md-3': withPrimaryButton }) } color=\"primary\" variant=\"outline\">\n\t\t\t\t\t{secondaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t\t{\n\t\t\t\twithPrimaryButton &&\n\t\t\t\t<CButton onClick={onPrimaryButtonClick} size=\"sm\" className=\"text-white col-12 col-md-6 py-2\" color=\"primary\">\n\t\t\t\t\t{primaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t</CCol>\n\t</CCol>\n)\n\nexport default ProfileTitle\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle\n} from '@coreui/react'\nimport { connect } from 'react-redux'\nimport { setApprovalModalVisibility } from 'src/store'\nimport { useTranslation } from 'react-i18next'\n\nconst RequestAccountApprovalModal = ({ isApprovalModalShown, setVisible }) => {\n  const { t } = useTranslation()\n\n  return (\n    <CModal alignment=\"center\" visible={isApprovalModalShown} onDismiss={() => setVisible(false)}>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={() => setVisible(false)}>\n          <CModalTitle className=\"mt-3\" component=\"h2\">{t('approvalModal.title')}</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          {t('approvalModal.text')}\n        </CModalBody>\n        <CModalFooter className=\"d-flex justify-content-start\">\n          <CButton onClick={() => {\n            setVisible(false)\n            window.open('/profile', '_self')\n          }} className=\"text-white py-2\" size=\"sm\" color=\"primary\" >\n            { t('approvalModal.primaryButton') }\n          </CButton>\n          <CButton onClick={() => setVisible(false)} className=\"py-2\" size=\"sm\" color=\"primary\" variant=\"outline\" >\n            { t('cancel') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n}\n\nconst mapStateToProps = ({isApprovalModalShown}) => ({\n  isApprovalModalShown\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisible: isShown => dispatch(setApprovalModalVisibility(isShown)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestAccountApprovalModal)\n","import RequestAccountApprovalModal from './RequestAccountApprovalModal'\n\nexport default RequestAccountApprovalModal\n"],"sourceRoot":""}