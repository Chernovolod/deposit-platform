{"version":3,"sources":["views/requests/RequestsView.js","views/requests/RequestsContainer.js","views/requests/index.js","views/components/loaders/intermittent/Loader.js","views/components/loaders/intermittent/index.js","views/components/titles/pageTitle/PageTitle.js","components/requestAccountApprovalModal/RequestAccountApprovalModal.js","components/requestAccountApprovalModal/index.js"],"names":["DefaultRequestsContent","React","lazy","ProfitabilityCalculator","CreateOrder","SingleRequest","RequestsView","specificModeData","setSpecificModeData","pageMode","setPageMode","createdRequests","activeRequests","closedRequests","isLoading","userType","rest","t","useTranslation","isDefaultPageMode","isCalculatorPageMode","isSpecificPageMode","isCreatePageMode","renderContent","specific","calculator","create","default","title","withPrimaryButton","USER_TYPE","BUSINESS","withSecondaryButton","primaryButtonLabel","secondaryButtonLabel","onPrimaryButtonClick","onSecondaryButtonClick","style","onClick","active","classes","RequestsContainer","props","setTab","tab","setState","state","getRequests","a","getBankRequests","getFilteredBankRequests","message","console","log","mode","undefined","history","push","setTimeout","id","shouldRedirect","filter","request","length","currentMode","URLSearchParams","this","location","search","get","query","prevProps","prevState","snapshot","prevMode","propsData","Helmet","Component","connect","user","type","Loader","className","width","height","role","ProfileTitle","xl","xs","md","size","classnames","color","variant","isApprovalModalShown","dispatch","setVisible","isShown","setApprovalModalVisibility","alignment","visible","onDismiss","component","window","open","RequestAccountApprovalModal"],"mappings":"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","file":"static/js/24.bd798759.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CBreadcrumb,\n  CBreadcrumbItem\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '../components/titles/pageTitle';\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { USER_TYPE } from 'src/constants'\nimport RequestAccountApprovalModal from '../../components/requestAccountApprovalModal'\nconst DefaultRequestsContent = React.lazy(() => import('src/components/defaultRequestsContent'))\nconst ProfitabilityCalculator = React.lazy(() => import('src/components/profitabilityCalculator'))\nconst CreateOrder = React.lazy(() => import('src/components/createOrder'))\nconst SingleRequest = React.lazy(() => import('src/components/singleRequest'))\n\nconst RequestsView = ({\n                        specificModeData,\n                        setSpecificModeData,\n                        pageMode,\n                        setPageMode,\n                        createdRequests,\n                        activeRequests,\n                        closedRequests,\n                        isLoading, userType, ...rest\n                      }) => {\n  const { t } = useTranslation()\n  const setPageTitle = () => t(`requests.${ pageMode }.title`)\n  const isDefaultPageMode = pageMode === 'default'\n  const isCalculatorPageMode = pageMode === 'calculator'\n  const isSpecificPageMode = pageMode === 'specific'\n  const isCreatePageMode = pageMode === 'create'\n  const renderContent = {\n    specific: () => (<SingleRequest userType={userType} setPageMode={ setPageMode } specificModeData={ specificModeData } {...rest}/>),\n    calculator: () => (<ProfitabilityCalculator />),\n    create: () => (<CreateOrder setPageMode={ setPageMode }/>),\n    default: () => (\n      <DefaultRequestsContent\n        userType={userType}\n        activeRequests={activeRequests}\n        closedRequests={closedRequests}\n        specificModeData={specificModeData}\n        setSpecificModeData={ setSpecificModeData }\n        createdRequests={ createdRequests }\n        setPageMode={ setPageMode }\n        {...rest}\n      />)\n  }\n\n  return (\n    <>\n      <RequestAccountApprovalModal />\n      <PageTitle\n        title={ setPageTitle() }\n        withPrimaryButton={ userType === USER_TYPE.BUSINESS && isDefaultPageMode }\n        withSecondaryButton={ userType === USER_TYPE.BUSINESS && isDefaultPageMode }\n        primaryButtonLabel={ t('requests.primaryButtonLabel') }\n        secondaryButtonLabel={ t('requests.secondaryButtonLabel') }\n        onPrimaryButtonClick={ () => setPageMode('create') }\n        onSecondaryButtonClick={ () => setPageMode('calculator') }\n      />\n      <CBreadcrumb style={ { '--cui-breadcrumb-divider': \"'-'\" } }>\n        { !isDefaultPageMode &&\n        <CBreadcrumbItem onClick={ () => setPageMode('default') }>{t('requests.BANK_ADMIN.bankRequests.breadcrumb.1')}</CBreadcrumbItem> }\n        { isSpecificPageMode && <CBreadcrumbItem active={ isSpecificPageMode }>{t('requests.BANK_ADMIN.bankRequests.breadcrumb.2')}</CBreadcrumbItem> }\n        { isCreatePageMode && <CBreadcrumbItem active={ isCreatePageMode }>{t('requests.BANK_ADMIN.bankRequests.breadcrumb.3')}</CBreadcrumbItem> }\n        { isCalculatorPageMode &&\n        <CBreadcrumbItem active={ isCalculatorPageMode }>{t('requests.BANK_ADMIN.bankRequests.breadcrumb.4')}</CBreadcrumbItem> }\n      </CBreadcrumb>\n      { isLoading\n        ? <Loader classes=\"mt-5\"/>\n        : renderContent[pageMode]() }\n    </>\n  )\n}\n\nexport default RequestsView\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport RequestsView from './RequestsView'\nimport { getRequests, getBankRequests, getFilteredBankRequests } from 'src/services/requests'\nimport { USER_TYPE } from 'src/constants'\nimport { Helmet } from 'react-helmet'\n\nclass RequestsContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      createdRequests: [],\n      activeRequests: [],\n      closedRequests: [],\n      specificModeData: {},\n      pageMode: 'default',\n      tab: undefined\n    }\n  }\n\n  setTab = (tab) => {\n    this.setState({\n      ...this.state,\n      tab\n    })\n  }\n\n  getRequests = async () => {\n    try {\n      this.setState({\n        ...this.state,\n        isLoading: true\n      })\n      let createdRequests, activeRequests, closedRequests\n\n      if (this.props.userType === USER_TYPE.BUSINESS || this.props.userType === 'BUSINESS_LINKED') {\n        createdRequests = await getRequests('CREATED')\n        activeRequests = await getRequests('ACTIVE')\n        closedRequests = await getRequests('CLOSED')\n      } else {\n        createdRequests = await getBankRequests()\n        activeRequests = await getFilteredBankRequests('ACTIVE')\n        closedRequests = await getFilteredBankRequests('CLOSED')\n      }\n\n      if (!createdRequests.message && !activeRequests.message && !closedRequests.message) {\n        this.setState({\n          ...this.state,\n          createdRequests,\n          activeRequests,\n          closedRequests\n        })\n      }\n    } catch (e) {\n      console.log(e)\n    } finally {\n      this.setState({\n        ...this.state,\n        isLoading: false\n      })\n    }\n  }\n\n  async componentDidMount() {\n    const currentMode = new URLSearchParams(this.props.location.search).get('mode') || this.props.location?.query?.mode\n    const tab = this.props.location?.query?.tab\n\n    this.setTab(tab)\n    if (currentMode) {\n      if (currentMode === 'specific') {\n        this.setPageMode('default')\n      }\n      if (currentMode !== 'specific') {\n        this.setPageMode(currentMode, tab)\n      }\n    }\n\n    await this.getRequests()\n  }\n\n  setPageMode = (mode, tab = undefined) => {\n    this.props.history.push(`/requests?mode=${mode}`)\n    setTimeout(() => this.setState({\n      ...this.state,\n      pageMode: mode,\n      tab\n    }), 0)\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    const currentMode = new URLSearchParams(this.props.location.search).get('mode')\n    const prevMode = new URLSearchParams(prevProps.location.search).get('mode')\n\n    // if (!prevState.activeRequests.length && this.state.activeRequests.length) this.setPageMode('default', this.state.tab)\n    if (currentMode && prevMode && prevMode !== currentMode) {\n      this.setPageMode(currentMode)\n    }\n    if (prevState.pageMode !== this.state.pageMode && this.state.pageMode === 'default') {\n      await this.getRequests()\n    }\n  }\n\n  setSpecificModeData = (id, shouldRedirect = false) => {\n    if (this.state.createdRequests.filter((request) => request.id === id).length) {\n      if(shouldRedirect) {\n        this.setState(() => ({\n          ...this.state,\n          specificModeData: this.state.createdRequests.filter((request) => request.id === id)[0]\n        }))\n      } else {\n        this.props.history.push('/requests?mode=specific')\n        this.setState(() => ({\n            ...this.state,\n            pageMode: 'specific',\n            specificModeData: this.state.createdRequests.filter((request) => request.id === id)[0]\n          }))\n      }\n      return\n    }\n    if (this.state.activeRequests.filter((request) => request.id === id)) {\n      this.props.history.push('/requests?mode=specific')\n      this.setState(() => ({\n        ...this.state,\n        pageMode: 'specific',\n        specificModeData: this.state.activeRequests.filter((request) => request.id === id)[0]\n      }))\n      return\n    }\n  }\n\n  render() {\n    const { userType } = this.props\n    const { createdRequests, closedRequests, activeRequests, pageMode, isLoading, specificModeData } = this.state\n    const propsData = {\n      userType,\n      specificModeData,\n      setSpecificModeData: this.setSpecificModeData,\n      isLoading,\n      createdRequests,\n      activeRequests,\n      closedRequests,\n      pageMode,\n      tab: this.state.tab,\n      setTab: this.setTab,\n      setPageMode: this.setPageMode,\n      ...this.props\n    }\n    return (\n      <>\n        <Helmet>\n          <title>Заявки | Deposit Platform</title>\n        </Helmet>\n        <RequestsView { ...propsData } />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  userType: user.type\n})\n\nexport default connect(mapStateToProps, null)(RequestsContainer)\n","import RequestsContainer from './RequestsContainer'\n\nexport default RequestsContainer\n","import React from 'react'\n\nconst Loader = ({ classes }) => (\n\t<div className={`${classes || ''} d-flex justify-content-center intermittent spinner-border text-primary mx-auto`} style={{ width: '5em', height: '5em' }} role=\"status\"> {/* TODO сделать новый класс для спиннера, а  не переопределять этот в custom.scss*/}\n\t\t<span className=\"sr-only\" />\n\t</div>\n)\n\nexport default Loader\n","import Loader from './Loader'\n\nexport default Loader\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport classnames from 'classnames'\n\nconst ProfileTitle = ({\n\ttitle,\n\twithPrimaryButton,\n\twithSecondaryButton,\n\tprimaryButtonLabel,\n\tsecondaryButtonLabel,\n\tonPrimaryButtonClick,\n\tonSecondaryButtonClick\n}) => (\n\t<CCol xl={ 12 } className=\"mb-3 d-flex flex-column flex-md-row justify-content-between\">\n\t\t<h2>{title}</h2>\n\t\t<CCol className=\"d-flex flex-wrap flex-md-nowrap justify-content-md-end\" xs={ 12 } md={ 6 } >\n\t\t\t{\n\t\t\t\twithSecondaryButton &&\n\t\t\t\t<CButton onClick={onSecondaryButtonClick} size=\"sm\" className={ classnames('mb-3 mb-md-0 col-12 col-md-6 py-2', { 'me-0 me-md-3': withPrimaryButton }) } color=\"primary\" variant=\"outline\">\n\t\t\t\t\t{secondaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t\t{\n\t\t\t\twithPrimaryButton &&\n\t\t\t\t<CButton onClick={onPrimaryButtonClick} size=\"sm\" className=\"text-white col-12 col-md-6 py-2\" color=\"primary\">\n\t\t\t\t\t{primaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t</CCol>\n\t</CCol>\n)\n\nexport default ProfileTitle\n","import {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle\n} from '@coreui/react'\nimport { connect } from 'react-redux'\nimport { setApprovalModalVisibility } from 'src/store'\nimport { useTranslation } from 'react-i18next'\n\nconst RequestAccountApprovalModal = ({ isApprovalModalShown, setVisible }) => {\n  const { t } = useTranslation()\n\n  return (\n    <CModal alignment=\"center\" visible={isApprovalModalShown} onDismiss={() => setVisible(false)}>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={() => setVisible(false)}>\n          <CModalTitle className=\"mt-3\" component=\"h2\">{t('approvalModal.title')}</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          {t('approvalModal.text')}\n        </CModalBody>\n        <CModalFooter className=\"d-flex justify-content-start\">\n          <CButton onClick={() => {\n            setVisible(false)\n            window.open('/profile', '_self')\n          }} className=\"text-white py-2\" size=\"sm\" color=\"primary\" >\n            { t('approvalModal.primaryButton') }\n          </CButton>\n          <CButton onClick={() => setVisible(false)} className=\"py-2\" size=\"sm\" color=\"primary\" variant=\"outline\" >\n            { t('cancel') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n}\n\nconst mapStateToProps = ({isApprovalModalShown}) => ({\n  isApprovalModalShown\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisible: isShown => dispatch(setApprovalModalVisibility(isShown)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestAccountApprovalModal)\n","import RequestAccountApprovalModal from './RequestAccountApprovalModal'\n\nexport default RequestAccountApprovalModal\n"],"sourceRoot":""}