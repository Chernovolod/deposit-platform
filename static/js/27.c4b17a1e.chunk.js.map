{"version":3,"sources":["views/deposits/DepositsView.js","views/deposits/DepositsContainer.js","views/deposits/index.js","views/components/loaders/intermittent/Loader.js","views/components/loaders/intermittent/index.js","views/components/titles/pageTitle/PageTitle.js"],"names":["DefaultDepositsContent","React","lazy","SingleDeposit","DepositsView","createDepositHandler","specificModeData","setSpecificModeData","pageMode","setPageMode","closedDeposits","activeDeposits","isLoading","visible","setVisible","onChange","isCreatingOffer","t","useTranslation","isDefaultPageMode","isSpecificPageMode","renderContent","specific","default","onSubmit","title","withPrimaryButton","primaryButtonLabel","onPrimaryButtonClick","style","onClick","active","classes","alignment","onDismiss","className","component","xs","xl","id","aria-describedby","autoComplete","type","name","aria-label","value","placeholder","disabled","size","color","DepositsContainer","props","getDepositsHandler","a","setState","state","getDeposits","message","console","log","mode","isHistoryDeposit","filter","request","onChangeNewOfferHandler","target","newDepositData","createDeposit","percentage","currency","days","minAmount","maxAmount","this","prevProps","prevState","snapshot","propsData","Helmet","Component","Loader","width","height","role","ProfileTitle","withSecondaryButton","secondaryButtonLabel","onSecondaryButtonClick","md","classnames","variant"],"mappings":"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","file":"static/js/27.c4b17a1e.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CBreadcrumb,\n  CBreadcrumbItem, CButton,\n  CCol, CForm,\n  CFormControl,\n  CFormFloating,\n  CFormLabel, CFormSelect, CFormText, CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '../components/titles/pageTitle';\nimport Loader from 'src/views/components/loaders/intermittent'\nimport RegularLoader from '../components/loaders/regular'\n// import DefaultDepositsContent from 'src/components/defaultDepositsContent'\n// import SingleRequest from 'src/components/singleRequest'\n\nconst DefaultDepositsContent = React.lazy(() => import('src/components/defaultDepositsContent'))\nconst SingleDeposit = React.lazy(() => import('src/components/singleDeposit'))\n\nconst DepositsView = ({\n                        createDepositHandler,\n                        specificModeData,\n                        setSpecificModeData,\n                        pageMode,\n                        setPageMode,\n                        closedDeposits,\n                        activeDeposits,\n                        isLoading,\n                        visible,\n                        setVisible,\n                        onChange,\n                        isCreatingOffer\n                      }) => {\n  const { t } = useTranslation()\n  const setPageTitle = () => t(`deposits.${ pageMode }.title`)\n  const isDefaultPageMode = pageMode === 'default'\n  const isSpecificPageMode = pageMode === 'specific'\n  const renderContent = {\n    specific: () => (<SingleDeposit setPageMode={ setPageMode } specificModeData={ specificModeData }/>),\n    default: () => (\n      <DefaultDepositsContent\n        activeDeposits={ activeDeposits }\n        closedDeposits={ closedDeposits }\n        setSpecificModeData={ setSpecificModeData }\n        setPageMode={ setPageMode }\n        setVisible={ setVisible }\n      />)\n  }\n  const onSubmit = () => {\n    createDepositHandler()\n  }\n  const renderCreateDepositModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('deposits.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          <CForm>\n            <CRow className=\"m-0\">\n              <CCol xs={ 4 } xl={ 2 } className=\"amount-container px-0 me-md-3\">\n                <CFormText component=\"span\" id=\"percentage\">{ t('requests.create.form.percentage') }</CFormText>\n                <CFormControl\n                  aria-describedby=\"percentage\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  name=\"percentage\"\n                  id=\"percentage\"\n                  // placeholder=\"%\"\n                  onChange={ onChange }\n                />\n              </CCol>\n              <CCol xs={ 8 } className=\"ps-2 ps-md-0\" xl={ 4 }>\n                <CFormText component=\"span\" id=\"days\">{ t('requests.create.form.days') }</CFormText>\n                <CFormSelect name=\"days\"\n                             onChange={ onChange }\n                             aria-describedby=\"days\" aria-label={ t('requests.create.form.days') }>\n                  <option value=\"90\">{t('requests.days.90')}</option>\n                  <option value=\"180\">{t('requests.days.180')}</option>\n                  <option value=\"365\">{t('requests.days.365')}</option>\n                  <option value=\"1095\">{t('requests.days.1095')}</option>\n                </CFormSelect>\n              </CCol>\n              <CCol className=\"p-0 mt-3 mt-md-0\" xs={ 12 } xl={ 5 }>\n                <CFormText component=\"span\" id=\"type\">{ t('requests.create.form.type') }</CFormText>\n                <CFormSelect name=\"type\" onChange={ onChange } aria-describedby=\"type\"\n                             aria-label={ t('requests.create.form.type') }>\n                  <option value=\"IRREVOCABLE\">{t('Irrevocable')}</option>\n                  <option value=\"REVOCABLE\">{t('Revocable')}</option>\n                </CFormSelect>\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-3 mt-md-4\">\n              <CCol className=\"mt-3 mt-md-0\" xs={ 12 } xl={ 5 }>\n                <CFormText component=\"span\" id=\"minAmount\">{ t('requests.create.form.minimalAmount') }</CFormText>\n                <CFormControl\n                  aria-describedby=\"minAmount\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  name=\"minAmount\"\n                  id=\"minAmount\"\n                  placeholder=\"0\"\n                  onChange={ onChange }\n                />\n              </CCol>\n              <CCol className=\"mt-3 mt-md-0\" xs={ 12 } xl={ 5 }>\n                <CFormText component=\"span\" id=\"maxAmount\">{ t('requests.create.form.maximumAmount') }</CFormText>\n                <CFormControl\n                  aria-describedby=\"maxAmount\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  name=\"maxAmount\"\n                  id=\"maxAmount\"\n                  placeholder=\"0\"\n                  onChange={ onChange }\n                />\n              </CCol>\n              <CCol className=\"mt-3 mt-md-0\" xl={ 2 }>\n                <CFormText component=\"span\" id=\"currency\">{ t('requests.create.form.currency') }</CFormText>\n                <CFormSelect name=\"currency\" onChange={ onChange } aria-describedby=\"currency\"\n                             aria-label={ t('requests.create.form.currency') }>\n                  <option value=\"BYN\">{t('BYN')}</option>\n                  <option value=\"USD\">{t('USD')}</option>\n                  <option value=\"EUR\">{t('EUR')}</option>\n                  <option value=\"RUB\">{t('RUB')}</option>\n                </CFormSelect>\n              </CCol>\n            </CRow>\n          </CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton onClick={ onSubmit } disabled={ isCreatingOffer }\n                   className=\"text-white py-2 col-12 col-md-6\" size=\"sm\"\n                   color=\"primary\">\n            { isCreatingOffer ? <RegularLoader classes=\"text-white\"/> : t('deposits.modal.primaryButton') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n  return (\n    <>\n      <PageTitle\n        title={ setPageTitle() }\n        withPrimaryButton={ isDefaultPageMode }\n        primaryButtonLabel={ t('deposits.primaryButtonLabel') }\n        onPrimaryButtonClick={ () => setVisible(true) }\n      />\n      <CBreadcrumb style={ { '--cui-breadcrumb-divider': \"'-'\" } }>\n        { !isDefaultPageMode &&\n        <CBreadcrumbItem onClick={ () => setPageMode('default') }>{ t('deposits.default.title') }</CBreadcrumbItem> }\n        { isSpecificPageMode &&\n        <CBreadcrumbItem active={ isSpecificPageMode }>{ t('deposits.specific.title') }</CBreadcrumbItem> }\n      </CBreadcrumb>\n      { isLoading\n        ? <Loader classes=\"mt-5\"/>\n        : renderContent[pageMode]() }\n      { renderCreateDepositModal() }\n    </>\n  )\n}\n\nexport default DepositsView\n","import React, { Component } from 'react'\nimport DepositsView from './DepositsView'\nimport { createDeposit, getDeposits } from 'src/services'\nimport { Helmet } from 'react-helmet'\n\nclass DepositsContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      isCreatingOffer: false,\n      visible: false,\n      pageMode: 'default',\n      activeDeposits: [],\n      closedDeposits: [],\n      specificModeData: {},\n      newDepositData: {\n        type: 'IRREVOCABLE',\n        percentage: 0,\n        currency: 'BYN',\n        days: 90,\n        minAmount: 0,\n        maxAmount: 0\n      }\n    }\n  }\n\n  getDepositsHandler = async () => {\n    try {\n      this.setState({\n        ...this.state,\n        isLoading: true\n      })\n      const activeDeposits = await getDeposits('ACTIVE')\n      const closedDeposits = await getDeposits('CLOSED')\n\n      if (!activeDeposits.message && !closedDeposits.message) {\n        this.setState({\n          ...this.state,\n          activeDeposits,\n          closedDeposits\n        })\n      }\n    } catch (e) {\n      console.log(e)\n    } finally {\n      this.setState({\n        ...this.state,\n        isLoading: false\n      })\n    }\n  }\n  async componentDidMount() {\n    await this.getDepositsHandler()\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.pageMode !== this.state.pageMode && this.state.pageMode === 'default') {\n      await this.getDepositsHandler()\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      pageMode: 'default'\n    })\n  }\n\n  setPageMode = (mode) => this.setState({\n    pageMode: mode\n  })\n\n  setSpecificModeData = (id, isHistoryDeposit = false) => {\n    const [specificModeData] = this.state[isHistoryDeposit ? 'closedDeposits' : 'activeDeposits'].filter((request) => request.id === id)\n    this.setState({\n      specificModeData\n    })\n  }\n\n  setVisible = (state) => {\n    this.setState({\n      visible: state\n    })\n  }\n\n  onChangeNewOfferHandler = ({ target: {name, value}}) => {\n    this.setState({\n      newDepositData: {\n        ...this.state.newDepositData,\n        [name]: value\n      }\n    })\n  }\n\n  createDepositHandler = async () => {\n    try {\n      this.setState({\n        isCreatingOffer: true\n      })\n      const data = await createDeposit(this.state.newDepositData)\n      if (!data.message) {\n        this.setState({\n          visible: false\n        })\n        await this.getDepositsHandler()\n      }\n    } catch (e) {\n\n    } finally {\n      this.setState({\n        isCreatingOffer: false\n      })\n    }\n  }\n\n  render() {\n    const { isCreatingOffer, closedDeposits, activeDeposits, pageMode, isLoading, specificModeData, visible } = this.state\n    const propsData = {\n      isCreatingOffer,\n      createDepositHandler: this.createDepositHandler,\n      onChange: this.onChangeNewOfferHandler,\n      setVisible: this.setVisible,\n      visible,\n      specificModeData,\n      setSpecificModeData: this.setSpecificModeData,\n      isLoading,\n      activeDeposits,\n      closedDeposits,\n      pageMode,\n      setPageMode: this.setPageMode,\n      ...this.props\n    }\n    return (\n      <>\n        <Helmet>\n          <title>Вклады | Deposit Platform</title>\n        </Helmet>\n        <DepositsView { ...propsData } />\n      </>\n    )\n  }\n}\n\nexport default DepositsContainer\n","import DepositsContainer from './DepositsContainer'\n\nexport default DepositsContainer\n","import React from 'react'\n\nconst Loader = ({ classes }) => (\n\t<div className={`${classes || ''} d-flex justify-content-center intermittent spinner-border text-primary mx-auto`} style={{ width: '5em', height: '5em' }} role=\"status\"> {/* TODO сделать новый класс для спиннера, а  не переопределять этот в custom.scss*/}\n\t\t<span className=\"sr-only\" />\n\t</div>\n)\n\nexport default Loader\n","import Loader from './Loader'\n\nexport default Loader\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport classnames from 'classnames'\n\nconst ProfileTitle = ({\n\ttitle,\n\twithPrimaryButton,\n\twithSecondaryButton,\n\tprimaryButtonLabel,\n\tsecondaryButtonLabel,\n\tonPrimaryButtonClick,\n\tonSecondaryButtonClick\n}) => (\n\t<CCol xl={ 12 } className=\"mb-3 d-flex flex-column flex-md-row justify-content-between\">\n\t\t<h2>{title}</h2>\n\t\t<CCol className=\"d-flex flex-wrap flex-md-nowrap justify-content-md-end\" xs={ 12 } md={ 6 } >\n\t\t\t{\n\t\t\t\twithSecondaryButton &&\n\t\t\t\t<CButton onClick={onSecondaryButtonClick} size=\"sm\" className={ classnames('mb-3 mb-md-0 col-12 col-md-6 py-2', { 'me-0 me-md-3': withPrimaryButton }) } color=\"primary\" variant=\"outline\">\n\t\t\t\t\t{secondaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t\t{\n\t\t\t\twithPrimaryButton &&\n\t\t\t\t<CButton onClick={onPrimaryButtonClick} size=\"sm\" className=\"text-white col-12 col-md-6 py-2\" color=\"primary\">\n\t\t\t\t\t{primaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t</CCol>\n\t</CCol>\n)\n\nexport default ProfileTitle\n"],"sourceRoot":""}