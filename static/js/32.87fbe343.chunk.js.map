{"version":3,"sources":["components/singleDeposit/SingleDepositView.js","components/singleDeposit/SingleDepositContainer.js","components/singleDeposit/index.js"],"names":["SingleDepositView","isLoading","visible","setVisible","onClickHandler","toast","toaster","handleCloseRequest","specificModeData","id","orders","status","minAmount","percentage","currency","days","type","t","useTranslation","className","classnames","xs","xl","length","data-id","onClick","role","map","amount","alignment","onDismiss","component","disabled","size","color","classes","variant","ref","push","placement","SingleDepositContainer","setPageMode","rest","useState","setLoading","addToast","useRef","showErrorToast","message","title","autohide","close","width","height","xmlns","preserveAspectRatio","focusable","fill","a","closeDeposit","data","propsData"],"mappings":"uSAsHeA,EArGW,SAAC,GASO,IARLC,EAQI,EARJA,UACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,WACAC,EAKI,EALJA,eACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,mBAEI,IADJC,iBAAoBC,EAChB,EADgBA,GAAIC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,OAAQC,EACpC,EADoCA,UAAWC,EAC/C,EAD+CA,WAAYC,EAC3D,EAD2DA,SAAUC,EACrE,EADqEA,KAAMC,EAC3E,EAD2EA,KAGlGC,EAAMC,cAAND,EAoBR,OACE,qCACE,eAAC,IAAD,CACEE,UAAYC,IAAW,oEAAqE,CAAE,0BAAsC,WAAXT,IAD3H,UAEE,eAAC,IAAD,CAAMU,GAAK,EAAIC,GAAK,EAApB,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,iCAClC,oBAAIE,UAAU,MAAd,mBAA0BP,EAA1B,YAAyCE,QAE3C,eAAC,IAAD,CAAMK,UAAU,sCAAsCE,GAAK,EAAIC,GAAK,EAApE,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,qCAClC,oBAAIE,UAAU,UAAd,mBAA8BN,EAA9B,WAEF,eAAC,IAAD,CAAMQ,GAAK,EAAIC,GAAK,EAApB,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,+BAClC,oBAAIE,UAAU,UAAd,SAA0BF,EAAE,iBAAD,OAAmBF,SAEhD,eAAC,IAAD,CAAMI,UAAU,sCAAsCE,GAAK,EAAIC,GAAK,EAApE,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,+BAClC,oBAAIE,UAAU,UAAd,SAA0BF,EAAE,YAAD,OAAcD,SAE3C,eAAC,IAAD,CAAMK,GAAK,EAAIC,GAAK,EAApB,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,uCAClC,oBAAIE,UAAU,cAAd,SAA8BT,EAAOa,QAAU,OAEpC,WAAXZ,GAAuB,cAAC,IAAD,CAAMW,GAAK,EAAID,GAAK,EACdF,UAAU,wGADhB,SAEvB,cAAC,IAAD,CACEK,UAAUf,EACVgB,QAAUrB,EACVe,UAAU,qBACVO,KAAK,SAJP,SAMIT,EAAE,iDAIV,oBAAIE,UAAU,OAAd,SAAuBF,EAAE,8CACvBP,EAAOa,QAAU,oBAAIJ,UAAU,mBAAd,SAAmCF,EAAE,kCACxD,cAAC,IAAD,CAAYE,UAAU,iBAAtB,WACMT,EAAOa,QACTb,EAAOiB,KAAI,gBAAGlB,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMF,EAAb,EAAaA,SAAUD,EAAvB,EAAuBA,WAAYE,EAAnC,EAAmCA,KAAMa,EAAzC,EAAyCA,OAAzC,OACT,cAAC,IAAD,CAAyBT,UAAU,8BAAnC,SACE,eAAC,IAAD,CAAMA,UAAU,kDAAhB,UACE,eAAC,IAAD,CAAMA,UAAU,eAAeE,GAAK,EAAIC,GAAK,EAA7C,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,iCAClC,oBAAIE,UAAU,MAAd,mBAA0BS,EAA1B,YAAsCd,QAExC,eAAC,IAAD,CAAMK,UAAU,sCAAsCE,GAAK,EAAIC,GAAK,EAApE,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,qCAClC,sBAAME,UAAU,UAAhB,mBAAgCN,EAAhC,WAEF,eAAC,IAAD,CAAMM,UAAU,eAAeE,GAAK,EAAIC,GAAK,EAA7C,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,+BAClC,sBAAME,UAAU,UAAhB,SAA4BF,EAAE,iBAAD,OAAmBF,SAElD,eAAC,IAAD,CAAMI,UAAU,sCAAsCE,GAAK,EAAIC,GAAK,EAApE,UACE,uBAAOH,UAAU,aAAjB,SAAgCF,EAAE,+BAClC,sBAAME,UAAU,UAAhB,SAA4BF,EAAE,YAAD,OAAcD,aAhB5BP,QA3D7B,cAAC,IAAD,CAAQoB,UAAU,SAAS3B,QAAUA,EAAU4B,UAAY,kBAAM3B,GAAW,IAA5E,SACE,eAAC,IAAD,CAAegB,UAAU,YAAzB,UACE,cAAC,IAAD,CAAcW,UAAY,kBAAM3B,GAAW,IAA3C,SACE,cAAC,IAAD,CAAa4B,UAAU,KAAvB,SAA8Bd,EAAE,qCAElC,cAAC,IAAD,CAAYE,UAAU,OAAtB,SACIF,EAAE,qCAEN,eAAC,IAAD,CAAcE,UAAU,wBAAxB,UACE,cAAC,IAAD,CAASa,SAAW/B,EAAYwB,QAAUlB,EAAqBY,UAAU,kBAAkBc,KAAK,KACvFC,MAAM,UADf,SAC2BjC,EAAY,cAAC,IAAD,CAAekC,QAAQ,eAAiBlB,EAAE,SACjF,cAAC,IAAD,CAASQ,QAAU,kBAAMtB,GAAW,IAASgB,UAAU,OAAOc,KAAK,KAAKC,MAAM,UACrEE,QAAQ,UADjB,SAC6BnB,EAAE,gBAuEnC,cAAC,KAAD,CAAUoB,IAAM/B,EAAUgC,KAAOjC,EAAQkC,UAAU,gB,SC3C1CC,EAjEgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAajC,EAAgC,EAAhCA,iBAAqBkC,EAAW,kDACrEzB,EAAMC,cAAND,EACR,EAAgC0B,oBAAS,GAAzC,mBAAO1C,EAAP,KAAkB2C,EAAlB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOzC,EAAP,KAAgBC,EAAhB,KAIA,EAA0BwC,mBAAS,GAAnC,mBAAOtC,EAAP,KAAcwC,EAAd,KACMvC,EAAUwC,mBACVC,EAAiB,eAACC,EAAD,uDAAW,GAAX,OACrB,eAAC,KAAD,CAAQC,MAAOhC,EAAE,qBAAsBiC,UAAU,EAAjD,UACE,eAAC,KAAD,CAAcC,OAAK,EAAnB,UACE,qBACEhC,UAAU,eACViC,MAAM,KACNC,OAAO,KACPC,MAAM,6BACNC,oBAAoB,iBACpBC,UAAU,QACV9B,KAAK,MAPP,SASE,sBAAM0B,MAAM,OAAOC,OAAO,OAAOI,KAAK,cAExC,wBAAQtC,UAAU,UAAlB,SAA6BF,EAAE,0BAEjC,cAAC,KAAD,UAAa+B,GAAW/B,EAAE,yBAGxBV,EAAkB,uCAAG,4BAAAmD,EAAA,sEAEvBd,GAAW,GAFY,SAGJe,YAAanD,EAAiBC,IAH1B,QAGjBmD,EAHiB,QAIbZ,SACRP,EAAY,WAEVmB,EAAKZ,SACPH,GAAS,kBAAME,EAAea,EAAKZ,YARd,gDAWvBJ,GAAW,GACXC,GAAS,kBAAME,OAZQ,yBAevBH,GAAW,GACXzC,GAAW,GAhBY,4EAAH,qDAmBlB0D,EAAS,aACbzD,eA5CqB,WACrBD,GAAW,IA4CXD,UACAC,aACAG,UACAD,QACAJ,YACAO,mBACAD,sBACGmC,GAEL,OACE,mCACE,cAAC,EAAD,eAAuBmB,OC/DdrB","file":"static/js/32.87fbe343.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  CButton,\n  CCol, CFormControl,\n  CListGroupItem, CListGroup,\n  CModal,\n  CLink,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow, CToaster\n} from '@coreui/react'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport classnames from 'classnames'\n\nconst SingleDepositView = ({\n                             isLoading,\n                             visible,\n                             setVisible,\n                             onClickHandler,\n                             toast,\n                             toaster,\n                             handleCloseRequest,\n                             specificModeData: { id, orders, status, minAmount, percentage, currency, days, type }\n                           }) => {\n\n  const { t } = useTranslation()\n  const renderCloseOrderModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('deposits.specific.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-2\">\n          { t('deposits.specific.modal.content') }\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton disabled={ isLoading } onClick={ handleCloseRequest } className=\"text-white py-2\" size=\"sm\"\n                   color=\"primary\">{ isLoading ? <RegularLoader classes=\"text-white\"/> : t('yes') }</CButton>\n          <CButton onClick={ () => setVisible(false) } className=\"py-2\" size=\"sm\" color=\"primary\"\n                   variant=\"outline\">{ t('no') }</CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n\n  return (\n    <>\n      <CRow\n        className={ classnames('align-items-stretch bg-primary rounded-3 m-0 py-4 px-2 text-white', { 'justify-content-between': status === 'CLOSED' }) }>\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.amount') }</small>\n          <h6 className=\"m-0\">{ `${ minAmount } ${ currency }` }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.percentage') }</small>\n          <h6 className=\"d-block\">{ `${ percentage } %` }</h6>\n        </CCol>\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.days') }</small>\n          <h6 className=\"d-block\">{ t(`requests.days.${ days }`) }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.type') }</small>\n          <h6 className=\"d-block\">{ t(`requests.${ type }`) }</h6>\n        </CCol>\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.sentRequests') }</small>\n          <h6 className=\"d-block m-0\">{ orders.length || 0 }</h6>\n        </CCol>\n        { status !== 'CLOSED' && <CCol xl={ 2 } xs={ 6 }\n                                       className=\"d-flex align-self-md-center align-self-end justify-content-end justify-content-md-start text-md-start\">\n          <CLink\n            data-id={ id }\n            onClick={ onClickHandler }\n            className=\"text-white fw-bold\"\n            role=\"button\"\n          >\n            { t('requests.create.form.closeContribution') }\n          </CLink>\n        </CCol> }\n      </CRow>\n      <h4 className=\"mt-5\">{ t('deposits.specific.appliedRequests.title') }</h4>\n      {!orders.length && <h5 className=\"text-center mt-5\">{ t('requests.BANK_ADMIN.subtitle') }</h5>}\n      <CListGroup className=\"employees mt-4\">\n        { !!orders.length && (\n          orders.map(({ id, type, currency, percentage, days, amount }) => (\n            <CListGroupItem key={id} className=\"employees py-4 px-2 px-md-2\">\n              <CRow className=\"m-0 align-items-stretch justify-content-between\">\n                <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n                  <small className=\"text-muted\">{ t('requests.create.form.amount') }</small>\n                  <h6 className=\"m-0\">{ `${ amount } ${ currency }` }</h6>\n                </CCol>\n                <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n                  <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n                  <span className=\"d-block\">{ `${ percentage } %` }</span>\n                </CCol>\n                <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n                  <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n                  <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n                </CCol>\n                <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n                  <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n                  <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n                </CCol>\n              </CRow>\n            </CListGroupItem>\n          ))\n        ) }\n      </CListGroup>\n      { renderCloseOrderModal() }\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n    </>\n  )\n}\n\nexport default SingleDepositView\n","import React, { useRef, useState } from 'react'\nimport SingleDepositView from './SingleDepositView'\nimport { useTranslation } from 'react-i18next'\nimport { closeDeposit } from 'src/services'\nimport { CToast, CToastBody, CToastHeader } from '@coreui/react'\nconst SingleDepositContainer = ({ setPageMode, specificModeData, ...rest }) => {\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const onClickHandler = () => {\n    setVisible(true)\n  }\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const showErrorToast = (message = '') => (\n    <CToast title={t('defaultErrorTitle')} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#EB5757\"></rect>\n        </svg>\n        <strong className=\"me-auto\">{t('defaultErrorTitle')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const handleCloseRequest = async () => {\n    try {\n      setLoading(true)\n      const data = await closeDeposit(specificModeData.id)\n      if (!data.message) {\n        setPageMode('default')\n      }\n      if (data.message) {\n        addToast(() => showErrorToast(data.message))\n      }\n    } catch (e) {\n      setLoading(false)\n      addToast(() => showErrorToast())\n    }\n    finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n  const propsData = {\n    onClickHandler,\n    visible,\n    setVisible,\n    toaster,\n    toast,\n    isLoading,\n    specificModeData,\n    handleCloseRequest,\n    ...rest\n  }\n  return (\n    <>\n      <SingleDepositView {...propsData} />\n    </>\n  )\n}\n\nexport default SingleDepositContainer\n","import SingleDepositContainer from './SingleDepositContainer'\n\nexport default SingleDepositContainer\n"],"sourceRoot":""}