{"version":3,"sources":["components/DepositCard/DepositCard.js","components/dashboardDefaultContent/DashboardDefaultContentView.js","services/dashboard.js","components/dashboardDefaultContent/index.js","components/dashboardDefaultContent/DashboardDefaultContentContainer.js","assets/images/converter.png","components/currenciesContent/CurrenciesContentView.js","components/currenciesContent/index.js","components/currenciesContent/CurrenciesContentContainer.js","views/dashboard/DashboardView.js","views/dashboard/DashboardContainer.js","views/dashboard/index.js","views/components/loaders/intermittent/Loader.js","views/components/loaders/intermittent/index.js","views/components/titles/pageTitle/PageTitle.js","components/requestAccountApprovalModal/RequestAccountApprovalModal.js","components/requestAccountApprovalModal/index.js","views/components/titles/profileTitle/ProfileTitle.js","components/singleRequest/SingleRequestView.js","components/singleRequest/SingleRequestContainer.js","components/singleRequest/index.js"],"names":["STATUSES_MAP","ACTIVE","CLOSED","CREATED","DepositCard","onClick","data","revenue","amount","status","currency","type","percentage","days","t","index","useTranslation","cardColor","textColor","helperTextColor","md","className","style","backgroundColor","color","cursor","xs","xl","toLowerCase","DashboardDefaultContentView","barStatistics","donutBankStatistics","setPageMode","setSpecificModeData","requestsSummary","isLoading","isBankUser","useState","total","setTotal","useEffect","totalRevenueSum","doughnutPlugins","beforeDraw","chart","width","height","ctx","restore","fontSize","toFixed","font","textBaseline","text","document","createElement","innerText","textX","Math","round","measureText","textY","value","activeOffers","closedOffers","valueX","valueY","fillText","save","doughnutSecondPlugins","afterEvent","evt","this","$context","firstDoughnutData","labels","datasets","hoverOffset","secondDoughnutData","Object","keys","totalRevenue","map","key","values","doughnutOptions","cutout","maintainAspectRatio","responsive","plugins","legend","borderRadius","usePointStyle","pointStyle","e","item","Chart","overrides","doughnut","position","align","scales","x","ticks","display","beginAtZero","grid","drawBorder","y","borderDash","to","length","el","id","options","canvas","gradient","getContext","createLinearGradient","addColorStop","name","profit","lineTension","borderColor","borderWidth","barThickness","margin","callback","getBusinessStatistic","token","localStorage","getItem","fetchRest","API_URL","Authorization","getBankDonutStatistics","DashboardDefaultContentContainer","rest","visible","setVisible","setBarStatistics","setDonutBankStatistics","minAmount","maxAmount","isCreatingOffer","a","donutData","propsData","CurrenciesContentView","formData","currencies","toaster","toast","onChange","history","date","Date","day","getDate","year","getFullYear","month","getMonth","setDate","classes","element","border","xxl","viewBox","fill","xmlns","d","stroke","buy","data-saved","saved","objectFit","src","converter","ref","push","placement","CurrenciesContentContainer","useRef","setLoading","setFormData","addToast","sell","setCurrencies","getCurrencies","message","items","Number","console","log","showErrorToast","title","autohide","close","preserveAspectRatio","focusable","role","target","dataset","newData","parseFloat","includes","DashboardView","pageMode","userType","createDepositHandler","specificModeData","isDefaultPageMode","isCurrenciesPageMode","isCreatePageMode","isSpecificPageMode","renderContent","create","withCalculator","default","specific","withPrimaryButton","primaryButtonLabel","onPrimaryButtonClick","active","alignment","onDismiss","component","aria-describedby","autoComplete","aria-label","placeholder","disabled","size","DashboardContainer","props","state","requests","filter","request","setState","getRequestsHandler","getRequests","createdRequests","activeRequests","closedRequests","reverse","created1","created2","active1","active2","closed1","closed2","requestsSummaryData","Boolean","setRequests","reqData","mode","onChangeNewOfferHandler","newDepositData","createDeposit","getDepositsHandler","currentMode","URLSearchParams","location","search","get","nextProps","nextState","nextContext","prevProps","prevState","snapshot","prevMode","Helmet","Component","connect","user","Loader","ProfileTitle","withSecondaryButton","secondaryButtonLabel","onSecondaryButtonClick","classnames","variant","isApprovalModalShown","dispatch","isShown","setApprovalModalVisibility","window","open","RequestAccountApprovalModal","editable","onEdit","buttonLabel","SingleRequestView","onClickHandler","suggestions","handleCloseRequest","handleApplyOffer","order","bankName","bankSuggestions","data-id","orderId","SingleRequestContainer","setSuggestions","setBankSuggestions","getSuggestionsFromBusiness","getOffersByOrderId","isError","applySuggestedOffer","offerId","wasCreated","setTimeout","closeRequest"],"mappings":"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","file":"static/js/22.e3fd7de7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\n\nimport { useTranslation } from 'react-i18next';\n\nconst STATUSES_MAP = {\n  ACTIVE: 'Активный',\n  CLOSED: 'Закрытый',\n  CREATED: 'Новый'\n}\nconst DepositCard = ({ onClick, data: { revenue, amount, status, currency, type, percentage, days, index } }) => {\n  const { t } = useTranslation()\n  const cardColor = status === 'CREATED' ? '#3181ED' : '#F6F6F6'\n  const textColor = status === 'CREATED' ? '#FFF' : '#333'\n  const helperTextColor = status === 'CREATED' ? '#E0E0E0' : '#828282'\n\n  return (\n    <>\n      <CCol md={4} className=\"mb-5 px-3\">\n        <CCard onClick={onClick} className=\"p-2\" style={{backgroundColor: cardColor, color: textColor, cursor: 'pointer'}}>\n          <CCardHeader className=\"d-flex align-items-stretch border-bottom-0 bg-transparent\">\n            <CCol className=\"text-start\" xs={ 6 } xl={ 6 }>\n              <h6>{`${STATUSES_MAP[status]} ${t('requests.create.header.contribution').toLowerCase()}`}</h6>\n            </CCol>\n            <CCol className=\"text-end\" xs={ 6 } xl={ 6 }>\n              <small style={ {color: helperTextColor } }>{ t('requests.create.form.amount') }</small>\n              <h6 className=\"m-0\">{ `${ amount } ${ currency }` }</h6>\n            </CCol>\n          </CCardHeader>\n          <CCardBody className=\"pt-0\">\n            <hr className=\"m-0\" />\n            <CRow className=\"mt-3\">\n              <CCol className=\"text-start\" xs={ 6 } xl={ 6 }>\n                <small style={ {color: helperTextColor } }>{ t('requests.create.form.percentage') }</small>\n                <span className=\"d-block\">{ `${ percentage } %` }</span>\n              </CCol>\n              <CCol className=\"text-end\" xs={ 6 } xl={ 6 } >\n                <small style={ {color: helperTextColor } }>{ t('requests.create.form.days') }</small>\n                <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-3\">\n              <CCol className=\"text-start\" xs={ 6 } xl={ 6 }>\n                <small style={ {color: helperTextColor } }>{ t('requests.create.form.type') }</small>\n                <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n              </CCol>\n              <CCol className=\"text-end\" xs={ 6 } xl={ 6 }>\n                <small style={ {color: helperTextColor } }>{t('requests.create.form.revenue')}</small>\n                <span className=\"d-block\">{ `${ revenue } ${ currency }` }</span>\n              </CCol>\n            </CRow>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </>\n  )\n}\n\nexport default DepositCard\n","import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Bar, Chart, Pie, Doughnut } from 'react-chartjs-2'\nimport { Link } from 'react-router-dom'\nimport { CChart, CChartBar } from '@coreui/react-chartjs'\nimport { ProfileTitle } from '../../views/components/titles/profileTitle'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCol,\n  CRow\n} from '@coreui/react'\nimport Loader from '../../views/components/loaders/intermittent'\nimport { DepositCard } from '../DepositCard'\nimport RegularLoader from '../../views/components/loaders/regular'\n\nconst DashboardDefaultContentView = ({\n                                       barStatistics, donutBankStatistics,\n                                       setPageMode,\n                                       setSpecificModeData,\n                                       requestsSummary,\n                                       isLoading,\n                                       isBankUser\n                                     }) => {\n  const [total, setTotal] = useState(0)\n\n  useEffect(() => {\n    if (donutBankStatistics?.totalRevenueSum) setTotal(donutBankStatistics?.totalRevenueSum)\n  }, [donutBankStatistics?.totalRevenueSum])\n  const doughnutPlugins = [{\n    beforeDraw: function(chart) {\n      var width = chart.width,\n        height = chart.height,\n        ctx = chart.ctx;\n      ctx.restore();\n      var fontSize = (height / 260).toFixed(2);\n      ctx.font = fontSize + \"em sans-serif\";\n      ctx.textBaseline = \"top\";\n      var text = document.createElement('div').innerText = t('total'),\n        textX = Math.round((width - ctx.measureText(text).width) / 2.6),\n        textY = height / 2.2;\n      var value = document.createElement('div').innerText = donutBankStatistics?.activeOffers + donutBankStatistics?.closedOffers,\n        valueX = Math.round((width - ctx.measureText(value).width) / 2.55),\n        valueY = height / 1.85;\n      ctx.fillText(text, textX, textY);\n      ctx.fillText(value, valueX, valueY);\n      ctx.save();\n    }\n  }]\n\n  const doughnutSecondPlugins = [{\n    afterEvent: function(evt) {\n      this.beforeDraw(evt.$context.chart)\n    },\n    beforeDraw: function(chart) {\n      var width = chart.width,\n        height = chart.height,\n        ctx = chart.ctx;\n      ctx.restore();\n      var fontSize = (height / 260).toFixed(2);\n      ctx.font = fontSize + \"em sans-serif\";\n      ctx.textBaseline = \"top\";\n      var text = document.createElement('div').innerText = t('total'),\n        textX = Math.round((width - ctx.measureText(text).width) / 2.5),\n        textY = height / 2.2;\n      var value = document.createElement('div').innerText = `${ total } ${t('BYN')}`,\n        valueX = Math.round((width - ctx.measureText(value).width) / 2.5),\n        valueY = height / 1.85;\n      ctx.fillText(text, textX, textY);\n      ctx.fillText(value, valueX, valueY);\n      ctx.save();\n    }\n  }]\n  const firstDoughnutData = {\n    labels: [`${ donutBankStatistics.activeOffers } активных`, `${ donutBankStatistics.closedOffers } закрытых`],\n    datasets: [{\n      data: [donutBankStatistics.activeOffers, donutBankStatistics.closedOffers],\n      backgroundColor: [\n        '#2F80ED',\n        '#82B3F4',\n      ],\n      hoverOffset: 1\n    }]\n  }\n  const secondDoughnutData = {\n    labels: Object.keys(donutBankStatistics?.totalRevenue).map((key, index) => {\n      return `${ donutBankStatistics?.totalRevenue[key] } ${ key }`\n    }),\n    datasets: [{\n      data: Object.values(donutBankStatistics?.totalRevenue),\n      backgroundColor: [\n        '#2F80ED',\n        '#82B3F4',\n        '#C1D9FA',\n      ],\n      hoverOffset: 4\n    }]\n  }\n\n  const doughnutOptions = {\n    cutout: 95,\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        labels: {\n          borderRadius: 50,\n          usePointStyle: true,\n          pointStyle: 'circle',\n        },\n        onClick: function(e, item, legend) {\n          Chart.overrides.doughnut.plugins.legend.onClick(e, item, legend)\n          // setTotal(total - Number(item.text))\n          },\n        position: 'right',\n        align: 'center'\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          drawBorder: false,\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        ticks: {\n          display: false\n        },\n        grid: {\n          display: false,\n          drawBorder: false,\n          borderDash: [4, 2]\n        }\n      }\n    }\n  }\n  const data = canvas => {\n    const ctx = canvas.getContext('2d')\n    const gradient = ctx.createLinearGradient(0, 0, 0, 200)\n    gradient.addColorStop(0, '#82B3F4')\n    gradient.addColorStop(1, '#2F80ED')\n\n    return {\n      labels: barStatistics?.map(el => el.name),\n      datasets: [\n        {\n          // label: '',\n          data: barStatistics?.map(el => el.profit),\n          backgroundColor: gradient,\n          lineTension: 3,\n          borderColor: '#3181ED',\n          borderWidth: 1,\n          borderRadius: 2,\n          barThickness: 8,\n          // barPercentage: .5\n        },\n      ],\n    }\n  }\n\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        grid: {\n          drawBorder: false,\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        ticks: {\n          margin: -30,\n          callback: (value, index, values) => `${ value } BYN`\n        },\n        grid: {\n          drawBorder: false,\n          borderDash: [4, 2]\n        }\n      }\n    }\n  };\n\n  const { t } = useTranslation()\n  const onDepositCardClick = (id) => {\n    setPageMode('specific')\n    setSpecificModeData(id)\n  }\n  const setRequestsContent = () => {\n    if (isLoading) return <Loader/>\n    if (!isLoading && !requestsSummary.length) return (<div className=\"mb-5\">{ t('dashboard.deposits.empty') }</div>)\n    if (!isLoading && requestsSummary.length) {\n      return requestsSummary.map((el, index) => <DepositCard onClick={ () => onDepositCardClick(el.id) }\n                                                             setPageMode={ setPageMode } key={ el.id }\n                                                             data={ { ...el, index } }/>)\n    }\n  }\n\n  return (\n    <>\n      { !isBankUser && <CCol className=\"mt-4 mb-3 d-flex justify-content-between align-items-stretch\">\n        <h4>{ t('deposits.default.title') }</h4>\n        <Link to=\"/requests\" className=\"text-decoration-none pe-2\">{ t('watchAll') }</Link>\n      </CCol> }\n      { !isBankUser && <CRow className=\"d-flex flex-wrap\">\n        { setRequestsContent() }\n      </CRow> }\n      { isBankUser &&\n      <CRow className=\"mb-3\">\n        <CCol xl={ 6 }>\n          <div>\n            <h4 className=\"mb-3\">{ t('dashboard.deals.title') }</h4>\n          </div>\n          <CCard>\n            <CCardBody>\n              <div style={ { height: '290px' } }>\n                { !!Object.keys(donutBankStatistics.totalRevenue).length &&\n                <Doughnut data={ firstDoughnutData } options={ doughnutOptions } plugins={ doughnutPlugins }/> }\n              </div>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol className=\"pt-4 pt-md-0\" xl={ 6 }>\n          <h4 className=\"mb-3\">{ t('dashboard.TotalTurnover.title') }</h4>\n          <CCard>\n            <CCardBody>\n              <div style={ { height: '290px' } }>\n                { !!Object.keys(donutBankStatistics.totalRevenue).length &&\n                <Doughnut data={ secondDoughnutData } options={ doughnutOptions } plugins={ doughnutSecondPlugins }/> }\n              </div>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      }\n      <h4>{ isBankUser ? t('circulation') : t('income') }</h4>\n      <CCard>\n        <CCardBody>\n          <div style={ { height: '350px' } }>\n            <Bar data={ data } options={ options }/>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default DashboardDefaultContentView\n","import { fetchRest } from '../utils'\nimport { API_URL } from '../constants'\n\nexport const getBusinessStatistic = (token  = localStorage.getItem('auth-token')) => {\n  return fetchRest(`${API_URL}/company/dashboard`, 'GET', {}, { Authorization: token })\n}\n\nexport const getBankBarStatistic = (token  = localStorage.getItem('auth-token')) => {\n  return fetchRest(`${API_URL}/bank/dashboard`, 'GET', {}, { Authorization: token })\n}\n\nexport const getBankDonutStatistics = (token  = localStorage.getItem('auth-token')) => {\n  return fetchRest(`${API_URL}/bank/dashboard`, 'GET', {}, { Authorization: token })\n}\n","import DashboardDefaultContentContainer from './DashboardDefaultContentContainer'\n\nexport default DashboardDefaultContentContainer\n","import React, { useEffect, useState } from 'react'\nimport DashboardDefaultContentView from './DashboardDefaultContentView'\nimport { useTranslation } from 'react-i18next'\nimport { USER_TYPE } from '../../constants'\nimport { createDeposit, getRequests } from '../../services'\nimport {getBankBarStatistic, getBankDonutStatistics, getBusinessStatistic} from \"../../services/dashboard\";\n\nconst DashboardDefaultContentContainer = ({ setPageMode, isBankUser, ...rest }) => {\n  const { t } = useTranslation()\n  const [visible, setVisible] = useState(false)\n  const [barStatistics, setBarStatistics] = useState([])\n  const [donutBankStatistics, setDonutBankStatistics] = useState({\n    totalRevenue: {}\n  })\n  const [formData, setFormData] = useState({\n    type: 'IRREVOCABLE',\n    percentage: 0,\n    currency: 'BYN',\n    days: 90,\n    minAmount: 0,\n    maxAmount: 0\n  })\n  const [isCreatingOffer, setIsCreatingOffer] = useState(false)\n\n  useEffect(async () => {\n    if (isBankUser) {\n      const donutData = await getBankDonutStatistics()\n      setDonutBankStatistics(donutData)\n      // const data = await getBankBarStatistic()\n      // setBarStatistics(data)\n    } else {\n      const data = await getBusinessStatistic()\n      setBarStatistics(data)\n    }\n  }, [])\n\n  const propsData = {\n    donutBankStatistics,\n    barStatistics,\n    visible,\n    setVisible,\n    isCreatingOffer,\n    isBankUser,\n    setPageMode,\n    ...rest\n  }\n  return (\n    <>\n      <DashboardDefaultContentView { ...propsData } />\n    </>\n  )\n}\n\nexport default DashboardDefaultContentContainer\n","export default __webpack_public_path__ + \"static/media/converter.0a4d63be.png\";","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  CCard,\n  CCardBody, CCardImage,\n  CCardText,\n  CCol, CFormControl,\n  CRow, CToaster,\n} from '@coreui/react'\nimport { Link } from 'react-router-dom'\nimport converter from '../../assets/images/converter.png'\nimport Loader from '../../views/components/loaders/intermittent'\n\nconst CurrenciesContentView = ({ formData, currencies, toaster, toast, onChange, isLoading, history }) => {\n  const { t } = useTranslation()\n  const setDate = () => {\n    const date = new Date()\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\n    const year = date.getFullYear()\n    const month = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth()\n    return `${day}.${month}.${year}`\n  }\n  return (\n    <>\n      <CCard>\n        <CRow>\n          <CCol md={ 7 }>\n            <CCardBody className=\"p-md-5 p-3\" >\n              <CCol md={10}>\n                <h4 className=\"mb-3\">{ t('converter') }</h4>\n                <CCardText className=\"font-size-md text-muted\">\n                {`${t('currencies.text')} ${setDate()}`}\n                </CCardText>\n                {isLoading && <Loader classes=\"mt-5\" />}\n                { !isLoading && formData.length && [1,2,3,4,5,6].map((element, index) => {\n                  return (\n                    <div key={element} className=\"rounded-xl mb-3 align-items-center border-primary ps-0 p-1 d-flex\" style={{ border: '1px solid' }}>\n                      <CCol xs={4} md={5} xl={4} xxl={3}>\n                        <h5 className=\"ms-3 me-2 text-nowrap my-0 pt-1\">{`${currencies[index].amount} ${currencies[index].currency}`}</h5>\n                      </CCol>\n                      <svg width=\"2\" height=\"31\" viewBox=\"0 0 2 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M1 0V30.5\" stroke=\"#2F80ED\"/>\n                      </svg>\n                      <CFormControl\n                        className=\"border-0 ms-3\"\n                        onChange={ onChange }\n                        value={ formData[index]?.buy }\n                        type=\"text\"\n                        data-saved={formData[index]?.saved}\n                        name={ formData[index]?.currency }\n                      />\n                    </div>\n                  )\n                 }) }\n              </CCol>\n            </CCardBody>\n          </CCol>\n          <CCol md={ 5 } className=\"position-relative\">\n            <CCardImage style={{objectFit: 'cover'}} className=\"w-100 h-100\" src={ converter }/>\n            <Link\n              className=\"pb-4 ps-4 d-none d-md-block white-with-right-arrow text-decoration-none text-white position-absolute bottom-0 start-0 fs-5\"\n              to=\"/requests?mode=calculator\"\n              >\n                {t('currencies.link')}\n              </Link>\n          </CCol>\n        </CRow>\n      </CCard>\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n    </>\n  )\n}\n\nexport default CurrenciesContentView\n","import CurrenciesContentContainer from './CurrenciesContentContainer'\n\nexport default CurrenciesContentContainer\n","import React, { useEffect, useRef, useState } from 'react'\nimport CurrenciesContentView from './CurrenciesContentView'\nimport { useTranslation } from 'react-i18next'\nimport { getCurrencies } from '../../services'\nimport { CToast, CToastBody, CToastHeader } from '@coreui/react'\n\nconst CurrenciesContentContainer = ({ ...rest }) => {\n  const toaster = useRef()\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n  const [formData, setFormData] = useState([])\n  const [toast, addToast] = useState(0)\n  const [currencies, setCurrencies] = useState([\n  {\n    currency: 'BYN',\n    buy: '1',\n    sell: '1',\n    amount: 1\n  }])\n\n  useEffect(async () => {\n    if (currencies.length > 1) return\n    try {\n      setLoading(true)\n      const data = await getCurrencies()\n      if (data.length && !data.message) {\n        const items = [...currencies, ...data].map((el) => {\n          return {\n            ...el,\n            saved: el.buy,\n            buy: Number((1 / el.buy).toFixed(4))\n          }\n        })\n        setCurrencies(items)\n        setFormData(items)\n      }\n    } catch (e) {\n      console.log(e)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  const onChange = ({target: { name, value, dataset: { saved } }}) => {\n    const newData = currencies.map(el => {\n      if (name !== 'BYN' && el.currency === 'BYN') {\n        return {...el, buy: Number(Number(saved) * parseFloat(value)) || '0'}\n      }\n      if (el.currency === name) {\n        return {...el, buy: value.includes('.') ? value : Number((parseFloat(value)).toFixed(4)) || '0'}\n      } else {\n        return { ...el, buy: Number((Number(saved) / Number(el.saved) * parseFloat(value)).toFixed(4)) || '0'}\n      } // no idea what's going on here, just implemented this\n      return el\n    })\n    setCurrencies(newData)\n    setFormData(newData)\n  }\n\n  const showErrorToast = (message = '') => (\n    <CToast title={ t('defaultErrorTitle') } autohide={ true }>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#EB5757\"></rect>\n        </svg>\n        <strong className=\"me-auto\">{ t('defaultErrorTitle') }</strong>\n      </CToastHeader>\n      <CToastBody>{ message || t('default400Error') }</CToastBody>\n    </CToast>\n  )\n\n  const propsData = {\n    isLoading,\n    formData,\n    currencies,\n    onChange,\n    toaster,\n    toast,\n    ...rest\n  }\n  return (\n    <>\n      <CurrenciesContentView { ...propsData } />\n    </>\n  )\n}\n\nexport default CurrenciesContentContainer\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { PageTitle } from '../components/titles/pageTitle'\nimport {\n  CBreadcrumb,\n  CBreadcrumbItem, CButton, CCol, CForm, CFormControl, CFormSelect, CFormText,\n  CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle, CRow\n} from '@coreui/react'\nimport Loader from '../components/loaders/intermittent'\nimport DashboardDefaultContent from 'src/components/dashboardDefaultContent'\nimport CreateOrder from 'src/components/createOrder'\nimport CurrenciesContent from 'src/components/currenciesContent'\nimport RegularLoader from '../components/loaders/regular'\nimport SingleRequest from 'src/components/singleRequest'\n\nconst DashboardView = ({\n                         pageMode,\n                         setPageMode,\n                         isLoading,\n                         userType,\n                         createDepositHandler,\n                         isCreatingOffer,\n                         onChange,\n                         visible,\n                         setVisible,\n                         specificModeData,\n                         ...rest\n                       }) => {\n  const { t } = useTranslation()\n\n  const isBankUser = userType === 'BANK_ADMIN'\n  const setPageTitle = () => t(`dashboard.title.${ pageMode }`)\n  const isDefaultPageMode = pageMode === 'default'\n  const isCurrenciesPageMode = pageMode === 'currencies'\n  const isCreatePageMode = pageMode === 'create'\n  const isSpecificPageMode = pageMode === 'specific'\n  const renderContent = {\n    currencies: () => (<CurrenciesContent {...rest} />),\n    create: () => (<CreateOrder withCalculator setPageMode={ setPageMode } />),\n    default: () => (<DashboardDefaultContent setPageMode={ setPageMode } isBankUser={ isBankUser } { ...rest } />),\n    specific: () => (<SingleRequest setPageMode={ setPageMode } specificModeData={ specificModeData } />)\n  }\n  const renderCreateDepositModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('deposits.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          <CForm>\n            <CRow className=\"m-0\">\n              <CCol xs={ 4 } xl={ 2 } className=\"amount-container px-0 me-md-3\">\n                <CFormText component=\"span\" id=\"percentage\">{ t('requests.create.form.percentage') }</CFormText>\n                <CFormControl\n                  aria-describedby=\"percentage\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  name=\"percentage\"\n                  id=\"percentage\"\n                  // placeholder=\"%\"\n                  onChange={ onChange }\n                />\n              </CCol>\n              <CCol xs={ 8 } className=\"ps-2 ps-md-0\" xl={ 4 }>\n                <CFormText component=\"span\" id=\"days\">{ t('requests.create.form.days') }</CFormText>\n                <CFormSelect name=\"days\"\n                             onChange={ onChange }\n                             aria-describedby=\"days\" aria-label={ t('requests.create.form.days') }>\n                  <option value=\"90\">{t('dashboard.modal.form.select.1')}</option>\n                  <option value=\"180\">{t('dashboard.modal.form.select.2')}</option>\n                  <option value=\"365\">{t('dashboard.modal.form.select.3')}</option>\n                  <option value=\"1095\">{t('dashboard.modal.form.select.4')}</option>\n                </CFormSelect>\n              </CCol>\n              <CCol className=\"p-0 mt-3 mt-md-0\" xs={ 12 } xl={ 5 }>\n                <CFormText component=\"span\" id=\"type\">{ t('requests.create.form.type') }</CFormText>\n                <CFormSelect name=\"type\" onChange={ onChange } aria-describedby=\"type\"\n                             aria-label={ t('requests.create.form.type') }>\n                  <option value=\"REVOCABLE\">{t('Revocable')}</option>\n                  <option value=\"IRREVOCABLE\">{t('Irrevocable')}</option>\n                </CFormSelect>\n              </CCol>\n            </CRow>\n            <CRow className=\"mt-3 mt-md-4\">\n              <CCol className=\"mt-3 mt-md-0\" xs={ 12 } xl={ 5 }>\n                <CFormText component=\"span\" id=\"minAmount\">{ t('requests.create.form.minimalAmount') }</CFormText>\n                <CFormControl\n                  aria-describedby=\"minAmount\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  name=\"minAmount\"\n                  id=\"minAmount\"\n                  placeholder=\"0\"\n                  onChange={ onChange }\n                />\n              </CCol>\n              <CCol className=\"mt-3 mt-md-0\" xs={ 12 } xl={ 5 }>\n                <CFormText component=\"span\" id=\"maxAmount\">{ t('requests.create.form.maximumAmount') }</CFormText>\n                <CFormControl\n                  aria-describedby=\"maxAmount\"\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  name=\"maxAmount\"\n                  id=\"maxAmount\"\n                  placeholder=\"0\"\n                  onChange={ onChange }\n                />\n              </CCol>\n              <CCol className=\"mt-3 mt-md-0\" xl={ 2 }>\n                <CFormText component=\"span\" id=\"currency\">{ t('requests.create.form.currency') }</CFormText>\n                <CFormSelect name=\"currency\" onChange={ onChange } aria-describedby=\"currency\"\n                             aria-label={ t('requests.create.form.currency') }>\n                  <option value=\"BYN\">{t('BYN')}</option>\n                  <option value=\"USD\">{t('USD')}</option>\n                  <option value=\"EUR\">{t('EUR')}</option>\n                  <option value=\"RUB\">{t('RUB')}</option>\n                </CFormSelect>\n              </CCol>\n            </CRow>\n          </CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton onClick={ createDepositHandler } disabled={ isCreatingOffer }\n                   className=\"text-white py-2 col-12 col-md-6\" size=\"sm\"\n                   color=\"primary\">\n            { isCreatingOffer ? <RegularLoader classes=\"text-white\"/> : t('deposits.modal.primaryButton') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n  return (\n    <>\n      <PageTitle\n        title={ setPageTitle() }\n        withPrimaryButton={ isDefaultPageMode }\n        primaryButtonLabel={ t(`${ isBankUser ? 'deposits' : 'dashboard' }.primaryButtonLabel`) }\n        onPrimaryButtonClick={ () => isBankUser ? setVisible(true) : setPageMode('create') }\n      />\n      <CBreadcrumb style={ { '--cui-breadcrumb-divider': \"'-'\" } }>\n        { !isDefaultPageMode &&\n        <CBreadcrumbItem onClick={ () => setPageMode('default') }>{t('dashboard.title.default')}</CBreadcrumbItem> }\n        { isCreatePageMode && <CBreadcrumbItem active={ isCreatePageMode }>{t('dashboard.title.create')}</CBreadcrumbItem> }\n        { isCurrenciesPageMode && <CBreadcrumbItem active={ isCurrenciesPageMode }>{t('dashboard.title.currencies')}</CBreadcrumbItem> }\n        {isSpecificPageMode && <CBreadcrumbItem active={ isSpecificPageMode }>{t('dashboard.title.specific')}</CBreadcrumbItem> }\n      </CBreadcrumb>\n      { isLoading\n        ? <Loader classes=\"mt-5\"/>\n        : renderContent[pageMode]() }\n      { renderCreateDepositModal() }\n    </>\n  )\n}\n\nexport default DashboardView\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport DashboardView from './DashboardView'\nimport { createDeposit, getRequests } from '../../services'\nimport { Helmet } from 'react-helmet'\n\nclass DashboardContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      requests: [],\n      specificModeData: {},\n      isCreatingOffer: false,\n      visible: false,\n      newDepositData: {\n        type: 'IRREVOCABLE',\n        percentage: 0,\n        currency: 'BYN',\n        days: 90,\n        minAmount: 0,\n        maxAmount: 0\n      },\n      isLoading: false,\n      pageMode: 'default'\n    }\n  }\n\n  async componentDidMount () {\n    const currentMode = new URLSearchParams(this.props.location.search).get('mode')\n    if (currentMode) {\n      this.setPageMode(currentMode)\n    }\n    if (this.props.userType !== 'BANK_ADMIN') {\n      await this.getRequestsHandler()\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return nextState.newDepositData === this.state.newDepositData || !this.state.visible\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    const currentMode = new URLSearchParams(this.props.location.search).get('mode')\n    const prevMode = new URLSearchParams(prevProps.location.search).get('mode')\n    if (currentMode && prevMode && prevMode !== currentMode) {\n      this.setPageMode(currentMode)\n    }\n    if ((prevState.pageMode === 'specific' || prevState.pageMode === 'create') && prevState.pageMode !== this.state.pageMode && this.state.pageMode === 'default') {\n      await this.getRequestsHandler()\n    }\n  }\n\n  setSpecificModeData = (id, isHistoryRequest = false) => {\n    const [specificModeData] = this.state.requests.filter((request) => request.id === id)\n    this.setState({\n      specificModeData\n    })\n  }\n\n  getRequestsHandler = async () => {\n    try {\n      this.setState({\n        isLoading: true\n      })\n      let createdRequests, activeRequests, closedRequests\n\n      createdRequests = await getRequests('CREATED')\n      activeRequests = await getRequests('ACTIVE')\n      closedRequests = await getRequests('CLOSED')\n\n      if (!createdRequests.message && !activeRequests.message && !closedRequests.message) {\n        const [created1, created2] = createdRequests.reverse()\n        const [active1, active2] = activeRequests.reverse()\n        const [closed1, closed2] = closedRequests\n        const requestsSummaryData = [created1, created2, active1, active2, closed1, closed2].filter(Boolean)\n        this.setRequests(requestsSummaryData)\n      }\n    } catch (e) {\n      console.log(e)\n    } finally {\n      this.setState({\n        isLoading: false\n      })\n    }\n  }\n\n  setRequests = (reqData) => {\n    this.setState({\n      ...this.state,\n      requests: reqData\n    })\n  }\n\n  setSpecificModeData = (id) => {\n    const [specificModeData] = this.state.requests.filter((request) => request.id === id)\n    this.setState({\n      specificModeData\n    })\n  }\n\n  setPageMode = (mode) => {\n    this.props.history.push(`/dashboard?mode=${mode}`)\n    this.setState({\n      pageMode: mode\n    })\n  }\n\n  onChangeNewOfferHandler = ({ target: {name, value}}) => {\n    this.setState({\n      newDepositData: {\n        ...this.state.newDepositData,\n        [name]: value\n      }\n    })\n  }\n\n  setVisible = (state) => {\n    this.setState({\n      visible: state\n    })\n  }\n\n  createDepositHandler = async () => {\n    try {\n      this.setState({\n        isCreatingOffer: true\n      })\n      const data = await createDeposit(this.state.newDepositData)\n      if (!data.message) {\n        this.setState({\n          visible: false\n        })\n        await this.getDepositsHandler()\n      }\n    } catch (e) {\n\n    } finally {\n      this.setState({\n        isCreatingOffer: false\n      })\n    }\n  }\n\n  render() {\n    const { isCreatingOffer, pageMode, isLoading, visible, requests, specificModeData } = this.state\n    const propsData = {\n      requestsSummary: requests,\n      isCreatingOffer,\n      specificModeData,\n      setSpecificModeData: this.setSpecificModeData,\n      createDepositHandler: this.createDepositHandler,\n      onChange: this.onChangeNewOfferHandler,\n      setVisible: this.setVisible,\n      visible,\n      userType: this.props.userType,\n      isLoading,\n      pageMode,\n      setPageMode: this.setPageMode,\n      ...this.props\n    }\n    return (\n      <>\n        <Helmet>\n          <title>Главная страница | Deposit Platform</title>\n        </Helmet>\n        <DashboardView { ...propsData } />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  userType: user.type\n})\n\nexport default connect(mapStateToProps, null)(DashboardContainer)\n","import DashboardContainer from './DashboardContainer'\n\nexport default DashboardContainer\n","import React from 'react'\n\nconst Loader = ({ classes }) => (\n\t<div className={`${classes || ''} d-flex justify-content-center intermittent spinner-border text-primary mx-auto`} style={{ width: '5em', height: '5em' }} role=\"status\"> {/* TODO сделать новый класс для спиннера, а  не переопределять этот в custom.scss*/}\n\t\t<span className=\"sr-only\" />\n\t</div>\n)\n\nexport default Loader\n","import Loader from './Loader'\n\nexport default Loader\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport classnames from 'classnames'\n\nconst ProfileTitle = ({\n\ttitle,\n\twithPrimaryButton,\n\twithSecondaryButton,\n\tprimaryButtonLabel,\n\tsecondaryButtonLabel,\n\tonPrimaryButtonClick,\n\tonSecondaryButtonClick\n}) => (\n\t<CCol xl={ 12 } className=\"mb-3 d-flex flex-column flex-md-row justify-content-between\">\n\t\t<h2>{title}</h2>\n\t\t<CCol className=\"d-flex flex-wrap flex-md-nowrap justify-content-md-end\" xs={ 12 } md={ 6 } >\n\t\t\t{\n\t\t\t\twithSecondaryButton &&\n\t\t\t\t<CButton onClick={onSecondaryButtonClick} size=\"sm\" className={ classnames('mb-3 mb-md-0 col-12 col-md-6 py-2', { 'me-0 me-md-3': withPrimaryButton }) } color=\"primary\" variant=\"outline\">\n\t\t\t\t\t{secondaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t\t{\n\t\t\t\twithPrimaryButton &&\n\t\t\t\t<CButton onClick={onPrimaryButtonClick} size=\"sm\" className=\"text-white col-12 col-md-6 py-2\" color=\"primary\">\n\t\t\t\t\t{primaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t</CCol>\n\t</CCol>\n)\n\nexport default ProfileTitle\n","import {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle\n} from '@coreui/react'\nimport { connect } from 'react-redux'\nimport { setApprovalModalVisibility } from 'src/store'\nimport { useTranslation } from 'react-i18next'\n\nconst RequestAccountApprovalModal = ({ isApprovalModalShown, setVisible }) => {\n  const { t } = useTranslation()\n\n  return (\n    <CModal alignment=\"center\" visible={isApprovalModalShown} onDismiss={() => setVisible(false)}>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={() => setVisible(false)}>\n          <CModalTitle className=\"mt-3\" component=\"h2\">{t('approvalModal.title')}</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          {t('approvalModal.text')}\n        </CModalBody>\n        <CModalFooter className=\"d-flex justify-content-start\">\n          <CButton onClick={() => {\n            setVisible(false)\n            window.open('/profile', '_self')\n          }} className=\"text-white py-2\" size=\"sm\" color=\"primary\" >\n            { t('approvalModal.primaryButton') }\n          </CButton>\n          <CButton onClick={() => setVisible(false)} className=\"py-2\" size=\"sm\" color=\"primary\" variant=\"outline\" >\n            { t('cancel') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n}\n\nconst mapStateToProps = ({isApprovalModalShown}) => ({\n  isApprovalModalShown\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisible: isShown => dispatch(setApprovalModalVisibility(isShown)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestAccountApprovalModal)\n","import RequestAccountApprovalModal from './RequestAccountApprovalModal'\n\nexport default RequestAccountApprovalModal\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\n\nconst ProfileTitle = ({ title, editable, onEdit, buttonLabel }) => {\n\tconst { t } = useTranslation()\n\t\n\treturn (\n\t\t<>\n\t\t\t<CCol className=\"mt-5 mb-3 d-flex justify-content-between align-items-stretch\">\n\t\t\t\t<h4>{title}</h4>\n\t\t\t\t{editable && <CButton onClick={onEdit} color=\"secondary\" variant=\"ghost\">{buttonLabel || t('edit')}</CButton>}\n\t\t\t</CCol>\n\t\t</>\n\t)\n}\n\nexport default ProfileTitle\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  CButton,\n  CCol, CListGroupItem,\n  CModal,\n  CModalBody,\n  CModalContent, CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CLink,\n  CRow, CToaster, CListGroup\n} from '@coreui/react'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport classnames from 'classnames'\nimport Loader from '../../views/components/loaders/intermittent'\n\nconst SingleRequestView = ({\n                             userType,\n                             isLoading,\n                             visible,\n                             toaster,\n                             toast,\n                             setVisible,\n                             onClickHandler,\n                             suggestions,\n                             handleCloseRequest,\n                             specificModeData,\n                             handleApplyOffer,\n                             bankName,\n                             bankSuggestions: { order }\n                           }) => {\n  const { t } = useTranslation()\n  const { id, amount, percentage, currency, days, type, status, revenue } = specificModeData\n\n\n  const renderBankSuggestion = () => (\n    <CListGroupItem className=\"employees py-4 px-2 px-md-2\">\n      <CRow className=\"m-0 align-items-stretch justify-content-between\">\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.amount') }</small>\n          <h6 className=\"m-0\">{ `${ order.amount } ${ order.currency }` }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n          <span className=\"d-block\">{ `${ order.percentage } %` }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n          <span className=\"d-block\">{ t(`requests.days.${ order.days }`) }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n          <span className=\"d-block\">{ t(`requests.${ order.type }`) }</span>\n        </CCol>\n      </CRow>\n    </CListGroupItem>\n  )\n\n  const renderBusinessSuggestions = () => suggestions.map(({\n                                                             bankName,\n                                                             percentage,\n                                                             days,\n                                                             type,\n                                                             id,\n                                                             currency,\n                                                             revenue,\n                                                             orderId\n                                                           }) => (\n    <CListGroupItem className=\"employees py-4 px-2\" key={ id }>\n      <CRow className=\"m-0 d-flex justify-content-between align-items-stretch\">\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('bankName') }</small>\n          <h6 className=\"m-0\">{ bankName }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n          <span className=\"d-block\">{ `${ percentage } %` }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n          <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n          <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-md-start\" xs={ 6 } md={ 2 }>\n          <small className=\"text-muted\">{ t('requests.create.form.revenue') }</small>\n          <span className=\"d-block\"> { revenue } { currency }</span>\n        </CCol>\n        { status === 'CREATED' && <CCol className=\"d-flex align-self-center\" xs={ 6 } md={ 2 }>\n          { isLoading\n            ? <RegularLoader/>\n            : <CLink disabled={ isLoading } onClick={ () => handleApplyOffer({ orderId, id }) }\n                     className={ classnames('pe-5', {\n                       'no-events': isLoading\n                     }) } role='button'>\n              Принять предложение\n            </CLink> }\n        </CCol> }\n      </CRow>\n    </CListGroupItem>\n  ))\n  const renderCloseOrderModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('requests.specific.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-2\">\n          { t('requests.specific.modal.content') }\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton disabled={ isLoading } onClick={ handleCloseRequest } className=\"text-white py-2\" size=\"sm\"\n                   color=\"primary\">{ isLoading ? <RegularLoader classes=\"text-white\"/> : t('yes') }</CButton>\n          <CButton onClick={ () => setVisible(false) } className=\"py-2\" size=\"sm\" color=\"primary\"\n                   variant=\"outline\">{ t('no') }</CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n\n  return (\n    <>\n      <CRow\n        className=\"align-items-stretch bg-primary rounded-3 m-0 py-4 px-2 text-white justify-content-between\">\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.amount') }</small>\n          <h6 className=\"m-0\">{ `${ amount } ${ currency }` }</h6>\n        </CCol>\n        <CCol className=\" mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.percentage') }</small>\n          <h6 className=\"d-block\">{ `${ percentage } %` }</h6>\n        </CCol>\n        <CCol xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.days') }</small>\n          <h6 className=\"d-block\">{ t(`requests.days.${ days }`) }</h6>\n        </CCol>\n        <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n          <small className=\"text-white\">{ t('requests.create.form.type') }</small>\n          <h6 className=\"d-block\">{ t(`requests.${ type }`) }</h6>\n        </CCol>\n        { userType !== 'BANK_ADMIN' && status !== 'CREATED' &&\n        <CCol xl={ 2 } xs={ 6 } className=\"text-end text-md-start\">\n          <small className=\"text-white\">{ t('requests.create.form.revenue') }</small>\n          <h6 className=\"d-block\">{ revenue } { currency }</h6>\n        </CCol> }\n        { (userType !== 'BANK_ADMIN' && status === 'CREATED') &&\n        <CCol xs={ 6 } xl={ 2 } className=\"d-flex align-self-center justify-content-end\">\n          { userType !== 'BANK_ADMIN' && status === 'CREATED' && <CLink\n            role=\"button\"\n            data-id={ id }\n            onClick={ onClickHandler }\n            className=\"text-white d-flex align-self-center justify-content-end fw-bold p-0\"\n          >\n            { t('requests.singleRequests.button') }\n          </CLink> }\n        </CCol> }\n      </CRow>\n      <h4\n        className=\"mt-5\">{ userType === 'BANK_ADMIN' ? t('requests.BANK_ADMIN.title') : status === 'ACTIVE' ? t('requests.BUSINESS_ADMIN.title.activeRequests') : t('requests.BUSINESS_ADMIN.title') }</h4>\n      { userType !== 'BANK_ADMIN' && !suggestions.length && !isLoading && <h6 className=\"text-center mt-5 mb-3\">\n        { t('requests.BUSINESS_ADMIN.subtitle') }\n      </h6> }\n      { userType === 'BANK_ADMIN' && !order.id && !isLoading &&\n      <h6 className=\"text-center mt-5 mb-3\">\n        { t('requests.BANK_ADMIN.subtitle') }\n      </h6> }\n      <CListGroup className=\"employees mt-4\">\n        { isLoading && !order.id && <Loader /> }\n        { userType === 'BANK_ADMIN' && order.id && !isLoading && renderBankSuggestion() }\n        { userType !== 'BANK_ADMIN' && !isLoading && renderBusinessSuggestions() }\n      </CListGroup>\n      { renderCloseOrderModal() }\n      <CToaster ref={ toaster } push={ toast } placement=\"top-end\"/>\n    </>\n  )\n}\n\nexport default SingleRequestView\n","import React, { useEffect, useRef, useState } from 'react'\nimport SingleRequestView from './SingleRequestView'\nimport { useTranslation } from 'react-i18next'\nimport { closeRequest, getOffersByOrderId, applySuggestedOffer, getSuggestionsFromBusiness } from 'src/services'\nimport { CToast, CToastBody, CToastHeader } from '@coreui/react'\nconst SingleRequestContainer = ({ setPageMode, specificModeData, userType, ...rest }) => {\n  const { t } = useTranslation()\n  const [isLoading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n  const [bankSuggestions, setBankSuggestions] = useState({order: {id: ''}})\n  const onClickHandler = () => {\n    setVisible(true)\n  }\n  useEffect( async () => {\n    try {\n      setLoading(true)\n      if (userType === 'BANK_ADMIN') {\n        const data = await getSuggestionsFromBusiness(specificModeData.id)\n        setBankSuggestions(data)\n      } else {\n        const data = await getOffersByOrderId(specificModeData.id)\n        setSuggestions(data)\n      }\n    } catch (e) {\n      console.log(e)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoading(false)\n    }\n  }, [specificModeData?.id])\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const showErrorToast = (message = '', isError = true ) => (\n    <CToast title={isError ? t('defaultErrorTitle') : 'Ваша заявка на размещение депозита Принята!'} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill={ isError ? '#EB5757' : '#6FCF97' }></rect>\n        </svg>\n        <strong className=\"me-auto\">{isError ? t('defaultErrorTitle') : t('congratulations')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const handleApplyOffer = async ({orderId, id}) => {\n    try {\n      setLoading(true)\n      const data = await applySuggestedOffer({orderId, offerId: id})\n\n      if (data.wasCreated) {\n        addToast(() => showErrorToast(\n          'Данные Вашей Компании переданы в банк для дальнейшей работы, вскоре с Вами свяжется специалист:)\\n' +\n          '\\n' +\n          '\\n' +\n          'Информацию о вкладе вы найдете в активных заявках',\n          false))\n        setTimeout(() => {\n          setPageMode('default', 2)\n          setLoading(false)\n        }, 2000)\n      }\n      if (data.message) {\n        addToast(() => showErrorToast(data.message))\n        setLoading(false)\n      }\n    } catch (e) {\n      setLoading(false)\n      addToast(() => showErrorToast())\n    }\n  }\n  const handleCloseRequest = async () => {\n    try {\n      setLoading(true)\n      const data = await closeRequest(specificModeData.id)\n      if (!data.message && data.status === 'CLOSED') {\n        setPageMode('default')\n      }\n      if (data.message) {\n        addToast(() => showErrorToast(data.message))\n      }\n    } catch (e) {\n      setLoading(false)\n      addToast(() => showErrorToast())\n    }\n    finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n  const propsData = {\n    onClickHandler,\n    userType,\n    suggestions,\n    bankSuggestions,\n    visible,\n    setVisible,\n    toaster,\n    toast,\n    isLoading,\n    specificModeData,\n    handleApplyOffer,\n    handleCloseRequest,\n    ...rest\n  }\n\n  return (\n    <>\n      <SingleRequestView {...propsData} />\n    </>\n  )\n}\n\nexport default SingleRequestContainer\n","import SingleRequestContainer from './SingleRequestContainer'\n\nexport default SingleRequestContainer\n"],"sourceRoot":""}