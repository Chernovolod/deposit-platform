{"version":3,"sources":["components/actionDepositTab/ActionDepositTab.js","components/closedDepositTab/closedDepositTab.js","components/defaultDepositsContent/DefaultDepositsContentView.js","components/defaultDepositsContent/DefaultDepositsContentContainer.js","components/defaultDepositsContent/index.js"],"names":["ActionDepositTab","isLoading","suggestRequestHandler","isNewRequestTab","isBankUserType","setSpecificModeData","activeRequests","setPageMode","t","useTranslation","useState","orderId","percentage","type","days","formData","setFormData","visible","setVisible","onClickHandler","id","target","dataset","onChange","name","value","onSubmit","className","map","minAmount","maxAmount","currency","xs","xl","role","data-id","onClick","alignment","onDismiss","component","style","backgroundColor","border","md","aria-describedby","autoComplete","aria-label","disabled","size","color","classes","ClosedDepositTab","closedDeposits","length","NAV_INFO","DefaultDepositsContentView","activeDeposits","toaster","toast","activeKey","setActiveKey","variant","tab","active","classnames","minHeight","DefaultDepositsContentContainer","rest","propsData"],"mappings":"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","file":"static/js/29.5c299b9d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CToaster,\n  CCard,\n  CCol,\n  CRow,\n  CLink,\n  CCardBody,\n  CListGroup,\n  CListGroupItem,\n  CButton,\n  CModal,\n  CModalContent,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CFormFloating,\n  CFormControl,\n  CFormLabel,\n  CModalFooter, CForm, CFormText, CFormSelect\n} from '@coreui/react'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { useTranslation } from 'react-i18next';\n\nconst ActionDepositTab = ({\n                             isLoading,\n                             suggestRequestHandler,\n                             isNewRequestTab,\n                             isBankUserType,\n                             setSpecificModeData,\n                             activeRequests,\n                             setPageMode\n                           }) => {\n  const { t } = useTranslation()\n  const [formData, setFormData] = useState({\n    orderId: '1',\n    percentage: 0,\n    type: 'IRREVOCABLE',\n    days: '90'\n  })\n  const [visible, setVisible] = useState(false)\n  const onClickHandler = ({ target: { dataset: { id } } }) => {\n    if (isNewRequestTab) {\n      setVisible(true)\n    } else {\n      setPageMode('specific')\n      setSpecificModeData(id)\n    }\n  }\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const onSubmit = () => {\n    suggestRequestHandler(formData)\n  }\n  const setButtonContent = () => {\n    if (isNewRequestTab) {\n      return t('deposits.actionDepositTab.button')\n    }\n\n    return t('deposits.actionDeposit.button')\n  }\n  const renderSuggestRequestModal = () => (\n    <CModal alignment=\"center\" visible={ visible } onDismiss={ () => setVisible(false) }>\n      <CModalContent className=\"pb-4\">\n        <CModalHeader className=\"ps-4\" onDismiss={ () => setVisible(false) }>\n          <CModalTitle component=\"h2\">{ t('requests.bank.modal.title') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"p-0\">\n          <div className=\"p-4\" style={{backgroundColor: '#FBFBFB', border: '1px solid #F2F2F2'}}>\n            <CRow className=\"mb-3\">\n              <CCol xl={ 4 }>\n                <small className=\"text-muted\">{t('requests.create.form.amount')}</small>\n                <h6 className=\"d-block\">100500 BYN</h6>\n              </CCol>\n              <CCol md= { 4 }>\n                <small className=\"text-muted\">{t('requests.create.form.percentage')}</small>\n                <span className=\"d-block\">99 %</span>\n              </CCol>\n              <CCol xl={ 4 }>\n                <small className=\"text-muted\">{t('requests.create.form.days')}</small>\n                <span className=\"d-block\">3 месяца</span>\n              </CCol>\n            </CRow>\n            <CRow>\n              <CCol xl={ 6 }>\n                <small className=\"text-muted\">{t('requests.create.form.type')}</small>\n                <span className=\"d-block\">Замокано</span>\n              </CCol>\n            </CRow>\n          </div>\n          <CForm className=\"row mx-0 mt-4 px-4\">\n            <CCol xl={ 2 } className=\"amount-container px-0 me-3\">\n              <CFormText component=\"span\" id=\"percentage\">{ t('requests.create.form.percentage') }</CFormText>\n              <CFormControl\n                aria-describedby=\"percentage\"\n                autoComplete=\"off\"\n                type=\"number\"\n                name=\"percentage\"\n                id=\"percentage\"\n                // placeholder=\"%\"\n                onChange={ onChange }\n              />\n            </CCol>\n            <CCol xl={ 4 }>\n              <CFormText component=\"span\" id=\"days\">{ t('requests.create.form.days') }</CFormText>\n              <CFormSelect name=\"days\"\n                           onChange={ onChange }\n                           aria-describedby=\"days\" aria-label={ t('requests.create.form.days') }>\n                <option value=\"90\">{t('requests.days.90')}</option>\n                <option value=\"180\">{t('requests.days.180')}</option>\n                <option value=\"365\">{t('requests.days.365')}</option>\n                <option value=\"1095\">{t('requests.days.1095')}</option>\n              </CFormSelect>\n            </CCol>\n            <CCol xl={ 5 }>\n              <CFormText component=\"span\" id=\"type\">{ t('requests.create.form.type') }</CFormText>\n              <CFormSelect name=\"type\" onChange={onChange} aria-describedby=\"type\" aria-label={ t('requests.create.form.type') }>\n                <option value=\"REVOCABLE\">{t('Revocable')}</option>\n                <option value=\"IRREVOCABLE\">{t('Irrevocable')}</option>\n              </CFormSelect>\n            </CCol>\n          </CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start px-4 mt-5\">\n          <CButton onClick={ onSubmit } disabled={ isLoading } className=\"text-white\" size=\"sm\" color=\"primary\">\n            { isLoading ? <RegularLoader classes=\"text-white\"/> : t('requests.modal.primaryButton') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n  const renderActiveRequestsList = () => activeRequests.map(({\n                                                               id,\n                                                               percentage,\n                                                               minAmount,\n                                                               maxAmount,\n                                                               days,\n                                                               currency,\n                                                               type\n                                                             }) => {\n    return (\n      <CListGroupItem className=\"employees py-4 px-2 px-md-3\" key={ id }>\n        <CRow className=\"justify-content-between align-items-stretch m-0 mb-3 mb-md-0\">\n          <CCol className=\" mb-3 mb-md-0\" xs={ 6 } xl={ 1 }>\n            <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n            <span className=\"d-block\">{ `${ percentage } %` }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n            <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n            <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted text-nowrap\">{ t('requests.create.form.minimalAmount') }</small>\n            <span className=\"d-block\">{ `${ minAmount } ${ currency }` }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted text-nowrap\">{ t('requests.create.form.maximumAmount') }</small>\n            <span className=\"d-block\">{ `${ maxAmount } ${ currency }` }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0 text-end align-self-md-center align-self-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <CLink\n              role=\"button\"\n              data-id={ id }\n              onClick={ onClickHandler }\n            >\n              { setButtonContent() }\n            </CLink>\n          </CCol>\n        </CRow>\n      </CListGroupItem>\n    )\n  })\n\n  return (\n    <>\n      <CListGroup className=\"employees mt-4\">{ renderActiveRequestsList() }</CListGroup>\n      { isBankUserType && renderSuggestRequestModal() }\n    </>\n  )\n}\n\nexport default ActionDepositTab\n","import React from 'react'\nimport {\n  CToaster,\n  CCard,\n  CCol,\n  CRow,\n  CLink,\n  CCardBody,\n  CListGroup,\n  CListGroupItem,\n  CButton\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next';\n\nconst ClosedDepositTab = ({ closedDeposits, isNewRequestTab, setVisible, setPageMode, setSpecificModeData }) => {\n  const { t } = useTranslation()\n  const onClickHandler = ({ target: { dataset: { id } } }) => {\n    if (isNewRequestTab) {\n      setVisible(true)\n    } else {\n      setPageMode('specific')\n      setSpecificModeData(id, true)\n    }\n  }\n  const renderClosedRequestsList = () => closedDeposits.map(({\n                                                               id,\n                                                               percentage,\n                                                               minAmount,\n                                                               maxAmount,\n                                                               days,\n                                                               currency,\n                                                               type\n                                                             }) => {\n    return (\n      <CListGroupItem className=\"employees py-4 px-2 px-md-3\" key={ id }>\n        <CRow className=\"m-0 justify-content-between align-items-stretch\">\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 1 }>\n            <small className=\"text-muted\">{ t('requests.create.form.percentage') }</small>\n            <span className=\"d-block\">{ `${ percentage } %` }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.days') }</small>\n            <span className=\"d-block\">{ t(`requests.days.${ days }`) }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.type') }</small>\n            <span className=\"d-block\">{ t(`requests.${ type }`) }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0 text-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{ t('requests.create.form.minimalAmount') }</small>\n            <span className=\"d-block\">{ `${ minAmount } ${ currency }` }</span>\n          </CCol>\n          <CCol className=\"mb-3 mb-md-0\" xs={ 6 } xl={ 2 }>\n            <small className=\"text-muted\">{t('requests.create.form.maximumAmount')}</small>\n            <span className=\"d-block\">{ `${ maxAmount } ${ currency }` }</span>\n          </CCol>\n          <CCol className=\" mb-3 mb-md-0 text-end align-self-md-center align-self-end text-md-start\" xs={ 6 } xl={ 2 }>\n            <CLink\n              data-id={ id }\n              onClick={ onClickHandler }\n              role=\"button\"\n            >\n              {t('deposits.actionDeposit.button')}\n            </CLink>\n          </CCol>\n        </CRow>\n      </CListGroupItem>\n    )\n  })\n\n  if (!closedDeposits.length) {\n    return <h4 className=\"text-center mt-5\">{ t('deposits.closed.empty')}</h4>\n  }\n\n  return (\n    <>\n      <CListGroup className=\"employees mt-4\">{ renderClosedRequestsList() }</CListGroup>\n    </>\n  )\n}\n\nexport default ClosedDepositTab\n","import React, { useState } from 'react'\nimport {\n  CNav,\n  CNavLink,\n  CNavItem,\n  CTabPane,\n  CTabContent,\n  CButton,\n  CCol\n} from '@coreui/react'\nimport { ActionDepositTab } from 'src/components/actionDepositTab'\nimport { ClosedDepositTab } from 'src/components/closedDepositTab'\nimport { useTranslation } from 'react-i18next'\nimport classnames from 'classnames'\n\nconst NAV_INFO = [1, 2]\n\nconst DefaultDepositsContentView = ({ setVisible, setSpecificModeData, activeDeposits, closedDeposits, setPageMode, toaster, toast }) => {\n  const { t } = useTranslation()\n  const setDefaultTab = () => {\n    return 1\n  }\n  const [activeKey, setActiveKey] = useState(setDefaultTab())\n  return (\n    <>\n      <CNav variant=\"tabs\">\n        { NAV_INFO.map(tab => {\n          return (\n            <CNavItem key={ tab }>\n              <CNavLink\n                className=\"pe-auto\"\n                active={ activeKey === tab }\n                onClick={ () => setActiveKey(tab) }\n              >\n                { t(`deposits.default.${ tab }`) }\n              </CNavLink>\n            </CNavItem>\n          )\n        }) }\n      </CNav>\n      <CTabContent>\n        { activeKey === 1 && <CTabPane\n          className={ classnames({ 'd-flex justify-content-center align-items-center text-center': !activeDeposits.length }) }\n          visible={ activeKey === 1 }>\n          { activeDeposits.length\n            ? (<ActionDepositTab setSpecificModeData={setSpecificModeData} setPageMode={setPageMode} activeRequests={activeDeposits} />)\n            : (<CCol style={ { minHeight: '50vh' } } xl={ 8 }\n                     className='h-50 d-flex flex-column justify-content-center align-items-center'>\n              <h4>\n                { t('deposits.default.1.emptyInfo') }\n              </h4>\n              <CButton onClick={ () => setVisible(true) } size=\"sm\" color=\"primary\" className=\"text-white mt-3\">\n                { t('deposits.primaryButtonLabel') }\n              </CButton>\n            </CCol>) }\n        </CTabPane> }\n        { activeKey === 2 && <CTabPane visible={ activeKey === 2 }>\n          <ClosedDepositTab setPageMode={setPageMode} setVisible={setVisible} setSpecificModeData={setSpecificModeData} closedDeposits={closedDeposits}/>\n        </CTabPane> }\n      </CTabContent>\n    </>\n  )\n}\n\nexport default DefaultDepositsContentView\n","import React from 'react'\nimport DefaultDepositsContentView from './DefaultDepositsContentView'\nimport { useTranslation } from 'react-i18next'\n\nconst DefaultDepositsContentContainer = ({ ...rest }) => {\n  const { t } = useTranslation()\n\n  const propsData = {\n    ...rest\n  }\n  return (\n    <>\n      <DefaultDepositsContentView {...propsData} />\n    </>\n  )\n}\n\nexport default DefaultDepositsContentContainer\n","import DefaultDepositsContentContainer from './DefaultDepositsContentContainer'\n\nexport default DefaultDepositsContentContainer\n"],"sourceRoot":""}