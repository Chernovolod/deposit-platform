{"version":3,"sources":["components/employees/Employees.js","components/userContacts/UserContacts.js","components/entity/Entity.js","components/security/Security.js","components/fileUploader/FileUploader.js","components/documents/Documents.js","views/profile/ProfileView.js","views/profile/ProfileContainer.js","views/profile/index.js","views/components/loaders/intermittent/Loader.js","views/components/loaders/intermittent/index.js","views/components/titles/pageTitle/PageTitle.js","views/components/titles/profileTitle/ProfileTitle.js"],"names":["INITIAL_FORM_DATA","email","firstName","middleName","lastName","SingleEmployee","runningId","isApprovalRunning","id","fields","t","isPendingCandidate","handleCandidateApproval","setButtonLabel","className","xl","role","data-id","data-approved","data-email","onClick","Employees","addToast","showErrorToast","employeesList","loadEmployeesList","isLoading","useTranslation","useState","formData","setFormData","visible","setVisible","isValidate","setValidation","handleInviteEmployee","a","linkEmployee","response","token","closeInviteEmployeeModal","message","onChange","target","name","value","isEmailValid","test","String","toLowerCase","validateForm","title","buttonLabel","onEdit","editable","length","map","type","CANDIDATE_TYPE","BUSINESS_LINKING_CANDIDATE","alignment","onDismiss","component","autoComplete","placeholder","invalid","valid","Boolean","htmlFor","disabled","isEmpty","size","color","classes","variant","UserContacts","data","userInfo","handleContactDataUpdate","isContactDataUpdateRunning","onChangeHandler","event","isBankUser","xs","md","phone","style","fontSize","bottom","Entity","getCompanyDataHandler","userType","isBankUserType","company","legalInfo","unpNumber","onSubmit","unp","registrationDate","issuer","classnames","address","Security","cleanPasswordData","isSecurityUpdateLoading","handlePasswordUpdate","status","onPaste","newPassword","repeatPassword","oldPassword","thumbsContainer","display","flexDirection","flexWrap","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","FileUploader","handleUploadDocument","files","useDropzone","accept","multiple","onDrop","acceptedFile","fd","FormData","append","getRootProps","getInputProps","thumbs","file","src","preview","useEffect","forEach","URL","revokeObjectURL","Documents","documentsList","deleteDocument","document","objectFit","url","onClickCapture","zIndex","boxShadow","pointerEvents","ProfileView","userContactDataProps","documentsPropsData","entityDataProps","employeesPropsData","securityDataProps","toaster","toast","user","verificationButtonHandler","dispatch","useDispatch","withSecondaryButton","secondaryButtonLabel","onSecondaryButtonClick","logout","block","shouldDisplayComponent","ref","push","placement","connect","isBusinessUserType","rest","isEmployeesListLoading","isContactDataLoading","isSecurityDataLoading","isEntityDataLoading","isDocumentsDataLoading","isCandidateApprovalRunning","isVerificationLoader","loaders","setLoaders","setEmployeesList","setDocumentsList","setUserInfo","contactForm","updatePassword","useRef","getDocumentsList","getUserInfo","personalData","substring","getEmployeesList","console","log","verifyUser","wasCreated","unpInfo","getBusinessCompanyData","contactFormData","updateContactData","dataset","approved","updateCandidate","updatePasswordData","handleDeleteDocument","updatedDocuments","filter","el","fileData","uploadDocument","uploadedImage","form","isError","autohide","close","xmlns","preserveAspectRatio","focusable","fill","propsData","Helmet","ProfileContainer","Loader","ProfileTitle","withPrimaryButton","primaryButtonLabel","onPrimaryButtonClick"],"mappings":"yVAgCMA,EAAoB,CACzBC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,SAAU,IAGLC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,kBAAmBC,EAAjC,EAAiCA,GAAIC,EAArC,EAAqCA,OAAQC,EAA7C,EAA6CA,EAAGT,EAAhD,EAAgDA,MAAOU,EAAvD,EAAuDA,mBAAoBC,EAA3E,EAA2EA,wBAAyBC,EAApG,EAAoGA,eAApG,OACtB,cAAC,IAAD,CAAgBC,UAAU,yBAA1B,SACC,eAAC,IAAD,CAAMA,UAAU,sBAAhB,UACC,eAAC,IAAD,CAAMA,UAAU,eAAeC,GAAI,EAAnC,UACC,uBAAOD,UAAU,aAAjB,SAA+BJ,EAAE,cACjC,oBAAII,UAAU,MAAd,SAAqBJ,EAAE,iCAAD,eAAwCD,SAE/D,eAAC,IAAD,CAAMM,GAAI,EAAV,UACC,uBAAOD,UAAU,aAAjB,SAA+BJ,EAAE,iBACjC,sBAAMI,UAAU,UAAhB,SAA2Bb,OAE5B,cAAC,IAAD,CAAMc,GAAI,EAAGD,UAAU,+CAAvB,SACC,cAAC,IAAD,CAECE,KAAK,SACLF,UAAS,mBAAeH,EAAsC,cAAjB,gBAC7CM,UAAST,EACTU,iBAAgBP,EAChBQ,aAAYlB,EACZmB,QAASR,EAPV,SASEL,GAAqBC,IAAOF,EAAY,cAAC,IAAD,IAAoBO,EAAeF,IARvEH,SAZ+CA,IAqL1Ca,EA1JG,SAAC,GAAsI,IAApIC,EAAmI,EAAnIA,SAAUC,EAAyH,EAAzHA,eAAgBC,EAAyG,EAAzGA,cAAeC,EAA0F,EAA1FA,kBAAmBC,EAAuE,EAAvEA,UAAWnB,EAA4D,EAA5DA,kBAAmBK,EAAyC,EAAzCA,wBAAyBN,EAAgB,EAAhBA,UAC/HI,EAAMiB,cAANjB,EACFG,EAAiB,SAACF,GACvB,OAAOD,EAAGC,EAAwC,SAAnB,mBAShC,EAAgCiB,mBAAS5B,GAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KAEA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAoB,uCAAG,4BAAAC,EAAA,+EAEJC,YAAaR,GAFT,QAG3B,QADMS,EAFqB,cAG3B,IAAIA,OAAJ,EAAIA,EAAUC,SACTd,IACJe,IACAlB,GAAS,kBAAMC,EAAeb,EAAE,oCAAoC,QAErE,OAAI4B,QAAJ,IAAIA,OAAJ,EAAIA,EAAUG,UACbnB,GAAS,kBAAMC,EAAee,EAASG,YATb,gDAY3BnB,GAAS,kBAAMC,OAZY,qGAAH,qDA6BpBmB,EAAW,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACnCf,EAAY,2BACRD,GADO,kBAETe,EAAOC,KAELD,GAAQC,GAjBQ,SAACD,EAAMC,GAC3B,GAAa,UAATD,EAAkB,CACrB,IACME,EADK,wJACaC,KAAKC,OAAOH,GAAOI,eAE1Cf,IADGY,IAacI,CAAaN,EAAMC,IAGjCL,EAA2B,WAChCV,EAAY9B,GACZgC,GAAW,GACXE,GAAc,IAiFf,OACC,qCACC,cAAC,IAAD,CAAciB,MAAOzC,EAAE,8BAA+B0C,YAAa1C,EAAE,4BAA6B2C,OAAQ,kBAAMrB,GAAW,IAAOsB,UAAQ,KACxI5B,IAAeA,IAAcF,EAAc+B,SAC5C,cAAC,IAAD,CAAOzC,UAAU,OAAjB,SACC,eAAC,IAAD,WACEY,GAAa,cAAC,IAAD,KACXA,IAAcF,EAAc+B,QATF,mBAAGzC,UAAU,kBAAb,SAAiCJ,EAAE,mCAYhEgB,KAAeF,EAAc+B,QAAW,cAAC,IAAD,CAAYzC,UAAU,YAAtB,SA/IXU,EAAcgC,KAAI,YAAkC,IAA/BhD,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,OAAQR,EAAkB,EAAlBA,MAC5DU,EAD8E,EAAX8C,OACrCC,IAAeC,2BACnD,OACE,cAAC,EAAD,CAAgBrD,UAAWA,EAAWE,GAAIA,EAAID,kBAAmBA,EAAmBI,mBAAoBA,EAAoBF,OAAQA,EAAQR,MAAOA,EAAOW,wBAAyBA,EAAyBF,EAAGA,EAAGG,eAAgBA,SAqDpO,cAAC,IAAD,CAAQ+C,UAAU,SAAS7B,QAASA,EAAS8B,UAAWrB,EAAxD,SACC,eAAC,IAAD,CAAe1B,UAAU,YAAzB,UACC,cAAC,IAAD,CAAc+C,UAAWrB,EAAzB,SACC,cAAC,IAAD,CAAasB,UAAU,KAAvB,SAA6BpD,EAAE,qCAEhC,cAAC,IAAD,CAAYI,UAAU,OAAtB,SACC,eAAC,IAAD,WACC,eAAC,IAAD,WACC,cAAC,IAAD,CACC+B,MAAOhB,EAAS5B,OAAS,GACzB8D,aAAa,MACbN,KAAK,OACLb,KAAK,QACLpC,GAAG,QACHkC,SAAUA,EACVsB,YAAatD,EAAE,SACfuD,SAAWhC,EACXiC,MAAQC,QAAQtC,EAAS5B,OAASgC,KAEnC,cAAC,IAAD,CAAYmC,QAAQ,QAApB,SAA6B1D,EAAE,cAEhC,eAAC,IAAD,WACC,cAAC,IAAD,CACCmC,MAAOhB,EAASzB,UAAY,GAC5B2D,aAAa,MACbN,KAAK,OACLb,KAAK,WACLpC,GAAG,WACHwD,YAAatD,EAAE,YACfgC,SAAUA,IAEX,cAAC,IAAD,CAAY0B,QAAQ,WAApB,SAAgC1D,EAAE,iBAEnC,eAAC,IAAD,WACC,cAAC,IAAD,CACCmC,MAAOhB,EAAS3B,WAAa,GAC7B6D,aAAa,MACbN,KAAK,OACLb,KAAK,YACLpC,GAAG,YACHwD,YAAatD,EAAE,aACfgC,SAAUA,IAEX,cAAC,IAAD,CAAY0B,QAAQ,YAApB,SAAiC1D,EAAE,kBAEpC,eAAC,IAAD,WACC,cAAC,IAAD,CACCmC,MAAOhB,EAAS1B,YAAc,GAC9B4D,aAAa,MACbN,KAAK,OACLb,KAAK,aACLpC,GAAG,aACHwD,YAAatD,EAAE,cACfgC,SAAUA,IAEX,cAAC,IAAD,CAAY0B,QAAQ,aAApB,SAAkC1D,EAAE,wBAIvC,eAAC,IAAD,CAAcI,UAAU,wBAAxB,UACC,cAAC,IAAD,CACCM,QAASe,EACTkC,UAAWpC,GAAcqC,YAAQzC,IAAaH,EAC9CZ,UAAU,kBAAkByD,KAAK,KAAKC,MAAM,UAH7C,SAIE9C,EAAY,cAAC,IAAD,CAAe+C,QAAQ,eAAkB/D,EAAE,oCAEzD,cAAC,IAAD,CAASI,UAAU,YAAY0D,MAAM,UAAUD,KAAK,KAAKG,QAAQ,UAChEtD,QAASoB,EADV,SAEE9B,EAAE,wBCzCMiE,EArIM,SAAC,GAAkG,IAAhGC,EAA+F,EAA/FA,KAAMlD,EAAyF,EAAzFA,UAAWmD,EAA8E,EAA9EA,SAAUC,EAAoE,EAApEA,wBAAyBC,EAA2C,EAA3CA,2BAA4BrC,EAAe,EAAfA,SACtG,EAA8Bd,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACQtB,EAAMiB,cAANjB,EACFsE,EAAkB,SAACC,GAAD,OAAWvC,EAAS,cAAeuC,IACrDC,EAA+B,eAAlBL,EAASpB,KAmH5B,OACE,qCACE,cAAC,IAAD,CAAcN,MAAOzC,EAAE,6BAA8B4C,UAAQ,EAACD,OAAQ,kBAAMrB,GAAYD,MACxF,cAAC,IAAD,UACE,eAAC,IAAD,CAAWjB,UAAU,OAArB,UACGY,GAAa,cAAC,IAAD,KACZA,GAvHR,eAAC,IAAD,WACE,eAAC,IAAD,CAAMyD,GAAI,GAAIC,GAAI,EAAGtE,UAAU,eAA/B,UACE,uBAAOA,UAAU,aAAjB,SAA+BJ,EAAE,WACjC,oBAAII,UAAU,MAAd,gBAAqB+D,QAArB,IAAqBA,OAArB,EAAqBA,EAAU5E,YAE/BiF,GAAc,eAAC,IAAD,CAAMC,GAAI,GAAIC,GAAI,EAAGtE,UAAU,eAA/B,UACd,uBAAOA,UAAU,aAAjB,SAA+BJ,EAAE,iBACjC,sBAAMI,UAAU,UAAhB,SAA2B+D,EAASQ,MAAT,WAAqBR,EAASQ,OAAU,QAErE,eAAC,IAAD,CAAMF,GAAI,GAAIC,GAAI,EAAlB,UACE,uBAAOtE,UAAU,aAAjB,SAA+BJ,EAAE,cACjC,oBAAII,UAAU,MAAd,SAAqB8D,EAAK1E,uBAK9B,cAAC,IAAD,CAAQ0D,UAAU,SAAS7B,QAASA,EAApC,SACE,eAAC,IAAD,CAAejB,UAAU,YAAzB,UACE,cAAC,IAAD,CAAc+C,UAAW,kBAAM7B,GAAW,IAA1C,SACE,cAAC,IAAD,CAAa8B,UAAU,KAAvB,SAA6BpD,EAAE,oBAEjC,eAAC,IAAD,CAAYI,UAAU,OAAtB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE+B,MAAO+B,EAAK3E,OAAS,GACrBoE,SAAUU,EACVhB,aAAa,MACbN,KAAK,QACLb,KAAK,QACLpC,GAAG,QACHwD,YAAatD,EAAE,SACfgC,SAAUsC,IAEZ,cAAC,IAAD,CAAYZ,QAAQ,QAApB,SAA6B1D,EAAE,cAEjC,eAAC,IAAD,CAAMI,UAAU,yBAAyBC,GAAI,EAA7C,UACE,cAAC,IAAD,CAAW+C,UAAU,OAAOtD,GAAG,QAA/B,SAAwCE,EAAE,iBAC1C,eAAC,IAAD,CACE4E,MAAO,CAAEC,SAAU,OAAQC,OAAQ,UACnC1E,UAAU,iCACVgD,UAAU,OACVtD,GAAG,QAJL,eAMKE,EAAE,uBAEP,cAAC,IAAD,CACEmC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMS,QAAS,GACtBvE,UAAU,OACVuD,SAAUU,EACVhB,aAAa,MACbN,KAAK,SACLb,KAAK,QACLpC,GAAG,QACHwD,YAAY,YACZtB,SAAUsC,OAGd,eAAC,IAAD,CAAelE,UAAU,OAAzB,UACE,cAAC,IAAD,CACE+B,MAAO+B,EAAKxE,UAAY,GACxBiE,SAAUU,EACVhB,aAAa,MACbN,KAAK,OACLb,KAAK,WACLpC,GAAG,WACHwD,YAAatD,EAAE,gBACfgC,SAAUsC,IAEZ,cAAC,IAAD,CAAYZ,QAAQ,WAApB,SAAgC1D,EAAE,qBAEpC,eAAC,IAAD,CAAeI,UAAU,OAAzB,UACE,cAAC,IAAD,CACE+B,MAAO+B,EAAK1E,WAAa,GACzBmE,SAAUU,EACVhB,aAAa,MACbN,KAAK,OACLb,KAAK,YACLpC,GAAG,OACHwD,YAAatD,EAAE,YACfgC,SAAUsC,IAEZ,cAAC,IAAD,UAAatE,EAAE,iBAEjB,eAAC,IAAD,CAAeI,UAAU,OAAzB,UACE,cAAC,IAAD,CACE+B,MAAO+B,EAAKzE,YAAc,GAC1BkE,SAAUU,EACVhB,aAAa,MACbN,KAAK,OACLb,KAAK,aACLpC,GAAG,OACHwD,YAAatD,EAAE,kBACfgC,SAAUsC,IAEZ,cAAC,IAAD,CAAYZ,QAAQ,QAApB,SAA6B1D,EAAE,0BAGnC,eAAC,IAAD,CAAcI,UAAU,wBAAxB,UACE,cAAC,IAAD,CACEuD,SAAUU,EACVjE,UAAU,kBACVyD,KAAK,KACLC,MAAM,UACNpD,QAAS0D,EALX,SAMGC,EAA6B,cAAC,IAAD,CAAeN,QAAQ,eAAkB/D,EAAE,UAE3E,cAAC,IAAD,CAASI,UAAU,YAAY0D,MAAM,UAAUD,KAAK,KAAKG,QAAQ,UAAUtD,QAAS,kBAAMY,GAAW,IAArG,SACGtB,EAAE,wB,2BCGA+E,EAjHA,SAAC,GAAkG,IAAhG/D,EAA+F,EAA/FA,UAAWgE,EAAoF,EAApFA,sBAAuBC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,eAAmD,IAAnCC,QAAWjD,EAAwB,EAAxBA,KAAMkD,EAAkB,EAAlBA,UACtFpF,EAAMiB,cAANjB,EACP,EAA8BkB,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,CAACmE,UAAW,KAArD,mBAAOlE,EAAP,KAAiBC,EAAjB,KACKkE,EAAW,WAChBN,EAAsB7D,EAASkE,YAEzBrD,EAAW,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAClCf,EAAY,2BACPD,GADM,kBAERe,EAAOC,MAoFb,OACC,qCACC,cAAC,IAAD,CAAcM,MAAO2C,EAAUG,KAAOL,EAAiBlF,EAAE,WAAD,OAAYiF,EAAZ,qBAA0CjF,EAAE,sBAAuB2C,OAAQ,kBAAMrB,GAAYD,MACrJ,cAAC,IAAD,UACG+D,EAAUG,KAAOL,EACnB,eAAC,IAAD,CAAW9E,UAAU,OAArB,UACGY,GAAa,cAAC,IAAD,KACZA,GA7CN,qCACC,eAAC,IAAD,CAAMZ,UAAU,sBAAhB,UACC,eAAC,IAAD,CAAMC,GAAI,EAAV,UACC,uBAAOD,UAAU,aAAjB,SAA+BJ,EAAE,WAAD,OAAYiF,EAAZ,mBAChC,oBAAI7E,UAAU,MAAd,SAAqB8B,OAErBgD,GAAkB,eAAC,IAAD,CAAM7E,GAAK,EAAX,UAClB,uBAAOD,UAAU,aAAjB,SAAgCJ,EAAE,+BAClC,oBAAII,UAAU,MAAd,uGAEC8E,GAAkB,eAAC,IAAD,CAAM7E,GAAK,EAAX,UACnB,uBAAOD,UAAU,aAAjB,SAAgCJ,EAAE,wBAClC,sBAAMI,UAAU,UAAhB,SAA4BgF,EAAUG,UAErCL,GAAkB,eAAC,IAAD,CAAM7E,GAAK,EAAX,UACnB,uBAAOD,UAAU,aAAjB,SAAgCJ,EAAE,iCAClC,sBAAMI,UAAU,UAAhB,SAA4BgF,EAAUI,uBAErCN,GAAkB,eAAC,IAAD,CAAM7E,GAAK,EAAX,UACnB,uBAAOD,UAAU,aAAjB,SAAgCJ,EAAE,8BAClC,sBAAMI,UAAU,UAAhB,SAA4BgF,EAAUK,gBAGtCP,GAAkB,cAAC,IAAD,CAAM9E,UAAU,OAAhB,SACnB,eAAC,IAAD,CAAMC,GAAK,GAAX,UACC,uBAAOD,UAAU,aAAjB,SAAgCJ,EAAE,+BAClC,oBAAII,UAAU,MAAd,SAAsBgF,EAAUrC,YAGlC,cAAC,IAAD,CAAM3C,UAAWsF,IAAW,CAAC,OAAQR,IAArC,SACC,eAAC,IAAD,CAAM7E,GAAI,GAAV,UACC,uBAAOD,UAAU,aAAjB,SAA+BJ,EAAE,WAAD,OAAYiF,EAAZ,sBAChC,oBAAI7E,UAAU,MAAd,SAAsBgF,EAAUO,qBAe/B,eAAC,IAAD,CAAWvF,UAAU,OAArB,UACCY,GAAa,cAAC,IAAD,KACZA,GAzEN,qCACC,cAAC,IAAD,CAAMZ,UAAU,sBAAhB,SACC,4BAAIJ,EAAE,mCAEP,eAAC,IAAD,CAAMI,UAAU,yBAAhB,UACC,eAAC,IAAD,CAAMA,UAAU,cAAcsE,GAAI,EAAGD,GAAI,GAAIpE,GAAK,EAAlD,UACK,cAAC,IAAD,CAAW+C,UAAU,OAAOtD,GAAG,MAA/B,SAAuCE,EAAE,SACxC,cAAC,IAAD,CACJmC,MAAOhB,EAASoE,IACVlC,aAAa,MACbN,KAAK,SACLb,KAAK,YACLpC,GAAG,MACHwD,YAAY,WACZtB,SAAWA,OAGnB,cAAC,IAAD,CAAM5B,UAAU,kCAAkCC,GAAK,EAAIqE,GAAK,EAAID,GAAK,GAAzE,SACC,cAAC,IAAD,CAAS/D,QAAS4E,EAAU3B,SAAW3C,GAAa4C,YAAQzC,GAAYf,UAAU,2CAAlF,SAA8HJ,EAAE,sCApCjI,cAAC,IAAD,CAAQkD,UAAU,SAAS7B,QAASA,EAAS8B,UAAW,kBAAM7B,GAAW,IAAzE,SACE,eAAC,IAAD,CAAelB,UAAU,YAAzB,UACE,cAAC,IAAD,CAAc+C,UAAW,kBAAM7B,GAAW,IAA1C,SACE,cAAC,IAAD,CAAa8B,UAAU,KAAvB,SAA6BpD,EAAE,oBAEjC,cAAC,IAAD,CAAYI,UAAU,OAAtB,SACE,cAAC,IAAD,MAEF,eAAC,IAAD,CAAcA,UAAU,wBAAxB,UACE,cAAC,IAAD,CAASA,UAAU,kBAAkByD,KAAK,KAAKC,MAAM,UAArD,SAAiE9D,EAAE,UACnE,cAAC,IAAD,CAASI,UAAU,YAAY0D,MAAM,UAAUD,KAAK,KAAKG,QAAQ,UAAUtD,QAAS,kBAAMY,GAAW,IAArG,SACGtB,EAAE,wBC8EA4F,EAzGE,SAAC,GAAoI,IAAlIC,EAAiI,EAAjIA,kBAAmBC,EAA8G,EAA9GA,wBAAyB9E,EAAqF,EAArFA,UAAWkD,EAA0E,EAA1EA,KAAMC,EAAoE,EAApEA,SAAU4B,EAA0D,EAA1DA,qBAAsB/D,EAAoC,EAApCA,SAAUX,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1HtB,EAAMiB,cAANjB,EACFsE,EAAkB,SAACC,GAAD,OAAWvC,EAAS,iBAAkBuC,IAyF9D,OACE,qCACE,cAAC,IAAD,CAAc9B,MAAQzC,EAAE,6BAA+B4C,UAAQ,EAACD,OAAS,kBAAMrB,GAAYD,MAC3F,cAAC,IAAD,UACE,eAAC,IAAD,CAAWjB,UAAU,OAArB,UACIY,GAAa,cAAC,IAAD,KACZA,GA7FT,qCACwB,eAApBmD,EAAS6B,QAA6C,eAAlB7B,EAASpB,MAC/C,4BAAK/C,EAAE,sCAEP,eAAC,IAAD,WACE,eAAC,IAAD,CAAMyE,GAAK,GAAKC,GAAK,EAArB,UACE,uBAAOtE,UAAU,aAAjB,SAAgCJ,EAAE,WAClC,oBAAII,UAAU,MAAd,gBAAsB+D,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAU5E,WAElC,eAAC,IAAD,CAAMkF,GAAK,GAAKC,GAAK,EAAItE,UAAU,eAAnC,UACE,uBAAOA,UAAU,aAAjB,SAAgCJ,EAAE,cAClC,oBAAII,UAAU,MAAd,4CAMN,cAAC,IAAD,CAAQ8C,UAAU,SAAS7B,QAAUA,EAArC,SACE,eAAC,IAAD,CAAejB,UAAU,YAAzB,UACE,cAAC,IAAD,CAAc+C,UAAY,WACxB0C,IACAvE,GAAW,IAFb,SAIE,cAAC,IAAD,CAAa8B,UAAU,KAAvB,SAA8BpD,EAAE,oBAElC,cAAC,IAAD,CAAYI,UAAU,OAAtB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEiD,aAAa,MACbN,KAAK,WACLb,KAAK,cACLpC,GAAG,cACHwD,YAActD,EAAE,eAChBgC,SAAWsC,EACX2B,QAAU3B,IAEZ,cAAC,IAAD,CAAYZ,QAAQ,cAApB,SAAoC1D,EAAE,oBAExC,eAAC,IAAD,CAAeI,UAAU,OAAzB,UACE,cAAC,IAAD,CACEiD,aAAa,MACbN,KAAK,WACLb,KAAK,cACLpC,GAAG,cACHwD,YAActD,EAAE,eAChBgC,SAAWsC,EACX2B,QAAU3B,IAEZ,cAAC,IAAD,CAAYZ,QAAQ,cAApB,SAAoC1D,EAAE,oBAEtCkE,EAAKgC,aAAehC,EAAKiC,gBAAkBjC,EAAKgC,cAAgBhC,EAAKiC,gBACvE,cAAC,IAAD,CAAW/F,UAAU,cAAcgD,UAAU,OAA7C,SAAqDpD,EAAE,uCACvD,eAAC,IAAD,CAAMI,UAAU,OAAOC,GAAK,GAA5B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEgD,aAAa,MACbN,KAAK,WACLb,KAAK,iBACLpC,GAAG,iBACHwD,YAActD,EAAE,kBAChBgC,SAAWsC,EACX2B,QAAU3B,IAEZ,cAAC,IAAD,CAAYZ,QAAQ,iBAApB,SAAuC1D,EAAE,uBAEzCkE,EAAKgC,aAAehC,EAAKiC,gBAAkBjC,EAAKgC,cAAgBhC,EAAKiC,gBACvE,cAAC,IAAD,CAAW/F,UAAU,cAAcgD,UAAU,OAA7C,SAAqDpD,EAAE,+CAI7D,eAAC,IAAD,CAAcI,UAAU,wBAAxB,UACE,cAAC,IAAD,CAASuD,UAAYO,EAAKkC,cAAgBlC,EAAKgC,cAAgBhC,EAAKiC,gBAAkBjC,EAAKgC,cAAgBhC,EAAKiC,gBAAkBL,EAA0BpF,QAAUqF,EAC7J3F,UAAU,kBAAkByD,KAAK,KAAKC,MAAM,UADrD,SAEIgC,EAA0B,cAAC,IAAD,CAAe/B,QAAQ,eAAiB/D,EAAE,UAExE,cAAC,IAAD,CAASI,UAAU,YAAY0D,MAAM,UAAUD,KAAK,KAAKG,QAAQ,UACxDtD,QAAU,WACRmF,IACAvE,GAAW,IAHtB,SAKItB,EAAE,wB,mBCrGVqG,EAAkB,CACtBC,QAAS,OACTC,cAAe,MACfC,SAAU,QAGNC,EAAQ,CACZH,QAAS,cACTI,aAAc,EACdC,OAAQ,oBACRC,aAAc,EACdC,YAAa,EACbC,MAAO,IACPC,OAAQ,IACRC,QAAS,EACTC,UAAW,cAGPC,EAAa,CACjBZ,QAAS,OACTa,SAAU,EACVC,SAAU,UAGNC,EAAM,CACVf,QAAS,QACTQ,MAAO,OACPC,OAAQ,QAkDKO,MA/Cf,YAAiD,IAAzBC,EAAwB,EAAxBA,qBACdvH,EAAMiB,cAANjB,EACR,EAA0BkB,mBAAS,IAAnC,mBAAOsG,EAAP,KACA,GADA,KACwCC,YAAY,CAClDC,OAAQ,UACRC,UAAU,EACVC,OAAO,WAAD,4BAAE,iCAAAlG,EAAA,yEAAQmG,EAAR,MACAC,EAAK,IAAIC,UACZC,OAAO,OAAQH,EAAcA,EAAa3F,MAC7CqF,EAAqBO,GAHf,2CAAF,mDAAC,MAHDG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAUhBC,EAASX,EAAM1E,KAAI,SAAAsF,GAAI,OAC3B,qBAAKxD,MAAQ6B,EAAb,SACE,qBAAK7B,MAAQsC,EAAb,SACE,qBACEmB,IAAMD,EAAKE,QACX1D,MAAQyC,OAJae,EAAKlG,SAelC,OALAqG,qBAAU,kBAAM,WAEdf,EAAMgB,SAAQ,SAAAJ,GAAI,OAAIK,IAAIC,gBAAgBN,EAAKE,eAC9C,CAACd,IAEI,qCACJ,cAAC,IAAD,CAASpH,UAAU,8EAA8EyD,KAAK,KAC7FC,MAAM,UADf,SAC2B9D,EAAE,8BAC7B,0BAASI,UAAU,8BAA8BwE,MAAQ,CAAE+B,OAAQ,qBAAsBD,aAAc,OAAvG,UACE,gDAAUuB,EAAa,CAAE7H,UAAW,uFAApC,cACE,qCAAY8H,MACZ,cAAC,IAAD,CAAS9H,UAAU,+BAA+ByD,KAAK,KAC9CC,MAAM,UADf,SAC2B9D,EAAE,8BAC7B,mBAAGI,UAAU,iDAAb,SAAgEJ,EAAE,gCAEpE,uBAAO4E,MAAQyB,EAAkBjG,UAAYsF,IAAW,CAAE,OAAQ8B,EAAM3E,SAAxE,SACIsF,WCRGQ,EAxDG,SAAC,GAAwE,IAAtE3H,EAAqE,EAArEA,UAAW4H,EAA0D,EAA1DA,cAAeC,EAA2C,EAA3CA,eAAgBtB,EAA2B,EAA3BA,qBACrDvH,EAAMiB,cAANjB,EA2CR,OACE,qCACE,cAAC,IAAD,CAAcyC,MAAQzC,EAAE,gCACxB,cAAC,IAAD,UACE,cAAC,IAAD,UAfJ,qCACE,sBAAMI,UAAU,aAAhB,SACIJ,EAAE,mCAEN,cAAC,EAAD,CAAcuH,qBAAsBA,IACpC,oBAAInH,UAAU,YAAd,SAA4BJ,EAAE,uCAC5BgB,GAAa,cAAC,IAAD,KACbA,GArCJ,mCACE,cAAC,IAAD,CAAMZ,UAAU,mBAAhB,SACIwI,EAAc/F,OACZ+F,EAAc9F,KAAI,SAAAgG,GAAQ,OAC5B,sBAAuB1I,UAAU,YAAjC,UACE,qBACEwE,MAAQ,CAAEmE,UAAW,SACrB3I,UAAU,8BACV0G,MAAM,MACNC,OAAO,MACPsB,IAAMS,EAASE,MAEjB,cAAC,IAAD,CACEC,eAAiBJ,EACjBtI,UAAUuI,EAAShJ,GACnB8E,MAAQ,CACNsE,OAAQ,EACRC,UAAW,QAEb/I,UAAU,gGAPZ,SASG,cAAC,IAAD,CAAOwE,MAAO,CAACwE,cAAe,QAASlH,KAAK,QAAQ6E,OAAQ,SAjBvD+B,EAAShJ,OAqBnB,+BAAOE,EAAE,mD,iBCcJqJ,EA3CK,SAAC,GAUd,IATeC,EAShB,EATgBA,qBACAC,EAQhB,EARgBA,mBACAC,EAOhB,EAPgBA,gBACAC,EAMhB,EANgBA,mBACAC,EAKhB,EALgBA,kBACAC,EAIhB,EAJgBA,QACAC,EAGhB,EAHgBA,MACAC,EAEhB,EAFgBA,KACAC,EAChB,EADgBA,0BAEZ9J,EAAMiB,cAANjB,EACF+J,EAAWC,cAEjB,OACE,qCACE,cAAC,IAAD,CAAWvH,MAAQzC,EAAkB,aAAhB6J,EAAK7D,OAAwB,UAAY,gBAAkBiE,qBAAmB,EAACC,qBAAuBlK,EAAE,UAC3HmK,uBAJgB,kBAAMJ,EAASK,kBAKf,aAAhBP,EAAK7D,QAAuC,eAAd6D,EAAK9G,MACrC,eAAC,IAAD,CAAM3C,UAAU,mEAAhB,UACE,cAAC,IAAD,CAAMsE,GAAK,EAAItE,UAAU,MAAzB,SACE,oBAAIA,UAAU,MAAd,SAAsBJ,EAAE,+BACxB,cAAC,IAAD,CACE6D,KAAK,KACLzD,UAAU,gFACV0D,MAAM,UACNuG,MAAM,OACN3J,QAASoJ,EALX,SAOI9J,EAAE,4BAIV,cAAC,EAAD,eAAkBsJ,IAClB,cAAC,EAAD,eAAcI,IACd,cAAC,EAAD,eAAYF,IACXC,EAAmBa,wBAA0B,cAAC,EAAD,eAAeb,IAC5DF,EAAmBe,wBAA0B,cAAC,EAAD,eAAef,IAC7D,cAAC,KAAD,CAAUgB,IAAKZ,EAASa,KAAMZ,EAAOa,UAAU,gB,SCqZtCC,eANS,SAAC,GAAD,IAAGb,EAAH,EAAGA,KAAM3E,EAAT,EAASA,eAAgByF,EAAzB,EAAyBA,mBAAzB,MAAmD,CACzE1F,SAAU4E,EAAK9G,KACf8G,OACA3E,iBACAyF,wBAEsC,KAAzBD,EA/aU,SAAC,GAA2D,IAAD,MAAxDb,EAAwD,EAAxDA,KAAM3E,EAAkD,EAAlDA,eAAgByF,EAAkC,EAAlCA,mBAAuBC,EAAW,8DAC1E5K,EAAMiB,cAANjB,EACR,EAA8BkB,mBAAS,CACrC2J,wBAAwB,EACxBC,sBAAsB,EACtBzG,4BAA4B,EAC5B0G,uBAAuB,EACvBjF,yBAAyB,EACzBkF,qBAAqB,EACrBC,wBAAwB,EACxBC,4BAA4B,EAC5BC,sBAAsB,EACtBvL,UAAW,KAVb,mBAAOwL,EAAP,KAAgBC,EAAhB,KAYA,EAA0CnK,mBAAS,IAAnD,mBAAOJ,EAAP,KAAsBwK,EAAtB,KACA,EAA0CpK,mBAAS,IAAnD,mBAAO0H,EAAP,KAAsB2C,EAAtB,KACA,EAA8BrK,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,CACvCiE,QAAS,CACPjD,KAAM,GACNkD,UAAW,CACTG,IAAK,GACLC,iBAAkB,GAClBC,OAAQ,GACR1C,KAAM,GACNb,KAAM,GACNyD,QAAS,KAGb5F,OAAQ,CACNP,UAAW,GACXE,SAAU,GACVD,WAAY,MAfhB,mBAAO0E,EAAP,KAAiBqH,EAAjB,KAkBA,EAAgCtK,mBAAS,CACvCuK,YAAa,CACXlM,MAAO4E,EAAS5E,OAAS,GACzBoF,MAAOR,EAASQ,OAAS,GACzB5E,OAAQ,CACNP,WAAmB,OAAR2E,QAAQ,IAARA,GAAA,UAAAA,EAAUpE,cAAV,eAAkBP,YAAa,GAC1CE,UAAkB,OAARyE,QAAQ,IAARA,GAAA,UAAAA,EAAUpE,cAAV,eAAkBL,WAAY,GACxCD,YAAoB,OAAR0E,QAAQ,IAARA,GAAA,UAAAA,EAAUpE,cAAV,eAAkBN,aAAc,KAGhDiM,eAAgB,CACdtF,YAAa,GACbF,YAAa,GACbC,eAAgB,MAbpB,mBAAOhF,EAAP,KAAiBC,EAAjB,KAgBA,EAA0BF,mBAAS,GAAnC,mBAAO0I,EAAP,KAAchJ,EAAd,KACM+I,EAAUgC,mBAChBpD,oBAAS,sBAAC,sBAAA7G,EAAA,sDACRX,IADQ,2CAEP,CAAC6J,EAAK3F,WACTsD,oBAAS,sBAAC,4BAAA7G,EAAA,0DACJiJ,EADI,iCAGJU,EAAW,2BACND,GADK,IAERH,wBAAwB,KALtB,SAOwBW,cAPxB,OAOEhD,EAPF,OAQJ2C,EAAiB,YAAI3C,IARjB,gDAUJhI,GAAS,kBAAMC,QAVX,yBAYJwK,EAAW,2BACND,GADK,IAERH,wBAAwB,KAdtB,4EAkBP,CAACL,EAAK3F,WACTsD,oBAAS,sBAAC,oCAAA7G,EAAA,sEAEN2J,EAAW,2BACND,GADK,IAERN,sBAAsB,EACtBC,uBAAuB,KALnB,SAOqBc,cAPrB,OAOAC,EAPA,OAQNN,EAAY,2BACPrH,GACA2H,IAEL1K,EAAY,2BACPD,GADM,IAETsK,YAAY,2BACPtK,EAASsK,aADH,IAETlM,MAAOuM,EAAavM,OAAS,GAC7BoF,OAAmB,OAAZmH,QAAY,IAAZA,GAAA,UAAAA,EAAcnH,aAAd,eAAqBoH,UAAU,KAAM,GAC5CvM,WAAuB,OAAZsM,QAAY,IAAZA,GAAA,UAAAA,EAAc/L,cAAd,eAAsBP,YAAa,GAC9CE,UAAsB,OAAZoM,QAAY,IAAZA,GAAA,UAAAA,EAAc/L,cAAd,eAAsBL,WAAY,GAC5CD,YAAwB,OAAZqM,QAAY,IAAZA,GAAA,UAAAA,EAAc/L,cAAd,eAAsBN,aAAc,QApB9C,gDAwBNmB,GAAS,kBAAMC,QAxBT,yBA0BNwK,EAAW,2BACND,GADK,IAERN,sBAAsB,EACtBC,uBAAuB,KA7BnB,4EAgCP,IACH,IAAMhK,EAAiB,uCAAG,4BAAAW,EAAA,yDACnBwD,EADmB,iCAGpBmG,EAAW,2BACND,GADK,IAERP,wBAAwB,KALN,SAOQmB,cAPR,OAOdlL,EAPc,OAQpBwK,EAAiB,YAAIxK,IARD,gDAUpBmL,QAAQC,IAAR,MACAtL,GAAS,kBAAMC,QAXK,yBAapBwK,EAAW,2BACND,GADK,IAERP,wBAAwB,KAfN,4EAAH,qDA8BjBf,EAAyB,uCAAG,sBAAApI,EAAA,sEAE9B2J,EAAW,2BACND,GADK,IAERD,sBAAsB,KAJM,SAMXgB,YAAW,IANA,cAOrBC,YACPxL,GAAS,kBAAMC,GAAeb,EAAE,wCAAwC,MAR5C,gDAW9BqL,EAAW,2BACND,GADK,IAERD,sBAAsB,KAExBvK,GAAS,kBAAMC,QAfe,yBAiB9BwK,EAAW,2BACND,GADK,IAERD,sBAAsB,KAnBM,4EAAH,qDAwBzBnG,GAAqB,uCAAG,WAAOqH,GAAP,eAAA3K,EAAA,sEAE1B2J,EAAW,2BACND,GADK,IAERJ,qBAAqB,KAJG,SAMHsB,YAAuBD,GANpB,QAMpBzK,EANoB,QAObG,SACXnB,GAAS,kBAAMC,GAAee,EAASG,YAEpCH,EAASG,SACZyJ,EAAY,2BAAKrH,GAAN,IAAgBgB,QAAQ,2BAAMhB,EAASgB,SAAhB,IAAyBC,UAAWxD,OAX9C,gDAc1BhB,GAAS,kBAAMC,QAdW,yBAiB1BwK,EAAW,2BACND,GADK,IAERJ,qBAAqB,KAnBG,4EAAH,sDAwBrB5G,GAAuB,uCAAG,8BAAA1C,EAAA,sEAE5B2J,EAAW,2BACND,GADK,IAER/G,4BAA4B,YAExBkI,EANsB,eAMCpL,EAASsK,cACf1L,QAClBwM,EAAgBhN,OAAS4E,EAAS5E,QACrCgN,EAAgBhN,MAAQ4E,EAAS5E,QAE9BgN,EAAgB5H,OAASR,EAASQ,QACrC4H,EAAgB5H,MAAQR,EAASQ,OAEnC4H,EAAgB5H,MAAQ3E,EAAE,oBAAsBuM,EAAgB5H,MAdpC,SAeT6H,YAAkBD,GAfT,QAetBrI,EAfsB,QAgBlBnC,UACRyJ,EAAY,2BAAKrH,GAAaD,IAC9BtD,GAAS,kBAAMC,GAAeb,EAAE,4BAA4B,OAE1DkE,EAAKnC,SAASnB,GAAS,kBAAMC,GAAeqD,EAAKnC,YApBzB,kDAuB5BkK,QAAQC,IAAR,MACAtL,GAAS,kBAAMC,QAxBa,yBA0B5BwK,EAAW,2BACND,GADK,IAER/G,4BAA4B,KA5BF,6EAAH,qDAgCvBnE,GAAuB,uCAAG,2CAAAwB,EAAA,iEAASO,OAAUwK,QAAWlN,EAA9B,EAA8BA,MAAOmN,EAArC,EAAqCA,SAAU5M,EAA/C,EAA+CA,GAA/C,SAE5BuL,EAAW,2BACND,GADK,IAERF,4BAA4B,EAC5BtL,UAAWE,KAEPoE,EAAO,CAAE3E,QAAOmN,SAAuB,SAAbA,GAPJ,SAQFC,YAAgBzI,GARd,qBAQpBnC,EARoB,EAQpBA,SARoB,iBAU1BnB,GAAS,kBAAMC,GAAekB,MAVJ,yCAaxBsJ,EAAW,2BACND,GADK,IAERP,wBAAwB,KAfF,UAiBImB,cAjBJ,QAiBlBlL,EAjBkB,OAkBxBwK,EAAiB,YAAIxK,IAlBG,mDAoBxBmL,QAAQC,IAAR,MACAtL,GAAS,kBAAMC,QArBS,yBAuBxBwK,EAAW,2BACND,GADK,IAERP,wBAAwB,KAzBF,uEA8B5BjK,GAAS,kBAAMC,QA9Ba,yBAgC5BwK,EAAW,2BACND,GADK,IAERF,4BAA4B,KAlCF,2FAAH,sDAsCvBnF,GAAoB,uCAAG,gCAAArE,EAAA,sEAEzB2J,EAAW,2BACND,GADK,IAERtF,yBAAyB,YAErB8G,EANmB,eAMOzL,EAASuK,iBACfvF,eAPD,SAQCuF,YAAekB,GARhB,iBAQjB7K,EARiB,EAQjBA,UAENnB,GAAS,kBAAMC,GAAekB,MAE3BA,IACHT,GAAW,GACXV,GAAS,kBAAMC,GAAeb,EAAE,gCAAgC,OAdzC,kDAiBzBY,GAAS,kBAAMC,QAjBU,yBAmBzBwK,EAAW,2BACND,GADK,IAERtF,yBAAyB,KArBF,6EAAH,qDAyBpB+G,GAAoB,uCAAG,+BAAAnL,EAAA,6DAA8B5B,EAA9B,EAASmC,OAAUwK,QAAW3M,GAA9B,SAEzBuL,EAAW,2BACND,GADK,IAERH,wBAAwB,KAJD,SAMnBpC,YAAe/I,GANI,OAOnBgN,EAAmBlE,EAAcmE,QAAO,SAAAC,GAAE,OAAIA,EAAGlN,KAAOA,KAC9DyL,EAAiBuB,GARQ,gDAUzBb,QAAQC,IAAR,MACAtL,GAAS,kBAAMC,QAXU,yBAazBwK,EAAW,2BACND,GADK,IAERH,wBAAwB,KAfD,4EAAH,sDAmBpB1D,GAAoB,uCAAG,WAAO0F,GAAP,qBAAAvL,EAAA,sEAEzB2J,EAAW,2BACND,GADK,IAERH,wBAAwB,KAJD,SAOFiC,YAAeD,GAPb,QAOnBrL,EAPmB,QAQZG,SACXnB,GAAS,kBAAMC,GAAee,EAASG,YAEpCH,EAASG,UAAU,EAAD,YACGH,EADH,GACduL,EADc,KAEfL,EAFe,sBAEQlE,GAFR,CAEuBuE,IACxCA,GACF5B,EAAiBuB,IAfI,gDAmBzBlM,GAAS,kBAAMC,QAnBU,yBAqBzBwK,EAAW,2BACND,GADK,IAERH,wBAAwB,KAvBD,4EAAH,sDA2BpBjJ,GAAW,SAACoL,EAAD,GAAwC,IAAD,IAA9BnL,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACxCf,EAAY,2BACPD,GADM,kBAERiM,EAFQ,YAAC,eAGLjM,EAASiM,IAHL,kBAINlL,EAAOC,QAKRtB,GAAiB,eAACkB,EAAD,uDAAW,GAAIsL,IAAf,gEACrB,eAAC,KAAD,CAAQ5K,MAAiBzC,EAAVqN,EAAY,oBAAyB,mBAAoBC,UAAU,EAAlF,UACE,eAAC,KAAD,CAAcC,OAAK,EAAnB,UACE,qBACEnN,UAAU,eACV0G,MAAM,KACNC,OAAO,KACPyG,MAAM,6BACNC,oBAAoB,iBACpBC,UAAU,QACVpN,KAAK,MAPP,SASE,sBAAMwG,MAAM,OAAOC,OAAO,OAAO4G,KAAMN,EAAU,UAAY,cAE/D,wBAAQjN,UAAU,UAAlB,SAAuCJ,EAAVqN,EAAY,oBAAyB,wBAEpE,cAAC,KAAD,UAAatL,GAAW/B,EAAE,yBAGxByJ,GAAqB,CACzBa,wBAAyBpF,GAAkC,aAAhB2E,EAAK7D,OAChDhF,UAAWoK,EAAQP,uBACnBjL,UAAWwL,EAAQxL,UACnBC,kBAAmBuL,EAAQF,2BAC3BhL,2BACAY,gBACAD,kBACAD,WACAG,qBAEIuI,GAAuB,CAC3BpF,KAAM/C,EAASsK,YACfzK,UAAWoK,EAAQN,qBACnBzG,2BAA4B+G,EAAQ/G,2BACpCD,2BACApC,YACAmC,YAEIuF,GAAoB,CACxB3D,wBACA/E,UAAWoK,EAAQL,sBACnBjF,wBAAyBsF,EAAQtF,wBACjC5B,KAAM/C,EAASuK,eACftK,cACAyE,kBA7PwB,WACxBzE,EAAY,2BACPD,GADM,IAETuK,eAAgB,CACdtF,YAAa,GACbF,YAAa,GACbC,eAAgB,QAwPpBhC,WACAnC,YACAX,UACAC,cAEIkI,GAAkB,CACtBrE,QAAO,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAUgB,QACnBF,SAAU2F,EAAK3F,SACfC,iBACAlE,UAAWoK,EAAQJ,oBACnBhG,0BAEIuE,GAAqB,CACzBe,uBAAwBK,EACxB3J,UAAWoK,EAAQH,uBACnBpC,eAAgBgE,GAChBjE,gBACA2C,mBACAhE,yBAEIqG,GAAS,aACb/D,OACAL,mBACAC,sBACAH,wBACAI,qBACAH,sBACAI,UACAC,QACAE,6BACGc,GAGL,OACE,qCACE,cAACiD,EAAA,EAAD,UACE,oGAEF,cAAC,EAAD,eAAiBD,WC1bRE,a,iDCMAC,EANA,SAAC,GAAD,IAAGhK,EAAH,EAAGA,QAAH,OACd,sBAAK3D,UAAS,UAAK2D,GAAW,GAAhB,mFAAqGa,MAAO,CAAEkC,MAAO,MAAOC,OAAQ,OAASzG,KAAK,SAAhK,cACC,sBAAMF,UAAU,gBCFH2N,O,8GCiCAC,EA5BM,SAAC,GAAD,IACpBvL,EADoB,EACpBA,MACAwL,EAFoB,EAEpBA,kBACAhE,EAHoB,EAGpBA,oBACAiE,EAJoB,EAIpBA,mBACAhE,EALoB,EAKpBA,qBACAiE,EANoB,EAMpBA,qBACAhE,EAPoB,EAOpBA,uBAPoB,OASpB,eAAC,IAAD,CAAM9J,GAAK,GAAKD,UAAU,8DAA1B,UACC,6BAAKqC,IACL,eAAC,IAAD,CAAMrC,UAAU,yDAAyDqE,GAAK,GAAKC,GAAK,EAAxF,UAEEuF,GACA,cAAC,IAAD,CAASvJ,QAASyJ,EAAwBtG,KAAK,KAAKzD,UAAYsF,IAAW,oCAAqC,CAAE,eAAgBuI,IAAuBnK,MAAM,UAAUE,QAAQ,UAAjL,SACEkG,IAIF+D,GACA,cAAC,IAAD,CAASvN,QAASyN,EAAsBtK,KAAK,KAAKzD,UAAU,kCAAkC0D,MAAM,UAApG,SACEoK,Y,qGCRSF,EAbM,SAAC,GAA8C,IAA5CvL,EAA2C,EAA3CA,MAAOG,EAAoC,EAApCA,SAAUD,EAA0B,EAA1BA,OAAQD,EAAkB,EAAlBA,YACxC1C,EAAMiB,cAANjB,EAER,OACC,mCACC,eAAC,IAAD,CAAMI,UAAU,+DAAhB,UACC,6BAAKqC,IACJG,GAAY,cAAC,IAAD,CAASlC,QAASiC,EAAQmB,MAAM,YAAYE,QAAQ,QAApD,SAA6DtB,GAAe1C,EAAE","file":"static/js/25.3cdfbfd4.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {\n\tCCard,\n\tCCol,\n\tCRow,\n\tCLink,\n\tCCardBody,\n\tCListGroup,\n\tCListGroupItem,\n\tCButton,\n\tCModal,\n\tCModalContent,\n\tCModalHeader,\n\tCModalBody,\n\tCModalTitle,\n\tCModalFooter,\n\tCFormControl,\n\tCForm,\n\tCFormFloating,\n\tCFormText,\n\tCFormLabel,\n} from '@coreui/react'\nimport { ProfileTitle } from 'src/views/components/titles/profileTitle'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { useTranslation } from 'react-i18next'\nimport { CANDIDATE_TYPE } from 'src/constants'\nimport { isEmpty } from 'src/utils'\nimport {\n\tlinkEmployee\n} from 'src/services'\n\nconst INITIAL_FORM_DATA = {\n\temail: '',\n\tfirstName: '',\n\tmiddleName: '',\n\tlastName: '',\n}\n\nconst SingleEmployee = ({ runningId, isApprovalRunning, id, fields, t, email, isPendingCandidate, handleCandidateApproval, setButtonLabel }) => (\n\t<CListGroupItem className=\"employees py-2 py-md-4\" key={id}>\n\t\t<CRow className=\"align-items-stretch\">\n\t\t\t<CCol className=\"mb-3 mb-md-0\" xl={6}>\n\t\t\t\t<small className=\"text-muted\">{t('fullName')}</small>\n\t\t\t\t<h6 className=\"m-0\">{t('profile.employees.fullUserName', { ...fields })}</h6>\n\t\t\t</CCol>\n\t\t\t<CCol xl={3}>\n\t\t\t\t<small className=\"text-muted\">{t('email.short')}</small>\n\t\t\t\t<span className=\"d-block\">{email}</span>\n\t\t\t</CCol>\n\t\t\t<CCol xl={3} className=\"d-flex align-self-center justify-content-end\">\n\t\t\t\t<CLink\n\t\t\t\t\tkey={id}\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\tclassName={`text-end ${!isPendingCandidate ? 'text-primary' : 'text-danger'}`}\n\t\t\t\t\tdata-id={id}\n\t\t\t\t\tdata-approved={!isPendingCandidate}\n\t\t\t\t\tdata-email={email}\n\t\t\t\t\tonClick={handleCandidateApproval}\n\t\t\t\t>\n\t\t\t\t\t{isApprovalRunning && id === runningId ? <RegularLoader /> : setButtonLabel(isPendingCandidate)}\n\t\t\t\t</CLink>\n\t\t\t</CCol>\n\t\t</CRow>\n\t</CListGroupItem>\n)\n\nconst Employees = ({ addToast, showErrorToast, employeesList, loadEmployeesList, isLoading, isApprovalRunning, handleCandidateApproval, runningId }) => {\n\tconst { t } = useTranslation()\n\tconst setButtonLabel = (isPendingCandidate) => {\n\t\treturn t(!isPendingCandidate ? 'approveRequest' : 'delete')\n\t}\n\tconst renderEmployeesList = () => employeesList.map(({ id, fields, email, type }) => {\n\t\tconst isPendingCandidate = type !== CANDIDATE_TYPE.BUSINESS_LINKING_CANDIDATE\n\t\treturn (\n\t\t\t\t<SingleEmployee runningId={runningId} id={id} isApprovalRunning={isApprovalRunning} isPendingCandidate={isPendingCandidate} fields={fields} email={email} handleCandidateApproval={handleCandidateApproval} t={t} setButtonLabel={setButtonLabel} />\n\t\t)\n\t})\n\n\tconst [formData, setFormData] = useState(INITIAL_FORM_DATA)\n\n\tconst [visible, setVisible] = useState(false)\n\tconst [isValidate, setValidation] = useState(true)\n\n\tconst handleInviteEmployee = async () => {\n\t\ttry {\n\t\t\tconst response = await linkEmployee(formData)\n\t\t\tif (response?.token) {\n        loadEmployeesList()\n\t\t\t\tcloseInviteEmployeeModal()\n\t\t\t\taddToast(() => showErrorToast(t('profile.employees.modal.success'), false))\n\t\t\t}\n\t\t\tif (response?.message) {\n\t\t\t\taddToast(() => showErrorToast(response.message))\n\t\t\t}\n\t\t} catch (e) {\n\t\t\taddToast(() => showErrorToast())\n\t\t} finally {\n\n\t\t}\n\t}\n\tconst validateForm = (name, value) => {\n\t\tif (name === 'email') {\n\t\t\tconst re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\t\tconst isEmailValid = re.test(String(value).toLowerCase())\n\t\t\tif (isEmailValid) {\n\t\t\t\tsetValidation(true)\n\t\t\t} else {\n\t\t\t\tsetValidation(false)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst onChange = ({ target: { name, value } }) => {\n\t\tsetFormData({\n\t\t\t...formData,\n\t\t\t[name]: value\n\t\t})\n\t\tif (name && value) validateForm(name, value)\n\t}\n\n\tconst closeInviteEmployeeModal = () => {\n\t\tsetFormData(INITIAL_FORM_DATA)\n\t\tsetVisible(false)\n\t\tsetValidation(true)\n\t}\n\n\tconst renderInviteEmployeeModal = () => (\n\t\t<CModal alignment=\"center\" visible={visible} onDismiss={closeInviteEmployeeModal}>\n\t\t\t<CModalContent className=\"pb-4 px-3\">\n\t\t\t\t<CModalHeader onDismiss={closeInviteEmployeeModal}>\n\t\t\t\t\t<CModalTitle component=\"h2\">{t('profile.employees.modal.title')}</CModalTitle>\n\t\t\t\t</CModalHeader>\n\t\t\t\t<CModalBody className=\"mb-7\">\n\t\t\t\t\t<CForm>\n\t\t\t\t\t\t<CFormFloating>\n\t\t\t\t\t\t\t<CFormControl\n\t\t\t\t\t\t\t\tvalue={formData.email || ''}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\tplaceholder={t('email')}\n\t\t\t\t\t\t\t\tinvalid={ !isValidate}\n\t\t\t\t\t\t\t\tvalid={ Boolean(formData.email && isValidate )}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CFormLabel htmlFor=\"email\">{t('email')}</CFormLabel>\n\t\t\t\t\t\t</CFormFloating>\n\t\t\t\t\t\t<CFormFloating>\n\t\t\t\t\t\t\t<CFormControl\n\t\t\t\t\t\t\t\tvalue={formData.lastName || ''}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\t\tplaceholder={t('lastName')}\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CFormLabel htmlFor=\"lastName\">{t('lastName')}</CFormLabel>\n\t\t\t\t\t\t</CFormFloating>\n\t\t\t\t\t\t<CFormFloating>\n\t\t\t\t\t\t\t<CFormControl\n\t\t\t\t\t\t\t\tvalue={formData.firstName || ''}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\t\tplaceholder={t('firstName')}\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CFormLabel htmlFor=\"firstName\">{t('firstName')}</CFormLabel>\n\t\t\t\t\t\t</CFormFloating>\n\t\t\t\t\t\t<CFormFloating>\n\t\t\t\t\t\t\t<CFormControl\n\t\t\t\t\t\t\t\tvalue={formData.middleName || ''}\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"middleName\"\n\t\t\t\t\t\t\t\tid=\"middleName\"\n\t\t\t\t\t\t\t\tplaceholder={t('middleName')}\n\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CFormLabel htmlFor=\"middleName\">{t('middleName')}</CFormLabel>\n\t\t\t\t\t\t</CFormFloating>\n\t\t\t\t\t</CForm>\n\t\t\t\t</CModalBody>\n\t\t\t\t<CModalFooter className=\"justify-content-start\">\n\t\t\t\t\t<CButton\n\t\t\t\t\t\tonClick={handleInviteEmployee}\n\t\t\t\t\t\tdisabled={!isValidate || isEmpty(formData) || isLoading}\n\t\t\t\t\t\tclassName=\"text-white py-2\" size=\"sm\" color=\"primary\">\n\t\t\t\t\t\t{isLoading ? <RegularLoader classes=\"text-white\" /> : t('profile.employees.modal.button')}\n\t\t\t\t\t</CButton>\n\t\t\t\t\t<CButton className=\"mx-3 py-2\" color=\"primary\" size=\"sm\" variant=\"outline\"\n\t\t\t\t\t\tonClick={closeInviteEmployeeModal}>\n\t\t\t\t\t\t{t('cancel')}\n\t\t\t\t\t</CButton>\n\t\t\t\t</CModalFooter>\n\t\t\t</CModalContent>\n\t\t</CModal>\n\t)\n\n\tconst renderEmptyMessage = () => (<p className=\"text-center m-0\">{ t('profile.employees.empty') }</p>)\n\n\treturn (\n\t\t<>\n\t\t\t<ProfileTitle title={t('profile.employees.subtitle')} buttonLabel={t('profile.employees.button')} onEdit={() => setVisible(true)} editable />\n\t\t\t{(isLoading || (!isLoading && !employeesList.length)) &&\n\t\t\t\t<CCard className=\"mt-5\">\n\t\t\t\t\t<CCardBody>\n\t\t\t\t\t\t{isLoading && <Loader />}\n\t\t\t\t\t\t{(!isLoading && !employeesList.length) && renderEmptyMessage()}\n\t\t\t\t\t</CCardBody>\n\t\t\t\t</CCard>}\n\t\t\t{(!isLoading && !!employeesList.length) && <CListGroup className=\"employees\">{renderEmployeesList()}</CListGroup>}\n\t\t\t{renderInviteEmployeeModal()}\n\t\t</>\n\t)\n}\n\nexport default Employees\n","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCol,\n  CRow,\n  CButton,\n  CCardBody,\n  CModal,\n  CFormFloating,\n  CFormLabel,\n  CFormControl,\n  CModalContent,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle, CFormText\n} from '@coreui/react'\nimport { ProfileTitle } from 'src/views/components/titles/profileTitle'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport { useTranslation } from 'react-i18next'\n\nconst UserContacts = ({ data, isLoading, userInfo, handleContactDataUpdate, isContactDataUpdateRunning, onChange }) => {\n  const [visible, setVisible] = useState(false)\n  const { t } = useTranslation()\n  const onChangeHandler = (event) => onChange('contactForm', event)\n  const isBankUser = userInfo.type === 'BANK_ADMIN'\n  const renderContent = () => (\n    <CRow>\n      <CCol xs={12} md={3} className=\"mb-3 mb-md-0\">\n        <small className=\"text-muted\">{t('email')}</small>\n        <h6 className=\"m-0\">{userInfo?.email}</h6>\n      </CCol>\n      {!isBankUser && <CCol xs={12} md={3} className=\"mb-3 mb-md-0\">\n        <small className=\"text-muted\">{t('phoneNumber')}</small>\n        <span className=\"d-block\">{userInfo.phone ? `+${userInfo.phone}` : ''}</span>\n      </CCol>}\n      <CCol xs={12} md={3}>\n        <small className=\"text-muted\">{t('yourName')}</small>\n        <h6 className=\"m-0\">{data.firstName}</h6>\n      </CCol>\n    </CRow>\n  )\n  const renderEditModal = () => (\n    <CModal alignment=\"center\" visible={visible}>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={() => setVisible(false)}>\n          <CModalTitle component=\"h2\">{t('edit.pending')}</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-4\">\n          <CFormFloating>\n            <CFormControl\n              value={data.email || ''}\n              disabled={isContactDataUpdateRunning}\n              autoComplete=\"off\"\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder={t('email')}\n              onChange={onChangeHandler}\n            />\n            <CFormLabel htmlFor=\"email\">{t('email')}</CFormLabel>\n          </CFormFloating>\n          <CCol className=\"mt-4 position-relative\" xl={6}>\n            <CFormText component=\"span\" id=\"phone\">{t('phoneNumber')}</CFormText>\n            <CFormText\n              style={{ fontSize: '1rem', bottom: '0.2rem' }}\n              className=\"position-absolute start-0 pb-1\"\n              component=\"span\"\n              id=\"phone\"\n            >\n              + {t('countryPhoneCode')}\n            </CFormText>\n            <CFormControl\n              value={data?.phone || ''}\n              className=\"ps-5\"\n              disabled={isContactDataUpdateRunning}\n              autoComplete=\"off\"\n              type=\"number\"\n              name=\"phone\"\n              id=\"phone\"\n              placeholder=\"251112233\"\n              onChange={onChangeHandler}\n            />\n          </CCol>\n          <CFormFloating className=\"mt-4\">\n            <CFormControl\n              value={data.lastName || ''}\n              disabled={isContactDataUpdateRunning}\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"lastName\"\n              id=\"lastName\"\n              placeholder={t('yourLastName')}\n              onChange={onChangeHandler}\n            />\n            <CFormLabel htmlFor=\"lastName\">{t('yourLastName')}</CFormLabel>\n          </CFormFloating>\n          <CFormFloating className=\"mt-4\">\n            <CFormControl\n              value={data.firstName || ''}\n              disabled={isContactDataUpdateRunning}\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"firstName\"\n              id=\"name\"\n              placeholder={t('yourName')}\n              onChange={onChangeHandler}\n            />\n            <CFormLabel>{t('yourName')}</CFormLabel>\n          </CFormFloating>\n          <CFormFloating className=\"mt-4\">\n            <CFormControl\n              value={data.middleName || ''}\n              disabled={isContactDataUpdateRunning}\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"middleName\"\n              id=\"name\"\n              placeholder={t('yourMiddleName')}\n              onChange={onChangeHandler}\n            />\n            <CFormLabel htmlFor=\"email\">{t('yourMiddleName')}</CFormLabel>\n          </CFormFloating>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton\n            disabled={isContactDataUpdateRunning}\n            className=\"text-white py-2\"\n            size=\"sm\"\n            color=\"primary\"\n            onClick={handleContactDataUpdate}>\n            {isContactDataUpdateRunning ? <RegularLoader classes=\"text-white\" /> : t('save')}\n          </CButton>\n          <CButton className=\"mx-3 py-2\" color=\"primary\" size=\"sm\" variant=\"outline\" onClick={() => setVisible(false)}>\n            {t('cancel')}\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n  return (\n    <>\n      <ProfileTitle title={t('profile.contacts.subtitle')} editable onEdit={() => setVisible(!visible)} />\n      <CCard>\n        <CCardBody className=\"py-4\">\n          {isLoading && <Loader />}\n          {!isLoading && renderContent()}\n        </CCardBody>\n      </CCard>\n      {renderEditModal()}\n    </>\n  )\n}\n\nexport default UserContacts\n","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCol,\n  CRow,\n  CButton,\n  CCardBody,\n  CFormControl,\n//   CFormFloating,\n  // CFormLabel,\n\tCFormText,\n  CModal,\n  CModalContent,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CForm\n} from '@coreui/react'\nimport { ProfileTitle } from 'src/views/components/titles/profileTitle'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { useTranslation } from 'react-i18next'\nimport { isEmpty } from 'src/utils/objectUtils'\nimport classnames from 'classnames'\n\nconst Entity = ({ isLoading, getCompanyDataHandler, userType, isBankUserType, company: { name, legalInfo } }) => {\n\tconst { t } = useTranslation()\n  const [visible, setVisible] = useState(false)\n  const [formData, setFormData] = useState({unpNumber: ''})\n\tconst onSubmit = () => {\n\t\tgetCompanyDataHandler(formData.unpNumber)\n\t}\n  const onChange = ({ target: { name, value } }) => {\n    setFormData({\n      ...formData,\n      [name]: value\n    })\n  }\n  const renderEditModal = () => (\n    <CModal alignment=\"center\" visible={visible} onDismiss={() => setVisible(false)}>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={() => setVisible(false)}>\n          <CModalTitle component=\"h2\">{t('edit.pending')}</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          <CForm></CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton className=\"text-white py-2\" size=\"sm\" color=\"primary\" >{t('save')}</CButton>\n          <CButton className=\"mx-3 py-2\" color=\"primary\" size=\"sm\" variant=\"outline\" onClick={() => setVisible(false)}>\n            {t('cancel')}\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n\tconst renderCheckingContent = () => (\n\t\t<>\n\t\t\t<CRow className=\"align-items-stretch\">\n\t\t\t\t<p>{t('profile.entity.checkUNPText')}</p>\n\t\t\t</CRow>\n\t\t\t<CRow className=\"align-items-center m-0\">\n\t\t\t\t<CCol className=\"p-0 me-md-3\" md={3} xs={12} xl={ 2 }>\n        \t<CFormText component=\"span\" id=\"UNP\">{ t('UNP') }</CFormText>\n          <CFormControl\n\t\t\t\t\t\tvalue={formData.unp}\n            autoComplete=\"off\"\n            type=\"number\"\n            name=\"unpNumber\"\n            id=\"UNP\"\n            placeholder=\"10008858\"\n            onChange={ onChange }\n          />\n        </CCol>\n\t\t\t\t<CCol className=\"mt-4 mt-md-0 p-0 align-self-end\" xl={ 3 } md={ 9 } xs={ 12 }>\n\t\t\t\t\t<CButton onClick={onSubmit} disabled={ isLoading || isEmpty(formData) } className=\"rounded-3 col-12 text-white mt-3 mt-md-0\">{t('verification.button')}</CButton>\n        </CCol>\n\t\t\t</CRow>\n\t\t</>\n\t)\n\tconst renderContent = () => (\n\t\t<>\n\t\t\t<CRow className=\"align-items-stretch\">\n\t\t\t\t<CCol xl={3}>\n\t\t\t\t\t<small className=\"text-muted\">{t(`profile.${userType}.entity.name`)}</small>\n\t\t\t\t\t<h6 className=\"m-0\">{name}</h6>\n\t\t\t\t</CCol>\n\t\t\t\t{isBankUserType && <CCol xl={ 3 }>\n\t\t\t\t\t<small className=\"text-muted\">{ t('profile.entity.specialist') }</small>\n\t\t\t\t\t<h6 className=\"m-0\">Замоканный спец</h6>\n\t\t\t\t</CCol> }\n\t\t\t\t{!isBankUserType && <CCol xl={ 3 }>\n\t\t\t\t\t<small className=\"text-muted\">{ t('profile.entity.UNP') }</small>\n\t\t\t\t\t<span className=\"d-block\">{ legalInfo.unp }</span>\n\t\t\t\t</CCol> }\n\t\t\t\t{!isBankUserType && <CCol xl={ 3 }>\n\t\t\t\t\t<small className=\"text-muted\">{ t('profile.entity.registerDate') }</small>\n\t\t\t\t\t<span className=\"d-block\">{ legalInfo.registrationDate }</span>\n\t\t\t\t</CCol> }\n\t\t\t\t{!isBankUserType && <CCol xl={ 3 }>\n\t\t\t\t\t<small className=\"text-muted\">{ t('profile.entity.authority') }</small>\n\t\t\t\t\t<span className=\"d-block\">{ legalInfo.issuer }</span>\n\t\t\t\t</CCol> }\n\t\t\t</CRow>\n\t\t\t{!isBankUserType && <CRow className=\"my-4\">\n\t\t\t\t<CCol xl={ 12 }>\n\t\t\t\t\t<small className=\"text-muted\">{ t('profile.entity.entityForm') }</small>\n\t\t\t\t\t<h6 className=\"m-0\">{ legalInfo.type }</h6>\n\t\t\t\t</CCol>\n\t\t\t</CRow> }\n\t\t\t<CRow className={classnames({'mt-4': isBankUserType})}>\n\t\t\t\t<CCol xl={12}>\n\t\t\t\t\t<small className=\"text-muted\">{t(`profile.${userType}.entity.address`)}</small>\n\t\t\t\t\t<h6 className=\"m-0\">{ legalInfo.address }</h6>\n\t\t\t\t</CCol>\n\t\t\t</CRow>\n\t\t</>\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<ProfileTitle title={legalInfo.unp || isBankUserType ? t(`profile.${userType}.entity.subtitle`) : t('profile.entity.UNP')} onEdit={() => setVisible(!visible)} />\n\t\t\t<CCard>\n\t\t\t\t{ legalInfo.unp || isBankUserType ?\n\t\t\t\t<CCardBody className=\"py-4\">\n\t\t\t\t\t\t{isLoading && <Loader />}\n\t\t\t\t\t\t{!isLoading && renderContent()}\n\t\t\t\t\t</CCardBody>\n\t\t\t\t: <CCardBody className=\"py-4\">\n\t\t\t\t\t\t{isLoading && <Loader />}\n\t\t\t\t\t\t{!isLoading && renderCheckingContent()}\n\t\t\t\t\t</CCardBody> }\n\t\t\t</CCard>\n      {renderEditModal()}\n\t\t</>\n\t)\n}\n\nexport default Entity\n","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCol,\n  CRow,\n  CButton,\n  CCardBody,\n  CFormControl,\n  CFormFloating,\n  CFormLabel,\n  CModal,\n  CModalContent,\n  CModalBody,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CForm, CFormText\n} from '@coreui/react'\nimport { ProfileTitle } from 'src/views/components/titles/profileTitle'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport RegularLoader from 'src/views/components/loaders/regular'\nimport { useTranslation } from 'react-i18next'\n\nconst Security = ({ cleanPasswordData, isSecurityUpdateLoading, isLoading, data, userInfo, handlePasswordUpdate, onChange, visible, setVisible }) => {\n  const { t } = useTranslation()\n  const onChangeHandler = (event) => onChange('updatePassword', event)\n  const renderContent = () => (\n    <>\n      { userInfo.status === 'UNVERIFIED' && userInfo.type !== 'BANK_ADMIN' &&\n      <p>{ t('profile.security.unverified.info') }</p>\n      }\n      <CRow>\n        <CCol xs={ 12 } md={ 3 }>\n          <small className=\"text-muted\">{ t('login') }</small>\n          <h6 className=\"m-0\">{ userInfo?.email }</h6>\n        </CCol>\n        <CCol xs={ 12 } md={ 3 } className=\"mt-3 mt-md-0\">\n          <small className=\"text-muted\">{ t('password') }</small>\n          <h6 className=\"m-0\">****************</h6>\n        </CCol>\n      </CRow>\n    </>\n  )\n  const renderEditModal = () => (\n    <CModal alignment=\"center\" visible={ visible }>\n      <CModalContent className=\"pb-4 px-3\">\n        <CModalHeader onDismiss={ () => {\n          cleanPasswordData()\n          setVisible(false)\n        } }>\n          <CModalTitle component=\"h2\">{ t('edit.pending') }</CModalTitle>\n        </CModalHeader>\n        <CModalBody className=\"mb-7\">\n          <CForm>\n            <CFormFloating>\n              <CFormControl\n                autoComplete=\"off\"\n                type=\"password\"\n                name=\"oldPassword\"\n                id=\"oldPassword\"\n                placeholder={ t('oldPassword') }\n                onChange={ onChangeHandler }\n                onPaste={ onChangeHandler }\n              />\n              <CFormLabel htmlFor=\"oldPassword\">{ t('oldPassword') }</CFormLabel>\n            </CFormFloating>\n            <CFormFloating className=\"mt-4\">\n              <CFormControl\n                autoComplete=\"off\"\n                type=\"password\"\n                name=\"newPassword\"\n                id=\"newPassword\"\n                placeholder={ t('newPassword') }\n                onChange={ onChangeHandler }\n                onPaste={ onChangeHandler }\n              />\n              <CFormLabel htmlFor=\"newPassword\">{ t('newPassword') }</CFormLabel>\n            </CFormFloating>\n            { data.newPassword && data.repeatPassword && data.newPassword !== data.repeatPassword &&\n            <CFormText className=\"text-danger\" component=\"span\">{t('profile.security.modal.errorLabel')}</CFormText> }\n            <CCol className=\"mt-2\" xl={ 12 }>\n              <CFormFloating>\n                <CFormControl\n                  autoComplete=\"off\"\n                  type=\"password\"\n                  name=\"repeatPassword\"\n                  id=\"repeatPassword\"\n                  placeholder={ t('repeatPassword') }\n                  onChange={ onChangeHandler }\n                  onPaste={ onChangeHandler }\n                />\n                <CFormLabel htmlFor=\"repeatPassword\">{ t('repeatPassword') }</CFormLabel>\n              </CFormFloating>\n              { data.newPassword && data.repeatPassword && data.newPassword !== data.repeatPassword &&\n              <CFormText className=\"text-danger\" component=\"span\">{t('profile.security.modal.errorLabel')}</CFormText> }\n            </CCol>\n          </CForm>\n        </CModalBody>\n        <CModalFooter className=\"justify-content-start\">\n          <CButton disabled={ !data.oldPassword || !data.newPassword || !data.repeatPassword || data.newPassword !== data.repeatPassword || isSecurityUpdateLoading } onClick={ handlePasswordUpdate }\n                   className=\"text-white py-2\" size=\"sm\" color=\"primary\">\n            { isSecurityUpdateLoading ? <RegularLoader classes=\"text-white\"/> : t('save') }\n          </CButton>\n          <CButton className=\"mx-3 py-2\" color=\"primary\" size=\"sm\" variant=\"outline\"\n                   onClick={ () => {\n                     cleanPasswordData()\n                     setVisible(false)\n                   } }>\n            { t('cancel') }\n          </CButton>\n        </CModalFooter>\n      </CModalContent>\n    </CModal>\n  )\n  return (\n    <>\n      <ProfileTitle title={ t('profile.security.subtitle') } editable onEdit={ () => setVisible(!visible) }/>\n      <CCard>\n        <CCardBody className=\"py-4\">\n          { isLoading && <Loader/> }\n          { !isLoading && renderContent() }\n        </CCardBody>\n      </CCard>\n      { renderEditModal() }\n    </>\n  )\n}\n\nexport default Security\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next'\nimport classnames from 'classnames'\nimport { useDropzone } from 'react-dropzone';\nimport { CButton } from '@coreui/react'\nimport { uploadDocument } from 'src/services'\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap'\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction FileUploader({ handleUploadDocument }) {\n  const { t } = useTranslation()\n  const [files, setFiles] = useState([]);\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: async ([acceptedFile]) => {\n      const fd = new FormData()\n      fd.append('file', acceptedFile, acceptedFile.name)\n      handleUploadDocument(fd)\n    }\n  });\n\n  const thumbs = files.map(file => (\n    <div style={ thumb } key={ file.name }>\n      <div style={ thumbInner }>\n        <img\n          src={ file.preview }\n          style={ img }\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (<>\n      <CButton className=\"mx-auto mx-md-0 mt-3 mt-md-0 d-block d-md-none text-white py-2 mb-3 mb-md-0\" size=\"sm\"\n               color=\"primary\">{ t('profile.documents.upload') }</CButton>\n      <section className=\"py-5 mt-3 d-none d-md-block\" style={ { border: '2px dashed #2F80ED', borderRadius: '5px' } }>\n        <div { ...getRootProps({ className: 'd-flex dropzone flex-column flex-md-row align-items-center justify-content-center' }) }>\n          <input { ...getInputProps() } />\n          <CButton className=\"text-white py-2 mb-3 mb-md-0\" size=\"sm\"\n                   color=\"primary\">{ t('profile.documents.upload') }</CButton>\n          <p className=\"text-muted text-center text-md-start ms-5 mb-0\">{ t('profile.documents.info') }</p>\n        </div>\n        <aside style={ thumbsContainer } className={ classnames({ 'mt-3': files.length }) }>\n          { thumbs }\n        </aside>\n      </section>\n    </>\n  );\n}\n\nexport default FileUploader\n","import React from 'react'\nimport {\n  CCol,\n  CCard,\n  CCardBody,\n  CButton\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { ProfileTitle } from 'src/views/components/titles/profileTitle'\nimport Loader from 'src/views/components/loaders/intermittent'\nimport { useTranslation } from 'react-i18next'\nimport { FileUploader } from 'src/components/fileUploader'\n\nconst Documents = ({ isLoading, documentsList, deleteDocument, handleUploadDocument }) => {\n  const { t } = useTranslation()\n  const renderDocumentsList = () => (\n    <>\n      <CCol className=\"d-flex flex-wrap\">\n        { documentsList.length\n          ? documentsList.map(document => (\n          <div key={document.id} className=\"me-3 mt-3\">\n            <img\n              style={ { objectFit: 'cover' } }\n              className=\"position-relative rounded-3\"\n              width=\"100\"\n              height=\"100\"\n              src={ document.url }\n            />\n            <CButton\n              onClickCapture={ deleteDocument }\n              data-id={ document.id }\n              style={ {\n                zIndex: 5,\n                boxShadow: 'none'\n              } }\n              className=\"bg-transparent position-absolute top-1 end-1 translate-middle m-0 border-0 rounded-circle p-0\"\n            >\n              {<CIcon style={{pointerEvents: 'none'}} name=\"cross\" height={16}/>}\n            </CButton>\n          </div>\n        ))\n        : <span>{t('profile.documents.warning.text')}</span>}\n      </CCol>\n    </>\n  )\n  const renderContent = () => (\n    <>\n      <span className=\"text-start\">\n        { t('profile.documents.description') }\n      </span>\n      <FileUploader handleUploadDocument={handleUploadDocument} />\n      <h4 className=\"mt-5 mb-3\">{ t('profile.documents.downLoadedFiles') }</h4>\n      { isLoading && <Loader /> }\n      {!isLoading && renderDocumentsList()}\n    </>\n  )\n\n  return (\n    <>\n      <ProfileTitle title={ t('profile.documents.subtitle') }/>\n      <CCard>\n        <CCardBody>\n          { renderContent() }\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Documents\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Employees } from 'src/components/employees'\nimport { UserContacts } from 'src/components/userContacts'\nimport { Entity } from 'src/components/entity'\nimport { Security } from 'src/components/security'\nimport { Documents } from 'src/components/documents'\nimport { CButton, CCol, CRow, CToaster } from '@coreui/react'\nimport { useDispatch } from 'react-redux'\nimport { logout } from 'src/store'\nimport { PageTitle } from '../components/titles/pageTitle'\n\nconst ProfileView = ({\n                      userContactDataProps,\n                      documentsPropsData,\n                      entityDataProps,\n                      employeesPropsData,\n                      securityDataProps,\n                      toaster,\n                      toast,\n                      user,\n                      verificationButtonHandler,\n}) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch()\n  const logOutHandler = () => dispatch(logout())\n  return (\n    <>\n      <PageTitle title={ t(user.status === 'VERIFIED' ? 'profile' : 'verification') } withSecondaryButton secondaryButtonLabel={ t('logOut') }\n        onSecondaryButtonClick={logOutHandler} />\n      { user.status !== 'VERIFIED' && user.type !== 'BANK_ADMIN' &&\n      <CRow className=\"align-items-center text-white rounded-3 bg-primary px-3 m-0 py-4\">\n        <CCol md={ 9 } className=\"p-0\">\n          <h6 className=\"m-0\">{ t('verificationProfileText') }</h6></CCol>\n          <CButton\n            size=\"sm\"\n            className=\"rounded-3 col-12 col-md-3 btn-sm text-primary px-0 py-2 bg-white mt-3 mt-md-0\"\n            color=\"primary\"\n            block=\"true\"\n            onClick={verificationButtonHandler}\n          >\n            { t('verification.button') }\n          </CButton>\n      </CRow>\n      }\n      <UserContacts {...userContactDataProps} />\n      <Security {...securityDataProps} />\n      <Entity {...entityDataProps} />\n      {employeesPropsData.shouldDisplayComponent && <Employees {...employeesPropsData} />}\n      {documentsPropsData.shouldDisplayComponent && <Documents {...documentsPropsData} />}\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n    </>\n  )\n}\n\nexport default ProfileView\n","import React, { useState, useRef, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  CToast,\n  CToastHeader,\n  CToastBody\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\nimport ProfileView from './ProfileView'\n\nimport {\n  getEmployeesList,\n  updateCandidate,\n  getDocumentsList,\n  getUserInfo,\n  updateContactData,\n  updatePassword,\n  uploadDocument,\n  deleteDocument,\n  getBusinessCompanyData,\n  verifyUser\n} from 'src/services'\nimport { Helmet } from 'react-helmet'\n\nconst ProfileContainer = ({ user, isBankUserType, isBusinessUserType, ...rest }) => {\n  const { t } = useTranslation()\n  const [loaders, setLoaders] = useState({\n    isEmployeesListLoading: false,\n    isContactDataLoading: false,\n    isContactDataUpdateRunning: false,\n    isSecurityDataLoading: false,\n    isSecurityUpdateLoading: false,\n    isEntityDataLoading: false,\n    isDocumentsDataLoading: false,\n    isCandidateApprovalRunning: false,\n    isVerificationLoader: true,\n    runningId: ''\n  })\n  const [employeesList, setEmployeesList] = useState([])\n  const [documentsList, setDocumentsList] = useState([])\n  const [visible, setVisible] = useState(false)\n  const [userInfo, setUserInfo] = useState({\n    company: {\n      name: '',\n      legalInfo: {\n        unp: '',\n        registrationDate: '',\n        issuer: '',\n        type: '',\n        name: '',\n        address: ''\n      }\n    },\n    fields: {\n      firstName: '',\n      lastName: '',\n      middleName: ''\n    }\n  })\n  const [formData, setFormData] = useState({\n    contactForm: {\n      email: userInfo.email || '',\n      phone: userInfo.phone || '',\n      fields: {\n        firstName: userInfo?.fields?.firstName || '',\n        lastName: userInfo?.fields?.lastName || '',\n        middleName: userInfo?.fields?.middleName || '',\n      },\n    },\n    updatePassword: {\n      oldPassword: '',\n      newPassword: '',\n      repeatPassword: ''\n    }\n  })\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  useEffect(async () => {\n    loadEmployeesList()\n  }, [rest.userType])\n  useEffect(async () => {\n    if (isBusinessUserType) {\n      try {\n        setLoaders({\n          ...loaders,\n          isDocumentsDataLoading: true\n        })\n        const documentsList = await getDocumentsList()\n        setDocumentsList([...documentsList])\n      } catch (error) {\n        addToast(() => showErrorToast())\n      } finally {\n        setLoaders({\n          ...loaders,\n          isDocumentsDataLoading: false\n        })\n      }\n    }\n  }, [rest.userType])\n  useEffect(async () => {\n    try {\n      setLoaders({\n        ...loaders,\n        isContactDataLoading: true,\n        isSecurityDataLoading: true\n      })\n      const personalData = await getUserInfo()\n      setUserInfo({\n        ...userInfo,\n        ...personalData\n      })\n      setFormData({\n        ...formData,\n        contactForm: {\n          ...formData.contactForm,\n          email: personalData.email || '',\n          phone: personalData?.phone?.substring(3) || '',\n          firstName: personalData?.fields?.firstName || '',\n          lastName: personalData?.fields?.lastName || '',\n          middleName: personalData?.fields?.middleName || ''\n        }\n      })\n    } catch (error) {\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isContactDataLoading: false,\n        isSecurityDataLoading: false\n      })\n    }\n  }, [])\n  const loadEmployeesList = async () => {\n    if (!isBankUserType) {\n      try {\n        setLoaders({\n          ...loaders,\n          isEmployeesListLoading: true\n        })\n        const employeesList = await getEmployeesList()\n        setEmployeesList([...employeesList])\n      } catch (error) {\n        console.log(error)\n        addToast(() => showErrorToast())\n      } finally {\n        setLoaders({\n          ...loaders,\n          isEmployeesListLoading: false\n        })\n      }\n    }\n  }\n  const cleanPasswordData = () => {\n    setFormData({\n      ...formData,\n      updatePassword: {\n        oldPassword: '',\n        newPassword: '',\n        repeatPassword: ''\n      }\n    })\n  }\n  const verificationButtonHandler = async() => {\n    try {\n      setLoaders({\n        ...loaders,\n        isVerificationLoader: true\n      })\n      const data = await verifyUser({})\n      if (data.wasCreated) {\n        addToast(() => showErrorToast(t('verificationRequestSuccessfullySent'), false))\n      }\n    } catch (e) {\n      setLoaders({\n        ...loaders,\n        isVerificationLoader: false\n      })\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isVerificationLoader: false\n      })\n    }\n  }\n\n  const getCompanyDataHandler = async (unpInfo) => {\n    try {\n      setLoaders({\n        ...loaders,\n        isEntityDataLoading: true\n      })\n      const response = await getBusinessCompanyData(unpInfo)\n      if (response.message) {\n        addToast(() => showErrorToast(response.message))\n      }\n      if (!response.message) {\n        setUserInfo({ ...userInfo, company: { ...userInfo.company, legalInfo: response } })\n      }\n    } catch {\n      addToast(() => showErrorToast())\n    }\n    finally {\n      setLoaders({\n        ...loaders,\n        isEntityDataLoading: false\n      })\n    }\n  }\n\n  const handleContactDataUpdate = async () => {\n    try {\n      setLoaders({\n        ...loaders,\n        isContactDataUpdateRunning: true\n      })\n      const contactFormData = { ...formData.contactForm }\n      delete contactFormData.fields\n      if (!contactFormData.email && userInfo.email) {\n        contactFormData.email = userInfo.email\n      }\n      if (!contactFormData.phone && userInfo.phone) {\n        contactFormData.phone = userInfo.phone\n      }\n      contactFormData.phone = t('countryPhoneCode') + contactFormData.phone\n      const data = await updateContactData(contactFormData)\n      if (!data.message) {\n        setUserInfo({ ...userInfo, ...data })\n        addToast(() => showErrorToast(t('dataSuccessfullyUpdated'), false))\n      }\n      if (data.message) addToast(() => showErrorToast(data.message))\n\n    } catch (error) {\n      console.log(error)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isContactDataUpdateRunning: false\n      })\n    }\n  }\n  const handleCandidateApproval = async ({ target: { dataset: { email, approved, id } } }) => {\n    try {\n      setLoaders({\n        ...loaders,\n        isCandidateApprovalRunning: true,\n        runningId: id\n      })\n      const data = { email, approved: approved === 'true' }\n      const { message } = await updateCandidate(data)\n      if (message) {\n        addToast(() => showErrorToast(message))\n      } else {\n        try {\n          setLoaders({\n            ...loaders,\n            isEmployeesListLoading: true\n          })\n          const employeesList = await getEmployeesList()\n          setEmployeesList([...employeesList])\n        } catch (error) {\n          console.log(error)\n          addToast(() => showErrorToast())\n        } finally {\n          setLoaders({\n            ...loaders,\n            isEmployeesListLoading: false\n          })\n        }\n      }\n    } catch (error) {\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isCandidateApprovalRunning: false\n      })\n    }\n  }\n  const handlePasswordUpdate = async () => {\n    try {\n      setLoaders({\n        ...loaders,\n        isSecurityUpdateLoading: true\n      })\n      const updatePasswordData = { ...formData.updatePassword }\n      delete updatePasswordData.repeatPassword\n      const { message } = await updatePassword(updatePasswordData)\n      if (message) {\n        addToast(() => showErrorToast(message))\n      }\n      if (!message) {\n        setVisible(false)\n        addToast(() => showErrorToast(t('passwordSuccessfullyUpdated'), false))\n      }\n    } catch (error) {\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isSecurityUpdateLoading: false\n      })\n    }\n  }\n  const handleDeleteDocument = async ({ target: { dataset: { id } } }) => {\n    try {\n      setLoaders({\n        ...loaders,\n        isDocumentsDataLoading: true\n      })\n      await deleteDocument(id)\n      const updatedDocuments = documentsList.filter(el => el.id !== id)\n      setDocumentsList(updatedDocuments)\n    } catch (e) {\n      console.log(e)\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isDocumentsDataLoading: false\n      })\n    }\n  }\n  const handleUploadDocument = async (fileData) => {\n    try {\n      setLoaders({\n        ...loaders,\n        isDocumentsDataLoading: true\n      })\n\n      const response = await uploadDocument(fileData)\n      if (response.message) {\n        addToast(() => showErrorToast(response.message))\n      }\n      if (!response.message) {\n        const [uploadedImage] = response\n        const updatedDocuments = [...documentsList, uploadedImage]\n        if (uploadedImage) {\n          setDocumentsList(updatedDocuments)\n        }\n      }\n    } catch (error) {\n      addToast(() => showErrorToast())\n    } finally {\n      setLoaders({\n        ...loaders,\n        isDocumentsDataLoading: false\n      })\n    }\n  }\n  const onChange = (form, { target: { name, value } }) => {\n    setFormData({\n      ...formData,\n      [form]: {\n        ...formData[form],\n        [name]: value\n      }\n    })\n  }\n\n  const showErrorToast = (message = '', isError = true) => (\n    <CToast title={isError ? t('defaultErrorTitle') : t('congratulations')} autohide={true}>\n      <CToastHeader close>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill={isError ? '#EB5757' : '#6FCF97'}></rect>\n        </svg>\n        <strong className=\"me-auto\">{isError ? t('defaultErrorTitle') : t('congratulations')}</strong>\n      </CToastHeader>\n      <CToastBody>{message || t('default400Error')}</CToastBody>\n    </CToast>\n  )\n  const employeesPropsData = {\n    shouldDisplayComponent: !isBankUserType && user.status === 'VERIFIED',\n    isLoading: loaders.isEmployeesListLoading,\n    runningId: loaders.runningId,\n    isApprovalRunning: loaders.isCandidateApprovalRunning,\n    handleCandidateApproval,\n    employeesList,\n    showErrorToast,\n    addToast,\n    loadEmployeesList\n  }\n  const userContactDataProps = {\n    data: formData.contactForm,\n    isLoading: loaders.isContactDataLoading,\n    isContactDataUpdateRunning: loaders.isContactDataUpdateRunning,\n    handleContactDataUpdate,\n    onChange,\n    userInfo\n  }\n  const securityDataProps = {\n    handlePasswordUpdate,\n    isLoading: loaders.isSecurityDataLoading,\n    isSecurityUpdateLoading: loaders.isSecurityUpdateLoading,\n    data: formData.updatePassword,\n    setFormData,\n    cleanPasswordData,\n    userInfo,\n    onChange,\n    visible,\n    setVisible\n  }\n  const entityDataProps = {\n    company: userInfo?.company,\n    userType: rest.userType,\n    isBankUserType,\n    isLoading: loaders.isEntityDataLoading,\n    getCompanyDataHandler\n  }\n  const documentsPropsData = {\n    shouldDisplayComponent: isBusinessUserType ,\n    isLoading: loaders.isDocumentsDataLoading,\n    deleteDocument: handleDeleteDocument,\n    documentsList,\n    setDocumentsList,\n    handleUploadDocument\n  }\n  const propsData = {\n    user,\n    entityDataProps,\n    employeesPropsData,\n    userContactDataProps,\n    securityDataProps,\n    documentsPropsData,\n    toaster,\n    toast,\n    verificationButtonHandler,\n    ...rest\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Профиль | Deposit Platform</title>\n      </Helmet>\n      <ProfileView {...propsData} />\n    </>\n  )\n}\n\nconst mapStateToProps = ({ user, isBankUserType, isBusinessUserType }) => ({\n  userType: user.type,\n  user,\n  isBankUserType,\n  isBusinessUserType\n})\nexport default connect(mapStateToProps, null)(ProfileContainer)\n","import ProfileContainer from './ProfileContainer'\n\nexport default ProfileContainer\n","import React from 'react'\n\nconst Loader = ({ classes }) => (\n\t<div className={`${classes || ''} d-flex justify-content-center intermittent spinner-border text-primary mx-auto`} style={{ width: '5em', height: '5em' }} role=\"status\"> {/* TODO сделать новый класс для спиннера, а  не переопределять этот в custom.scss*/}\n\t\t<span className=\"sr-only\" />\n\t</div>\n)\n\nexport default Loader\n","import Loader from './Loader'\n\nexport default Loader\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport classnames from 'classnames'\n\nconst ProfileTitle = ({\n\ttitle,\n\twithPrimaryButton,\n\twithSecondaryButton,\n\tprimaryButtonLabel,\n\tsecondaryButtonLabel,\n\tonPrimaryButtonClick,\n\tonSecondaryButtonClick\n}) => (\n\t<CCol xl={ 12 } className=\"mb-3 d-flex flex-column flex-md-row justify-content-between\">\n\t\t<h2>{title}</h2>\n\t\t<CCol className=\"d-flex flex-wrap flex-md-nowrap justify-content-md-end\" xs={ 12 } md={ 6 } >\n\t\t\t{\n\t\t\t\twithSecondaryButton &&\n\t\t\t\t<CButton onClick={onSecondaryButtonClick} size=\"sm\" className={ classnames('mb-3 mb-md-0 col-12 col-md-6 py-2', { 'me-0 me-md-3': withPrimaryButton }) } color=\"primary\" variant=\"outline\">\n\t\t\t\t\t{secondaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t\t{\n\t\t\t\twithPrimaryButton &&\n\t\t\t\t<CButton onClick={onPrimaryButtonClick} size=\"sm\" className=\"text-white col-12 col-md-6 py-2\" color=\"primary\">\n\t\t\t\t\t{primaryButtonLabel}\n\t\t\t\t</CButton>\n\t\t\t}\n\t\t</CCol>\n\t</CCol>\n)\n\nexport default ProfileTitle\n","import React from 'react'\nimport {\n\tCCol,\n\tCButton\n} from '@coreui/react'\nimport { useTranslation } from 'react-i18next'\n\nconst ProfileTitle = ({ title, editable, onEdit, buttonLabel }) => {\n\tconst { t } = useTranslation()\n\t\n\treturn (\n\t\t<>\n\t\t\t<CCol className=\"mt-5 mb-3 d-flex justify-content-between align-items-stretch\">\n\t\t\t\t<h4>{title}</h4>\n\t\t\t\t{editable && <CButton onClick={onEdit} color=\"secondary\" variant=\"ghost\">{buttonLabel || t('edit')}</CButton>}\n\t\t\t</CCol>\n\t\t</>\n\t)\n}\n\nexport default ProfileTitle\n"],"sourceRoot":""}